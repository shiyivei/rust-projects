{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0","program":"/Users/qinjianquan/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","hpack","/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=d737aafed36c23fc","-C","extra-filename=-d737aafed36c23fc","--out-dir","/Users/qinjianquan/rust-projects/web_api/target/rls/debug/deps","-L","dependency=/Users/qinjianquan/rust-projects/web_api/target/rls/debug/deps","--extern","log=/Users/qinjianquan/rust-projects/web_api/target/rls/debug/deps/liblog-3eb4ec9834189a7d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/qinjianquan/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/qinjianquan/rust-projects/web_api/target/rls/debug/deps/libhpack-d737aafed36c23fc.rmeta"},"prelude":{"crate_id":{"name":"hpack","disambiguator":[4249801024461700881,0]},"crate_root":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src","external_crates":[{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12559688530690724281,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[174151012323878463,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10235651058269579681,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12116087461466967610,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[483691506014662373,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15265217745217534414,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10524025089107222904,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[380231209694308790,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[6799936204780222302,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12259298289434686045,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[12106170270815753816,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4360076971198232690,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[9958527644082841145,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17047570305521200150,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[9299774619811639326,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[7916745300923032827,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[12567887698174358418,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[13522633749795580280,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[3127363703815277095,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":20,"id":{"name":"log","disambiguator":[7985805684590128422,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":21,"id":{"name":"log","disambiguator":[7129903212197685303,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","num":22,"id":{"name":"cfg_if","disambiguator":[770298377188312310,0]}}],"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":0,"byte_end":28298,"line_start":1,"line_end":761,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":437,"byte_end":444,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":469,"byte_end":476,"line_start":17,"line_end":17,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":0,"byte_end":28298,"line_start":1,"line_end":761,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":47},{"krate":0,"index":96},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":179}],"decl_id":null,"docs":" A module implementing HPACK functionality. Exposes a simple API for\n performing the encoding and decoding of header sets, according to the\n HPACK spec.\n","sig":null,"attributes":[{"value":"/ A module implementing HPACK functionality. Exposes a simple API for","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ performing the encoding and decoding of header sets, according to the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":72,"byte_end":145,"line_start":2,"line_end":2,"column_start":1,"column_end":74}},{"value":"/ HPACK spec.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":146,"byte_end":161,"line_start":3,"line_end":3,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encoder","qualname":"::encoder","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39}],"decl_id":null,"docs":" Implements all functionality related to encoding header blocks using\n HPACK.","sig":null,"attributes":[{"value":"/ Implements all functionality related to encoding header blocks using","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28300,"byte_end":28372,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ HPACK.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28373,"byte_end":28383,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28384,"byte_end":28387,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Clients should use the `Encoder` struct as the API for performing HPACK","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28388,"byte_end":28463,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ encoding.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28464,"byte_end":28477,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28478,"byte_end":28481,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28482,"byte_end":28496,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28497,"byte_end":28500,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Encodes a header using a literal encoding.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28501,"byte_end":28547,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28548,"byte_end":28551,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28552,"byte_end":28563,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ use hpack::Encoder;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28564,"byte_end":28587,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28588,"byte_end":28591,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let mut encoder = Encoder::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28592,"byte_end":28629,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28630,"byte_end":28633,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let headers = vec![","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28634,"byte_end":28657,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/     (b\"custom-key\".to_vec(), b\"custom-value\".to_vec()),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28658,"byte_end":28717,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/ ];","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28718,"byte_end":28724,"line_start":18,"line_end":18,"column_start":1,"column_end":7}},{"value":"/ // First encoding...","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28725,"byte_end":28749,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ let result = encoder.encode(&headers);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28750,"byte_end":28792,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/ // The result is a literal encoding of the header name and value, with an","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28793,"byte_end":28870,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ // initial byte representing the type of the encoding","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28871,"byte_end":28928,"line_start":22,"line_end":22,"column_start":1,"column_end":58}},{"value":"/ // (incremental indexing).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28929,"byte_end":28959,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28960,"byte_end":28975,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/     vec![0x40,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28976,"byte_end":28994,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/          10, b'c', b'u', b's', b't', b'o', b'm', b'-', b'k', b'e', b'y',","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":28995,"byte_end":29071,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/          12, b'c', b'u', b's', b't', b'o', b'm', b'-', b'v', b'a', b'l',","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29072,"byte_end":29148,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/          b'u', b'e'],","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29149,"byte_end":29174,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"/     result);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29175,"byte_end":29191,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29192,"byte_end":29199,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29200,"byte_end":29203,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Encodes some pseudo-headers that are already found in the static table.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29204,"byte_end":29279,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29280,"byte_end":29283,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29284,"byte_end":29295,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ use hpack::Encoder;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29296,"byte_end":29319,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29320,"byte_end":29323,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mut encoder = Encoder::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29324,"byte_end":29361,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/ let headers = vec![","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29362,"byte_end":29385,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     (b\":method\".to_vec(), b\"GET\".to_vec()),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29386,"byte_end":29433,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/     (b\":path\".to_vec(), b\"/\".to_vec()),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29434,"byte_end":29477,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/ ];","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29478,"byte_end":29484,"line_start":41,"line_end":41,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29485,"byte_end":29488,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // The headers are encoded by providing their index (with a bit flag","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29489,"byte_end":29561,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/ // indicating that the indexed representation is used).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29562,"byte_end":29621,"line_start":44,"line_end":44,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(encoder.encode(&headers), vec![2 | 0x80, 4 | 0x80]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29622,"byte_end":29689,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29690,"byte_end":29697,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":30016,"byte_end":30030,"line_start":58,"line_end":58,"column_start":8,"column_end":22},"name":"encode_integer","qualname":"::encoder::encode_integer","value":"fn encode_integer(usize, u8) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Encode an integer to the representation defined by HPACK.","sig":null,"attributes":[{"value":"/ Encode an integer to the representation defined by HPACK.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29774,"byte_end":29835,"line_start":53,"line_end":53,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29836,"byte_end":29839,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Returns a newly allocated `Vec` containing the encoded bytes.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29840,"byte_end":29905,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ Only `prefix_size` lowest-order bits of the first byte in the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29906,"byte_end":29971,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/ array are guaranteed to be used.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":29972,"byte_end":30008,"line_start":57,"line_end":57,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32109,"byte_end":32116,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":38}],"decl_id":null,"docs":" Represents an HPACK encoder. Allows clients to encode arbitrary header sets\n and tracks the encoding context. That is, encoding subsequent header sets\n will use the context built by previous encode calls.","sig":null,"attributes":[{"value":"/ Represents an HPACK encoder. Allows clients to encode arbitrary header sets","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":30732,"byte_end":30811,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/ and tracks the encoding context. That is, encoding subsequent header sets","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":30812,"byte_end":30889,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ will use the context built by previous encode calls.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":30890,"byte_end":30946,"line_start":86,"line_end":86,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":30947,"byte_end":30950,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This is the main API for performing HPACK encoding of headers.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":30951,"byte_end":31017,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31018,"byte_end":31021,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31022,"byte_end":31036,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31037,"byte_end":31040,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Encoding a header two times in a row produces two different","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31041,"byte_end":31104,"line_start":92,"line_end":92,"column_start":1,"column_end":64}},{"value":"/ representations, due to the utilization of HPACK compression.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31105,"byte_end":31170,"line_start":93,"line_end":93,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31171,"byte_end":31174,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31175,"byte_end":31186,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ use hpack::Encoder;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31187,"byte_end":31210,"line_start":96,"line_end":96,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31211,"byte_end":31214,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ let mut encoder = Encoder::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31215,"byte_end":31252,"line_start":98,"line_end":98,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31253,"byte_end":31256,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let headers = vec![","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31257,"byte_end":31280,"line_start":100,"line_end":100,"column_start":1,"column_end":24}},{"value":"/     (b\"custom-key\".to_vec(), b\"custom-value\".to_vec()),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31281,"byte_end":31340,"line_start":101,"line_end":101,"column_start":1,"column_end":60}},{"value":"/ ];","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31341,"byte_end":31347,"line_start":102,"line_end":102,"column_start":1,"column_end":7}},{"value":"/ // First encoding...","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31348,"byte_end":31372,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/ let result = encoder.encode(&headers);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31373,"byte_end":31415,"line_start":104,"line_end":104,"column_start":1,"column_end":43}},{"value":"/ // The result is a literal encoding of the header name and value, with an","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31416,"byte_end":31493,"line_start":105,"line_end":105,"column_start":1,"column_end":78}},{"value":"/ // initial byte representing the type of the encoding","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31494,"byte_end":31551,"line_start":106,"line_end":106,"column_start":1,"column_end":58}},{"value":"/ // (incremental indexing).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31552,"byte_end":31582,"line_start":107,"line_end":107,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31583,"byte_end":31598,"line_start":108,"line_end":108,"column_start":1,"column_end":16}},{"value":"/     vec![0x40,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31599,"byte_end":31617,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/          10, b'c', b'u', b's', b't', b'o', b'm', b'-', b'k', b'e', b'y',","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31618,"byte_end":31694,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/          12, b'c', b'u', b's', b't', b'o', b'm', b'-', b'v', b'a', b'l',","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31695,"byte_end":31771,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/          b'u', b'e'],","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31772,"byte_end":31797,"line_start":112,"line_end":112,"column_start":1,"column_end":26}},{"value":"/     result);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31798,"byte_end":31814,"line_start":113,"line_end":113,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31815,"byte_end":31818,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ // Encode the same headers again!","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31819,"byte_end":31856,"line_start":115,"line_end":115,"column_start":1,"column_end":38}},{"value":"/ let result = encoder.encode(&headers);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31857,"byte_end":31899,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/ // The result is simply the index of the header in the header table (62),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31900,"byte_end":31977,"line_start":117,"line_end":117,"column_start":1,"column_end":78}},{"value":"/ // with a flag representing that the decoder should use the index.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":31978,"byte_end":32048,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(vec![0x80 | 62], result);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32049,"byte_end":32089,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32090,"byte_end":32097,"line_start":120,"line_end":120,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32365,"byte_end":32368,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"fn new() -> Encoder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Encoder` with a default static table, as defined by the\n HPACK spec (Appendix A).\n","sig":null,"attributes":[{"value":"/ Creates a new `Encoder` with a default static table, as defined by the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32246,"byte_end":32320,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ HPACK spec (Appendix A).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32325,"byte_end":32353,"line_start":128,"line_end":128,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":33187,"byte_end":33193,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder>::encode","value":"fn encode(&mut Self, &Vec<(Vec<u8>, Vec<u8>)>) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the given headers using the HPACK rules and returns a newly\n allocated `Vec` containing the bytes representing the encoded header\n set.","sig":null,"attributes":[{"value":"/ Encodes the given headers using the HPACK rules and returns a newly","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32499,"byte_end":32570,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/ allocated `Vec` containing the bytes representing the encoded header","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32575,"byte_end":32647,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ set.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32652,"byte_end":32660,"line_start":137,"line_end":137,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32665,"byte_end":32668,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The encoder so far supports only a single, extremely simple encoding","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32673,"byte_end":32745,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ strategy, whereby each header is represented as an indexed header if","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32750,"byte_end":32822,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ already found in the header table and a literal otherwise. When a","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32827,"byte_end":32896,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/ header isn't found in the table, it is added if the header name wasn't","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32901,"byte_end":32975,"line_start":142,"line_end":142,"column_start":5,"column_end":79}},{"value":"/ found either (i.e. there are never two header names with different","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32980,"byte_end":33050,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ values in the produced header table). Strings are always encoded as","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":33055,"byte_end":33126,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ literals (Huffman encoding is not used).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":33131,"byte_end":33175,"line_start":145,"line_end":145,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":47},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decoder","qualname":"::decoder","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":80},{"krate":0,"index":189},{"krate":0,"index":198},{"krate":0,"index":187},{"krate":0,"index":186},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":207},{"krate":0,"index":213},{"krate":0,"index":205},{"krate":0,"index":204},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":222},{"krate":0,"index":233},{"krate":0,"index":220},{"krate":0,"index":219},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":86}],"decl_id":null,"docs":" Exposes the struct `Decoder` that allows for HPACK-encoded header blocks to\n be decoded into a header list.","sig":null,"attributes":[{"value":"/ Exposes the struct `Decoder` that allows for HPACK-encoded header blocks to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42349,"byte_end":42428,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ be decoded into a header list.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42429,"byte_end":42463,"line_start":2,"line_end":2,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42464,"byte_end":42467,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The decoder only follows HPACK rules, without performing any additional","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42468,"byte_end":42543,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ (semantic) checks on the header name/value pairs, i.e. it considers the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42544,"byte_end":42619,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ headers as opaque octets.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42620,"byte_end":42649,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42650,"byte_end":42653,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42654,"byte_end":42667,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42668,"byte_end":42671,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ A simple example of using the decoder that demonstrates its API:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42672,"byte_end":42740,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42741,"byte_end":42744,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42745,"byte_end":42756,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use hpack::Decoder;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42757,"byte_end":42780,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/ let mut decoder = Decoder::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42781,"byte_end":42818,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42819,"byte_end":42822,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let header_list = decoder.decode(&[0x82, 0x84]).unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42823,"byte_end":42884,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42885,"byte_end":42888,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(header_list, [","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42889,"byte_end":42918,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/     (b\":method\".to_vec(), b\"GET\".to_vec()),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42919,"byte_end":42966,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/     (b\":path\".to_vec(), b\"/\".to_vec()),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":42967,"byte_end":43010,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/ ]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":43011,"byte_end":43018,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":43019,"byte_end":43026,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48641,"byte_end":48654,"line_start":182,"line_end":182,"column_start":5,"column_end":18},"name":"TooManyOctets","qualname":"::decoder::IntegerDecodingError::TooManyOctets","value":"IntegerDecodingError::TooManyOctets","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" 5.1. specifies that \"excessively large integer decodings\" MUST be\n considered an error (whether the size is the number of octets or\n value). This variant corresponds to the encoding containing too many\n octets.\n","sig":null,"attributes":[{"value":"/ 5.1. specifies that \"excessively large integer decodings\" MUST be","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48401,"byte_end":48470,"line_start":178,"line_end":178,"column_start":5,"column_end":74}},{"value":"/ considered an error (whether the size is the number of octets or","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48475,"byte_end":48543,"line_start":179,"line_end":179,"column_start":5,"column_end":73}},{"value":"/ value). This variant corresponds to the encoding containing too many","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48548,"byte_end":48620,"line_start":180,"line_end":180,"column_start":5,"column_end":77}},{"value":"/ octets.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48625,"byte_end":48636,"line_start":181,"line_end":181,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":192},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48786,"byte_end":48799,"line_start":185,"line_end":185,"column_start":5,"column_end":18},"name":"ValueTooLarge","qualname":"::decoder::IntegerDecodingError::ValueTooLarge","value":"IntegerDecodingError::ValueTooLarge","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The variant corresponds to the case where the value of the integer\n being decoded exceeds a certain threshold.\n","sig":null,"attributes":[{"value":"/ The variant corresponds to the case where the value of the integer","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48660,"byte_end":48730,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being decoded exceeds a certain threshold.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48735,"byte_end":48781,"line_start":184,"line_end":184,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":194},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48941,"byte_end":48956,"line_start":188,"line_end":188,"column_start":5,"column_end":20},"name":"NotEnoughOctets","qualname":"::decoder::IntegerDecodingError::NotEnoughOctets","value":"IntegerDecodingError::NotEnoughOctets","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" When a buffer from which an integer was supposed to be encoded does\n not contain enough octets to complete the decoding.\n","sig":null,"attributes":[{"value":"/ When a buffer from which an integer was supposed to be encoded does","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48805,"byte_end":48876,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/ not contain enough octets to complete the decoding.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48881,"byte_end":48936,"line_start":187,"line_end":187,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":196},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49001,"byte_end":49014,"line_start":190,"line_end":190,"column_start":5,"column_end":18},"name":"InvalidPrefix","qualname":"::decoder::IntegerDecodingError::InvalidPrefix","value":"IntegerDecodingError::InvalidPrefix","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Only valid prefixes are [1, 8]\n","sig":null,"attributes":[{"value":"/ Only valid prefixes are [1, 8]","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48962,"byte_end":48996,"line_start":189,"line_end":189,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":189},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48374,"byte_end":48394,"line_start":177,"line_end":177,"column_start":10,"column_end":30},"name":"IntegerDecodingError","qualname":"::decoder::IntegerDecodingError","value":"enum IntegerDecodingError {\n    TooManyOctets,\n    ValueTooLarge,\n    NotEnoughOctets,\n    InvalidPrefix,\n}","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196}],"decl_id":null,"docs":" Represents all errors that can be encountered while decoding an\n integer.\n","sig":null,"attributes":[{"value":"/ Represents all errors that can be encountered while decoding an","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48213,"byte_end":48280,"line_start":171,"line_end":171,"column_start":1,"column_end":68}},{"value":"/ integer.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":48281,"byte_end":48293,"line_start":172,"line_end":172,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":208},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49211,"byte_end":49226,"line_start":200,"line_end":200,"column_start":5,"column_end":20},"name":"NotEnoughOctets","qualname":"::decoder::StringDecodingError::NotEnoughOctets","value":"StringDecodingError::NotEnoughOctets","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":210},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49232,"byte_end":49251,"line_start":201,"line_end":201,"column_start":5,"column_end":24},"name":"HuffmanDecoderError","qualname":"::decoder::StringDecodingError::HuffmanDecoderError","value":"StringDecodingError::HuffmanDecoderError(HuffmanDecoderError)","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":212},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49252,"byte_end":49271,"line_start":201,"line_end":201,"column_start":25,"column_end":44},"name":"0","qualname":"::decoder::StringDecodingError::HuffmanDecoderError::0","value":"huffman::HuffmanDecoderError","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":207},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49185,"byte_end":49204,"line_start":199,"line_end":199,"column_start":10,"column_end":29},"name":"StringDecodingError","qualname":"::decoder::StringDecodingError","value":"enum StringDecodingError {\n    NotEnoughOctets,\n    HuffmanDecoderError(HuffmanDecoderError),\n}","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":210}],"decl_id":null,"docs":" Represents all errors that can be encountered while decoding an octet\n string.\n","sig":null,"attributes":[{"value":"/ Represents all errors that can be encountered while decoding an octet","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49019,"byte_end":49092,"line_start":193,"line_end":193,"column_start":1,"column_end":74}},{"value":"/ string.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49093,"byte_end":49104,"line_start":194,"line_end":194,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":223},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49484,"byte_end":49506,"line_start":211,"line_end":211,"column_start":5,"column_end":27},"name":"HeaderIndexOutOfBounds","qualname":"::decoder::DecoderError::HeaderIndexOutOfBounds","value":"DecoderError::HeaderIndexOutOfBounds","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":225},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49512,"byte_end":49532,"line_start":212,"line_end":212,"column_start":5,"column_end":25},"name":"IntegerDecodingError","qualname":"::decoder::DecoderError::IntegerDecodingError","value":"DecoderError::IntegerDecodingError(IntegerDecodingError)","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":227},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49533,"byte_end":49553,"line_start":212,"line_end":212,"column_start":26,"column_end":46},"name":"0","qualname":"::decoder::DecoderError::IntegerDecodingError::0","value":"decoder::IntegerDecodingError","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":228},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49560,"byte_end":49579,"line_start":213,"line_end":213,"column_start":5,"column_end":24},"name":"StringDecodingError","qualname":"::decoder::DecoderError::StringDecodingError","value":"DecoderError::StringDecodingError(StringDecodingError)","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":230},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49580,"byte_end":49599,"line_start":213,"line_end":213,"column_start":25,"column_end":44},"name":"0","qualname":"::decoder::DecoderError::StringDecodingError::0","value":"decoder::StringDecodingError","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":231},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49796,"byte_end":49817,"line_start":217,"line_end":217,"column_start":5,"column_end":26},"name":"InvalidMaxDynamicSize","qualname":"::decoder::DecoderError::InvalidMaxDynamicSize","value":"DecoderError::InvalidMaxDynamicSize","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" The size of the dynamic table can never be allowed to exceed the max\n size mandated to the decoder by the protocol. (by perfroming changes\n made by SizeUpdate blocks).\n","sig":null,"attributes":[{"value":"/ The size of the dynamic table can never be allowed to exceed the max","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49606,"byte_end":49678,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ size mandated to the decoder by the protocol. (by perfroming changes","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49683,"byte_end":49755,"line_start":215,"line_end":215,"column_start":5,"column_end":77}},{"value":"/ made by SizeUpdate blocks).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49760,"byte_end":49791,"line_start":216,"line_end":216,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":222},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49465,"byte_end":49477,"line_start":210,"line_end":210,"column_start":10,"column_end":22},"name":"DecoderError","qualname":"::decoder::DecoderError","value":"enum DecoderError {\n    HeaderIndexOutOfBounds,\n    IntegerDecodingError(IntegerDecodingError),\n    StringDecodingError(StringDecodingError),\n    InvalidMaxDynamicSize,\n}","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231}],"decl_id":null,"docs":" Represents all errors that can be encountered while performing the decoding\n of an HPACK header set.\n","sig":null,"attributes":[{"value":"/ Represents all errors that can be encountered while performing the decoding","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49277,"byte_end":49356,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"/ of an HPACK header set.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49357,"byte_end":49384,"line_start":205,"line_end":205,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49896,"byte_end":49909,"line_start":221,"line_end":221,"column_start":10,"column_end":23},"name":"DecoderResult","qualname":"::decoder::DecoderResult","value":"Result<Vec<(Vec<u8>, Vec<u8>)>, DecoderError>","parent":null,"children":[],"decl_id":null,"docs":" The result returned by the `decode` method of the `Decoder`.\n","sig":null,"attributes":[{"value":"/ The result returned by the `decode` method of the `Decoder`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49822,"byte_end":49886,"line_start":220,"line_end":220,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":50215,"byte_end":50222,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":85}],"decl_id":null,"docs":" Decodes headers encoded using HPACK.","sig":null,"attributes":[{"value":"/ Decodes headers encoded using HPACK.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":49960,"byte_end":50000,"line_start":223,"line_end":223,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":50001,"byte_end":50004,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ For now, incremental decoding is not supported, i.e. it is necessary","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":50005,"byte_end":50077,"line_start":225,"line_end":225,"column_start":1,"column_end":73}},{"value":"/ to pass in the entire encoded representation of all headers to the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":50078,"byte_end":50148,"line_start":226,"line_end":226,"column_start":1,"column_end":71}},{"value":"/ decoder, rather than processing it piece-by-piece.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":50149,"byte_end":50203,"line_start":227,"line_end":227,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":50562,"byte_end":50565,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"fn new() -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Decoder` with all settings set to default values.\n","sig":null,"attributes":[{"value":"/ Creates a new `Decoder` with all settings set to default values.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":50482,"byte_end":50550,"line_start":236,"line_end":236,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":51330,"byte_end":51348,"line_start":257,"line_end":257,"column_start":12,"column_end":30},"name":"set_max_table_size","qualname":"<Decoder>::set_max_table_size","value":"fn set_max_table_size(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets a new maximum dynamic table size for the decoder.\n","sig":null,"attributes":[{"value":"/ Sets a new maximum dynamic table size for the decoder.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":51260,"byte_end":51318,"line_start":256,"line_end":256,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":51762,"byte_end":51768,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"decode","qualname":"<Decoder>::decode","value":"fn decode(&mut Self, &[u8]) -> DecoderResult","parent":null,"children":[],"decl_id":null,"docs":" Decode the header block found in the given buffer.","sig":null,"attributes":[{"value":"/ Decode the header block found in the given buffer.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":51468,"byte_end":51522,"line_start":261,"line_end":261,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":51527,"byte_end":51530,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The buffer should represent the entire block that should be decoded.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":51535,"byte_end":51607,"line_start":263,"line_end":263,"column_start":5,"column_end":77}},{"value":"/ For example, in HTTP/2, all continuation frames need to be concatenated","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":51612,"byte_end":51687,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ to a single buffer before passing them to the decoder.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":51692,"byte_end":51750,"line_start":265,"line_end":265,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":96},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"huffman","qualname":"::huffman","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":106},{"krate":0,"index":243},{"krate":0,"index":250},{"krate":0,"index":241},{"krate":0,"index":240},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":131}],"decl_id":null,"docs":" A module exposing utilities for encoding and decoding Huffman-coded octet\n strings, under the Huffman code defined by HPACK.\n (HPACK-draft-10, Appendix B)\n","sig":null,"attributes":[{"value":"/ A module exposing utilities for encoding and decoding Huffman-coded octet","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":101770,"byte_end":101847,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ strings, under the Huffman code defined by HPACK.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":101848,"byte_end":101901,"line_start":2,"line_end":2,"column_start":1,"column_end":54}},{"value":"/ (HPACK-draft-10, Appendix B)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":101902,"byte_end":101934,"line_start":3,"line_end":3,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":244},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":102827,"byte_end":102842,"line_start":35,"line_end":35,"column_start":5,"column_end":20},"name":"PaddingTooLarge","qualname":"::huffman::HuffmanDecoderError::PaddingTooLarge","value":"HuffmanDecoderError::PaddingTooLarge","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Any padding strictly larger than 7 bits MUST be interpreted as an error\n","sig":null,"attributes":[{"value":"/ Any padding strictly larger than 7 bits MUST be interpreted as an error","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":102747,"byte_end":102822,"line_start":34,"line_end":34,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":246},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":102970,"byte_end":102984,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"InvalidPadding","qualname":"::huffman::HuffmanDecoderError::InvalidPadding","value":"HuffmanDecoderError::InvalidPadding","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Any padding that does not correspond to the most significant bits of\n EOS MUST be interpreted as an error.\n","sig":null,"attributes":[{"value":"/ Any padding that does not correspond to the most significant bits of","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":102848,"byte_end":102920,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ EOS MUST be interpreted as an error.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":102925,"byte_end":102965,"line_start":37,"line_end":37,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":248},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":103054,"byte_end":103065,"line_start":40,"line_end":40,"column_start":5,"column_end":16},"name":"EOSInString","qualname":"::huffman::HuffmanDecoderError::EOSInString","value":"HuffmanDecoderError::EOSInString","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" If EOS is ever found in the string, it causes an error.\n","sig":null,"attributes":[{"value":"/ If EOS is ever found in the string, it causes an error.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":102990,"byte_end":103049,"line_start":39,"line_end":39,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":243},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":102721,"byte_end":102740,"line_start":33,"line_end":33,"column_start":10,"column_end":29},"name":"HuffmanDecoderError","qualname":"::huffman::HuffmanDecoderError","value":"enum HuffmanDecoderError { PaddingTooLarge, InvalidPadding, EOSInString, }","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248}],"decl_id":null,"docs":" Represents the error variants that the `HuffmanDecoder` can return.\n","sig":null,"attributes":[{"value":"/ Represents the error variants that the `HuffmanDecoder` can return.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":102569,"byte_end":102640,"line_start":28,"line_end":28,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":108},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":103171,"byte_end":103191,"line_start":45,"line_end":45,"column_start":10,"column_end":30},"name":"HuffmanDecoderResult","qualname":"::huffman::HuffmanDecoderResult","value":"Result<Vec<u8>, HuffmanDecoderError>","parent":null,"children":[],"decl_id":null,"docs":" The type that represents the result of the `decode` method of the\n `HuffmanDecoder`.\n","sig":null,"attributes":[{"value":"/ The type that represents the result of the `decode` method of the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":103070,"byte_end":103139,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/ `HuffmanDecoder`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":103140,"byte_end":103161,"line_start":44,"line_end":44,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":109},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":103299,"byte_end":103313,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"HuffmanDecoder","qualname":"::huffman::HuffmanDecoder","value":"HuffmanDecoder {  }","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"decl_id":null,"docs":" A simple implementation of a Huffman code decoder.\n","sig":null,"attributes":[{"value":"/ A simple implementation of a Huffman code decoder.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":103233,"byte_end":103287,"line_start":47,"line_end":47,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":105040,"byte_end":105043,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<HuffmanDecoder>::new","value":"fn new() -> HuffmanDecoder","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new HuffmanDecoder with the default Huffman code table, as\n defined in the HPACK-draft-10, Appendix B.\n","sig":null,"attributes":[{"value":"/ Constructs a new HuffmanDecoder with the default Huffman code table, as","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":104902,"byte_end":104977,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ defined in the HPACK-draft-10, Appendix B.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":104982,"byte_end":105028,"line_start":91,"line_end":91,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":105375,"byte_end":105381,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"decode","qualname":"<HuffmanDecoder>::decode","value":"fn decode(&mut Self, &[u8]) -> HuffmanDecoderResult","parent":null,"children":[],"decl_id":null,"docs":" Decodes the buffer `buf` into a newly allocated `Vec`.","sig":null,"attributes":[{"value":"/ Decodes the buffer `buf` into a newly allocated `Vec`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":105132,"byte_end":105190,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":105195,"byte_end":105198,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ It assumes that the entire buffer should be considered as the Huffman","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":105203,"byte_end":105276,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ encoding of an octet string and handles the padding rules","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":105281,"byte_end":105342,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/ accordingly.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":105347,"byte_end":105363,"line_start":100,"line_end":100,"column_start":5,"column_end":21}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32228,"byte_end":32235,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":47305,"byte_end":47324,"line_start":146,"line_end":146,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":50464,"byte_end":50471,"line_start":235,"line_end":235,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":102214,"byte_end":102231,"line_start":16,"line_end":16,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":103545,"byte_end":103559,"line_start":55,"line_end":55,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":108512,"byte_end":108523,"line_start":184,"line_end":184,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":108790,"byte_end":108801,"line_start":195,"line_end":195,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":1101,"byte_end":1117,"line_start":37,"line_end":37,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":2975,"byte_end":2987,"line_start":79,"line_end":79,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":7246,"byte_end":7258,"line_start":196,"line_end":196,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":8667,"byte_end":8682,"line_start":228,"line_end":228,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":9762,"byte_end":9773,"line_start":258,"line_end":258,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":487,"byte_end":494,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":25}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":504,"byte_end":511,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":47}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":521,"byte_end":528,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":96}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/encoder.rs","byte_start":32228,"byte_end":32235,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":47305,"byte_end":47324,"line_start":146,"line_end":146,"column_start":6,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":69},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/decoder.rs","byte_start":50464,"byte_end":50471,"line_start":235,"line_end":235,"column_start":10,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":102214,"byte_end":102231,"line_start":16,"line_end":16,"column_start":6,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":103545,"byte_end":103559,"line_start":55,"line_end":55,"column_start":6,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":108512,"byte_end":108523,"line_start":184,"line_end":184,"column_start":23,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/huffman.rs","byte_start":108790,"byte_end":108801,"line_start":195,"line_end":195,"column_start":26,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":1101,"byte_end":1117,"line_start":37,"line_end":37,"column_start":23,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":2975,"byte_end":2987,"line_start":79,"line_end":79,"column_start":6,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":7246,"byte_end":7258,"line_start":196,"line_end":196,"column_start":21,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":10009}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":8667,"byte_end":8682,"line_start":228,"line_end":228,"column_start":23,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/hpack-0.2.0/src/lib.rs","byte_start":9762,"byte_end":9773,"line_start":258,"line_end":258,"column_start":10,"column_end":21},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}}]}