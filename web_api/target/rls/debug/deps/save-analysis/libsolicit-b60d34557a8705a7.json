{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4","program":"/Users/qinjianquan/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","solicit","/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=b60d34557a8705a7","-C","extra-filename=-b60d34557a8705a7","--out-dir","/Users/qinjianquan/rust-projects/web_api/target/rls/debug/deps","-L","dependency=/Users/qinjianquan/rust-projects/web_api/target/rls/debug/deps","--extern","hpack=/Users/qinjianquan/rust-projects/web_api/target/rls/debug/deps/libhpack-d737aafed36c23fc.rmeta","--extern","log=/Users/qinjianquan/rust-projects/web_api/target/rls/debug/deps/liblog-3eb4ec9834189a7d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/qinjianquan/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/qinjianquan/rust-projects/web_api/target/rls/debug/deps/libsolicit-b60d34557a8705a7.rmeta"},"prelude":{"crate_id":{"name":"solicit","disambiguator":[1855987826606176862,0]},"crate_root":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src","external_crates":[{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12559688530690724281,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[174151012323878463,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10235651058269579681,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12116087461466967610,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[483691506014662373,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15265217745217534414,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10524025089107222904,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[380231209694308790,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[6799936204780222302,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12259298289434686045,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[12106170270815753816,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4360076971198232690,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[9958527644082841145,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17047570305521200150,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[9299774619811639326,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[7916745300923032827,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[12567887698174358418,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[13522633749795580280,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[3127363703815277095,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":20,"id":{"name":"log","disambiguator":[7985805684590128422,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":21,"id":{"name":"log","disambiguator":[7129903212197685303,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":22,"id":{"name":"cfg_if","disambiguator":[770298377188312310,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","num":23,"id":{"name":"hpack","disambiguator":[4249801024461700881,0]}}],"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","byte_start":0,"byte_end":216,"line_start":1,"line_end":12,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1087},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8631,"byte_end":8639,"line_start":33,"line_end":33,"column_start":22,"column_end":30},"alias_span":null,"name":"DataFlag","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1101},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8641,"byte_end":8650,"line_start":33,"line_end":33,"column_start":32,"column_end":41},"alias_span":null,"name":"DataFrame","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1115},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8722,"byte_end":8733,"line_start":35,"line_end":35,"column_start":25,"column_end":36},"alias_span":null,"name":"HeadersFlag","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1147},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8735,"byte_end":8747,"line_start":35,"line_end":35,"column_start":38,"column_end":50},"alias_span":null,"name":"HeadersFrame","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1190},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8821,"byte_end":8833,"line_start":37,"line_end":37,"column_start":26,"column_end":38},"alias_span":null,"name":"SettingsFlag","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8835,"byte_end":8848,"line_start":37,"line_end":37,"column_start":40,"column_end":53},"alias_span":null,"name":"SettingsFrame","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1163},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8850,"byte_end":8861,"line_start":37,"line_end":37,"column_start":55,"column_end":66},"alias_span":null,"name":"HttpSetting","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":817},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/mod.rs","byte_start":191443,"byte_end":191455,"line_start":5,"line_end":5,"column_start":23,"column_end":35},"alias_span":null,"name":"SimpleClient","value":"","parent":{"krate":0,"index":760}},{"kind":"Use","ref_id":{"krate":0,"index":995},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/mod.rs","byte_start":191478,"byte_end":191484,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":760}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","byte_start":0,"byte_end":216,"line_start":1,"line_end":12,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":760},{"krate":0,"index":1011},{"krate":0,"index":1079}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"http","qualname":"::http","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":213},{"krate":0,"index":237},{"krate":0,"index":369},{"krate":0,"index":459},{"krate":0,"index":506},{"krate":0,"index":657},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":1353},{"krate":0,"index":1371},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":1373},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":754},{"krate":0,"index":1386},{"krate":0,"index":1390},{"krate":0,"index":756},{"krate":0,"index":1392},{"krate":0,"index":1396}],"decl_id":null,"docs":" The module implements the framing layer of HTTP/2 and exposes an API for using it.\n","sig":null,"attributes":[{"value":"/ The module implements the framing layer of HTTP/2 and exposes an API for using it.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":218,"byte_end":304,"line_start":1,"line_end":1,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":21},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"frame","qualname":"::http::frame","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":69},{"krate":0,"index":114},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1210},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":201},{"krate":0,"index":209},{"krate":0,"index":211}],"decl_id":null,"docs":" The module contains the implementation of HTTP/2 frames.\n","sig":null,"attributes":[{"value":"/ The module contains the implementation of HTTP/2 frames.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":7759,"byte_end":7819,"line_start":1,"line_end":1,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":29},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"data","qualname":"::http::frame::data","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":1087},{"krate":0,"index":1094},{"krate":0,"index":1085},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1080},{"krate":0,"index":52},{"krate":0,"index":1101},{"krate":0,"index":1106},{"krate":0,"index":1099},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":54},{"krate":0,"index":61}],"decl_id":null,"docs":" The module contains the implementation of the `DATA` frame and associated flags.\n","sig":null,"attributes":[{"value":"/ The module contains the implementation of the `DATA` frame and associated flags.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":27577,"byte_end":27661,"line_start":1,"line_end":1,"column_start":1,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28080,"byte_end":28089,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"EndStream","qualname":"::http::frame::data::DataFlag::EndStream","value":"DataFlag::EndStream","parent":{"krate":0,"index":1087},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28101,"byte_end":28107,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Padded","qualname":"::http::frame::data::DataFlag::Padded","value":"DataFlag::Padded","parent":{"krate":0,"index":1087},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28065,"byte_end":28073,"line_start":22,"line_end":22,"column_start":10,"column_end":18},"name":"DataFlag","qualname":"::http::frame::data::DataFlag","value":"enum DataFlag { EndStream = , Padded = , }","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1091}],"decl_id":null,"docs":" An enum representing the flags that a `DataFrame` can have.\n The integer representation associated to each variant is that flag's\n bitmask.","sig":null,"attributes":[{"value":"/ An enum representing the flags that a `DataFrame` can have.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":27801,"byte_end":27864,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/ The integer representation associated to each variant is that flag's","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":27865,"byte_end":27937,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ bitmask.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":27938,"byte_end":27950,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":27951,"byte_end":27954,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ HTTP/2 spec, section 6.1.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":27955,"byte_end":27984,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28164,"byte_end":28171,"line_start":29,"line_end":29,"column_start":8,"column_end":15},"name":"bitmask","qualname":"<DataFlag as http::frame::Flag>::bitmask","value":"fn bitmask(&Self) -> u8","parent":{"krate":0,"index":191},"children":[],"decl_id":{"krate":0,"index":192},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28147,"byte_end":28156,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28383,"byte_end":28392,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"DataFrame","qualname":"::http::frame::data::DataFrame","value":"DataFrame { data }","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105}],"decl_id":null,"docs":" A struct representing the DATA frames of HTTP/2, as defined in the HTTP/2\n spec, section 6.1.\n","sig":null,"attributes":[{"value":"/ A struct representing the DATA frames of HTTP/2, as defined in the HTTP/2","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28216,"byte_end":28293,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ spec, section 6.1.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28294,"byte_end":28316,"line_start":35,"line_end":35,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28508,"byte_end":28512,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"name":"data","qualname":"::http::frame::data::DataFrame::data","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":" The data found in the frame as an opaque byte sequence. It never\n includes padding bytes.\n","sig":null,"attributes":[{"value":"/ The data found in the frame as an opaque byte sequence. It never","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28399,"byte_end":28467,"line_start":40,"line_end":40,"column_start":5,"column_end":73}},{"value":"/ includes padding bytes.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28472,"byte_end":28499,"line_start":41,"line_end":41,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":29078,"byte_end":29081,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<DataFrame>::new","value":"fn new(StreamId) -> DataFrame","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `DataFrame`, associated to the stream with the\n given ID.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `DataFrame`, associated to the stream with the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28978,"byte_end":29048,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ given ID.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":29053,"byte_end":29066,"line_start":56,"line_end":56,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":29467,"byte_end":29476,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"is_padded","qualname":"<DataFrame>::is_padded","value":"fn is_padded(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the DATA frame is padded, otherwise false.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the DATA frame is padded, otherwise false.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":29391,"byte_end":29455,"line_start":69,"line_end":69,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":29623,"byte_end":29639,"line_start":75,"line_end":75,"column_start":12,"column_end":28},"name":"is_end_of_stream","qualname":"<DataFrame>::is_end_of_stream","value":"fn is_end_of_stream(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whther this frame ends the stream it is associated with.\n","sig":null,"attributes":[{"value":"/ Returns whther this frame ends the stream it is associated with.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":29543,"byte_end":29611,"line_start":74,"line_end":74,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":29804,"byte_end":29815,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"set_padding","qualname":"<DataFrame>::set_padding","value":"fn set_padding(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that should be used as padding for this\n frame.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that should be used as padding for this","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":29709,"byte_end":29777,"line_start":79,"line_end":79,"column_start":5,"column_end":73}},{"value":"/ frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":29782,"byte_end":29792,"line_start":80,"line_end":80,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":31548,"byte_end":31556,"line_start":130,"line_end":130,"column_start":8,"column_end":16},"name":"from_raw","qualname":"<DataFrame as http::frame::Frame>::from_raw","value":"fn from_raw(RawFrame) -> Option<DataFrame>","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":195},"docs":" Creates a new `DataFrame` from the given `RawFrame` (i.e. header and\n payload), if possible.  Returns `None` if a valid `DataFrame` cannot be\n constructed from the given `RawFrame`.\n","sig":null,"attributes":[{"value":"/ Creates a new `DataFrame` from the given `RawFrame` (i.e. header and","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":31341,"byte_end":31413,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ payload), if possible.  Returns `None` if a valid `DataFrame` cannot be","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":31418,"byte_end":31493,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ constructed from the given `RawFrame`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":31498,"byte_end":31540,"line_start":129,"line_end":129,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":33369,"byte_end":33375,"line_start":176,"line_end":176,"column_start":8,"column_end":14},"name":"is_set","qualname":"<DataFrame as http::frame::Frame>::is_set","value":"fn is_set(&Self, DataFlag) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":196},"docs":" Tests if the given flag is set for the frame.\n","sig":null,"attributes":[{"value":"/ Tests if the given flag is set for the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":33312,"byte_end":33361,"line_start":175,"line_end":175,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":33509,"byte_end":33517,"line_start":181,"line_end":181,"column_start":8,"column_end":16},"name":"set_flag","qualname":"<DataFrame as http::frame::Frame>::set_flag","value":"fn set_flag(&mut Self, DataFlag)","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":199},"docs":" Sets the given flag for the frame.\n","sig":null,"attributes":[{"value":"/ Sets the given flag for the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":33463,"byte_end":33501,"line_start":180,"line_end":180,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":33678,"byte_end":33691,"line_start":186,"line_end":186,"column_start":8,"column_end":21},"name":"get_stream_id","qualname":"<DataFrame as http::frame::Frame>::get_stream_id","value":"fn get_stream_id(&Self) -> StreamId","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":197},"docs":" Returns the `StreamId` of the stream to which the frame is associated.\n","sig":null,"attributes":[{"value":"/ Returns the `StreamId` of the stream to which the frame is associated.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":33596,"byte_end":33670,"line_start":185,"line_end":185,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":33823,"byte_end":33833,"line_start":191,"line_end":191,"column_start":8,"column_end":18},"name":"get_header","qualname":"<DataFrame as http::frame::Frame>::get_header","value":"fn get_header(&Self) -> FrameHeader","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":198},"docs":" Returns a `FrameHeader` based on the current state of the frame.\n","sig":null,"attributes":[{"value":"/ Returns a `FrameHeader` based on the current state of the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":33747,"byte_end":33815,"line_start":190,"line_end":190,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":34007,"byte_end":34016,"line_start":196,"line_end":196,"column_start":8,"column_end":17},"name":"serialize","qualname":"<DataFrame as http::frame::Frame>::serialize","value":"fn serialize(&Self) -> Vec<u8>","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":200},"docs":" Returns a `Vec` with the serialized representation of the frame.\n","sig":null,"attributes":[{"value":"/ Returns a `Vec` with the serialized representation of the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":33931,"byte_end":33999,"line_start":195,"line_end":195,"column_start":5,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":69},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"headers","qualname":"::http::frame::headers","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":1115},{"krate":0,"index":1128},{"krate":0,"index":1113},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1108},{"krate":0,"index":92},{"krate":0,"index":1135},{"krate":0,"index":1139},{"krate":0,"index":1133},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":94},{"krate":0,"index":1147},{"krate":0,"index":1153},{"krate":0,"index":1145},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":99},{"krate":0,"index":106}],"decl_id":null,"docs":" The module contains the implementation of the `HEADERS` frame and associated flags.\n","sig":null,"attributes":[{"value":"/ The module contains the implementation of the `HEADERS` frame and associated flags.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":43751,"byte_end":43838,"line_start":1,"line_end":1,"column_start":1,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44263,"byte_end":44272,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"EndStream","qualname":"::http::frame::headers::HeadersFlag::EndStream","value":"HeadersFlag::EndStream","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44284,"byte_end":44294,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"EndHeaders","qualname":"::http::frame::headers::HeadersFlag::EndHeaders","value":"HeadersFlag::EndHeaders","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44306,"byte_end":44312,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Padded","qualname":"::http::frame::headers::HeadersFlag::Padded","value":"HeadersFlag::Padded","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44324,"byte_end":44332,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"Priority","qualname":"::http::frame::headers::HeadersFlag::Priority","value":"HeadersFlag::Priority","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44245,"byte_end":44256,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"HeadersFlag","qualname":"::http::frame::headers::HeadersFlag","value":"enum HeadersFlag { EndStream = , EndHeaders = , Padded = , Priority = , }","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1125}],"decl_id":null,"docs":" An enum representing the flags that a `HeadersFrame` can have.\n The integer representation associated to each variant is that flag's\n bitmask.","sig":null,"attributes":[{"value":"/ An enum representing the flags that a `HeadersFrame` can have.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":43978,"byte_end":44044,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/ The integer representation associated to each variant is that flag's","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44045,"byte_end":44117,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ bitmask.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44118,"byte_end":44130,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44131,"byte_end":44134,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ HTTP/2 spec, section 6.2.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44135,"byte_end":44164,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44393,"byte_end":44400,"line_start":31,"line_end":31,"column_start":8,"column_end":15},"name":"bitmask","qualname":"<HeadersFlag as http::frame::Flag>::bitmask","value":"fn bitmask(&Self) -> u8","parent":{"krate":0,"index":191},"children":[],"decl_id":{"krate":0,"index":192},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44376,"byte_end":44385,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44667,"byte_end":44683,"line_start":41,"line_end":41,"column_start":12,"column_end":28},"name":"StreamDependency","qualname":"::http::frame::headers::StreamDependency","value":"StreamDependency { stream_id, weight, is_exclusive }","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138}],"decl_id":null,"docs":" The struct represents the dependency information that can be attached to\n a stream and sent within a HEADERS frame (one with the Priority flag set).\n","sig":null,"attributes":[{"value":"/ The struct represents the dependency information that can be attached to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44445,"byte_end":44521,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ a stream and sent within a HEADERS frame (one with the Priority flag set).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44522,"byte_end":44600,"line_start":37,"line_end":37,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44759,"byte_end":44768,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"name":"stream_id","qualname":"::http::frame::headers::StreamDependency::stream_id","value":"u32","parent":{"krate":0,"index":1135},"children":[],"decl_id":null,"docs":" The ID of the stream that a particular stream depends on\n","sig":null,"attributes":[{"value":"/ The ID of the stream that a particular stream depends on","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44690,"byte_end":44750,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44993,"byte_end":44999,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"weight","qualname":"::http::frame::headers::StreamDependency::weight","value":"u8","parent":{"krate":0,"index":1135},"children":[],"decl_id":null,"docs":" The weight for the stream. The value exposed (and set) here is always\n in the range [0, 255], instead of [1, 256] \\(as defined in section 5.3.2.)\n so that the value fits into a `u8`.\n","sig":null,"attributes":[{"value":"/ The weight for the stream. The value exposed (and set) here is always","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44784,"byte_end":44857,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ in the range [0, 255], instead of [1, 256] \\(as defined in section 5.3.2.)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44862,"byte_end":44940,"line_start":45,"line_end":45,"column_start":5,"column_end":83}},{"value":"/ so that the value fits into a `u8`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44945,"byte_end":44984,"line_start":46,"line_end":46,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45083,"byte_end":45095,"line_start":49,"line_end":49,"column_start":9,"column_end":21},"name":"is_exclusive","qualname":"::http::frame::headers::StreamDependency::is_exclusive","value":"bool","parent":{"krate":0,"index":1135},"children":[],"decl_id":null,"docs":" A flag indicating whether the stream dependency is exclusive.\n","sig":null,"attributes":[{"value":"/ A flag indicating whether the stream dependency is exclusive.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45009,"byte_end":45074,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45241,"byte_end":45244,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamDependency>::new","value":"fn new(StreamId, u8, bool) -> StreamDependency","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `StreamDependency` with the given stream ID, weight, and\n exclusivity.\n","sig":null,"attributes":[{"value":"/ Creates a new `StreamDependency` with the given stream ID, weight, and","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45134,"byte_end":45208,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ exclusivity.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45213,"byte_end":45229,"line_start":54,"line_end":54,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45766,"byte_end":45771,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"parse","qualname":"<StreamDependency>::parse","value":"fn parse(&[u8]) -> StreamDependency","parent":null,"children":[],"decl_id":null,"docs":" Parses the first 5 bytes in the buffer as a `StreamDependency`.\n (Each 5-byte sequence is always decodable into a stream dependency\n structure).","sig":null,"attributes":[{"value":"/ Parses the first 5 bytes in the buffer as a `StreamDependency`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45482,"byte_end":45549,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"/ (Each 5-byte sequence is always decodable into a stream dependency","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45554,"byte_end":45624,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ structure).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45629,"byte_end":45644,"line_start":66,"line_end":66,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45649,"byte_end":45652,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45657,"byte_end":45669,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45674,"byte_end":45677,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ If the given buffer has less than 5 elements, the method will panic.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45682,"byte_end":45754,"line_start":70,"line_end":70,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":47143,"byte_end":47152,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"serialize","qualname":"<StreamDependency>::serialize","value":"fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the `StreamDependency` into a 5-byte buffer representing the\n dependency description, as described in section 6.2. of the HTTP/2\n spec:","sig":null,"attributes":[{"value":"/ Serializes the `StreamDependency` into a 5-byte buffer representing the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":46398,"byte_end":46473,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ dependency description, as described in section 6.2. of the HTTP/2","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":46478,"byte_end":46548,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ spec:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":46553,"byte_end":46562,"line_start":92,"line_end":92,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":46567,"byte_end":46570,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```notest","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":46575,"byte_end":46588,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/  0                   1                   2                   3","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":46593,"byte_end":46659,"line_start":95,"line_end":95,"column_start":5,"column_end":71}},{"value":"/  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":46664,"byte_end":46732,"line_start":96,"line_end":96,"column_start":5,"column_end":73}},{"value":"/ +-+-------------+-----------------------------------------------+","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":46737,"byte_end":46806,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ |E|                 Stream Dependency  (31)                     |","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":46811,"byte_end":46880,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ +-+-------------+-----------------------------------------------+","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":46885,"byte_end":46954,"line_start":99,"line_end":99,"column_start":5,"column_end":74}},{"value":"/ |  Weight  (8)  |","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":46959,"byte_end":46980,"line_start":100,"line_end":100,"column_start":5,"column_end":26}},{"value":"/ +-+-------------+-----------------------------------------------+","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":46985,"byte_end":47054,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":47059,"byte_end":47066,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":47071,"byte_end":47074,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Where \"E\" is set if the dependency is exclusive.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":47079,"byte_end":47131,"line_start":104,"line_end":104,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":47745,"byte_end":47757,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"HeadersFrame","qualname":"::http::frame::headers::HeadersFrame","value":"HeadersFrame { header_fragment, stream_id, stream_dep, padding_len }","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152}],"decl_id":null,"docs":" A struct representing the HEADERS frames of HTTP/2, as defined in the\n HTTP/2 spec, section 6.2.\n","sig":null,"attributes":[{"value":"/ A struct representing the HEADERS frames of HTTP/2, as defined in the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":47575,"byte_end":47648,"line_start":121,"line_end":121,"column_start":1,"column_end":74}},{"value":"/ HTTP/2 spec, section 6.2.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":47649,"byte_end":47678,"line_start":122,"line_end":122,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":47827,"byte_end":47842,"line_start":128,"line_end":128,"column_start":9,"column_end":24},"name":"header_fragment","qualname":"::http::frame::headers::HeadersFrame::header_fragment","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1147},"children":[],"decl_id":null,"docs":" The header fragment bytes stored within the frame.\n","sig":null,"attributes":[{"value":"/ The header fragment bytes stored within the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":47764,"byte_end":47818,"line_start":127,"line_end":127,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":47926,"byte_end":47935,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"stream_id","qualname":"::http::frame::headers::HeadersFrame::stream_id","value":"u32","parent":{"krate":0,"index":1147},"children":[],"decl_id":null,"docs":" The ID of the stream with which this frame is associated\n","sig":null,"attributes":[{"value":"/ The ID of the stream with which this frame is associated","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":47857,"byte_end":47917,"line_start":129,"line_end":129,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":48006,"byte_end":48016,"line_start":132,"line_end":132,"column_start":9,"column_end":19},"name":"stream_dep","qualname":"::http::frame::headers::HeadersFrame::stream_dep","value":"std::option::Option<http::frame::headers::StreamDependency>","parent":{"krate":0,"index":1147},"children":[],"decl_id":null,"docs":" The stream dependency information, if any.\n","sig":null,"attributes":[{"value":"/ The stream dependency information, if any.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":47951,"byte_end":47997,"line_start":131,"line_end":131,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":48095,"byte_end":48106,"line_start":134,"line_end":134,"column_start":9,"column_end":20},"name":"padding_len","qualname":"::http::frame::headers::HeadersFrame::padding_len","value":"std::option::Option<u8>","parent":{"krate":0,"index":1147},"children":[],"decl_id":null,"docs":" The length of the padding, if any.\n","sig":null,"attributes":[{"value":"/ The length of the padding, if any.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":48048,"byte_end":48086,"line_start":133,"line_end":133,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":48383,"byte_end":48386,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<HeadersFrame>::new","value":"fn new(Vec<u8>, StreamId) -> HeadersFrame","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `HeadersFrame` with the given header fragment and stream\n ID. No padding, no stream dependency, and no flags are set.\n","sig":null,"attributes":[{"value":"/ Creates a new `HeadersFrame` with the given header fragment and stream","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":48229,"byte_end":48303,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ ID. No padding, no stream dependency, and no flags are set.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":48308,"byte_end":48371,"line_start":141,"line_end":141,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":48807,"byte_end":48822,"line_start":154,"line_end":154,"column_start":12,"column_end":27},"name":"with_dependency","qualname":"<HeadersFrame>::with_dependency","value":"fn with_dependency(Vec<u8>, StreamId, StreamDependency) -> HeadersFrame","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `HeadersFrame` with the given header fragment, stream ID\n and stream dependency information. No padding and no flags are set.\n","sig":null,"attributes":[{"value":"/ Creates a new `HeadersFrame` with the given header fragment, stream ID","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":48645,"byte_end":48719,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ and stream dependency information. No padding and no flags are set.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":48724,"byte_end":48795,"line_start":153,"line_end":153,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":49369,"byte_end":49383,"line_start":170,"line_end":170,"column_start":12,"column_end":26},"name":"is_headers_end","qualname":"<HeadersFrame>::is_headers_end","value":"fn is_headers_end(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this frame ends the headers. If not, there MUST be a\n number of follow up CONTINUATION frames that send the rest of the\n header data.\n","sig":null,"attributes":[{"value":"/ Returns whether this frame ends the headers. If not, there MUST be a","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":49190,"byte_end":49262,"line_start":167,"line_end":167,"column_start":5,"column_end":77}},{"value":"/ number of follow up CONTINUATION frames that send the rest of the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":49267,"byte_end":49336,"line_start":168,"line_end":168,"column_start":5,"column_end":74}},{"value":"/ header data.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":49341,"byte_end":49357,"line_start":169,"line_end":169,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":49537,"byte_end":49553,"line_start":175,"line_end":175,"column_start":12,"column_end":28},"name":"is_end_of_stream","qualname":"<HeadersFrame>::is_end_of_stream","value":"fn is_end_of_stream(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whther this frame ends the stream it is associated with.\n","sig":null,"attributes":[{"value":"/ Returns whther this frame ends the stream it is associated with.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":49457,"byte_end":49525,"line_start":174,"line_end":174,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":49730,"byte_end":49741,"line_start":181,"line_end":181,"column_start":12,"column_end":23},"name":"set_padding","qualname":"<HeadersFrame>::set_padding","value":"fn set_padding(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Sets the padding length for the frame, as well as the corresponding\n Padded flag.\n","sig":null,"attributes":[{"value":"/ Sets the padding length for the frame, as well as the corresponding","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":49626,"byte_end":49697,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/ Padded flag.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":49702,"byte_end":49718,"line_start":180,"line_end":180,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":50951,"byte_end":50959,"line_start":218,"line_end":218,"column_start":8,"column_end":16},"name":"from_raw","qualname":"<HeadersFrame as http::frame::Frame>::from_raw","value":"fn from_raw(RawFrame) -> Option<HeadersFrame>","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":195},"docs":" Creates a new `HeadersFrame` with the given `RawFrame` (i.e. header and\n payload), if possible.","sig":null,"attributes":[{"value":"/ Creates a new `HeadersFrame` with the given `RawFrame` (i.e. header and","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":50603,"byte_end":50678,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ payload), if possible.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":50683,"byte_end":50709,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":50714,"byte_end":50717,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":50722,"byte_end":50735,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":50740,"byte_end":50743,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ `None` if a valid `HeadersFrame` cannot be constructed from the given","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":50748,"byte_end":50821,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ `RawFrame`. The stream ID *must not* be 0.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":50826,"byte_end":50872,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":50877,"byte_end":50880,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Otherwise, returns a newly constructed `HeadersFrame`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":50885,"byte_end":50943,"line_start":217,"line_end":217,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":52765,"byte_end":52771,"line_start":267,"line_end":267,"column_start":8,"column_end":14},"name":"is_set","qualname":"<HeadersFrame as http::frame::Frame>::is_set","value":"fn is_set(&Self, HeadersFlag) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":196},"docs":" Tests if the given flag is set for the frame.\n","sig":null,"attributes":[{"value":"/ Tests if the given flag is set for the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":52708,"byte_end":52757,"line_start":266,"line_end":266,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":53021,"byte_end":53034,"line_start":274,"line_end":274,"column_start":8,"column_end":21},"name":"get_stream_id","qualname":"<HeadersFrame as http::frame::Frame>::get_stream_id","value":"fn get_stream_id(&Self) -> StreamId","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":197},"docs":" Returns the `StreamId` of the stream to which the frame is associated.","sig":null,"attributes":[{"value":"/ Returns the `StreamId` of the stream to which the frame is associated.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":52862,"byte_end":52936,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":52941,"byte_end":52944,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ A `SettingsFrame` always has to be associated to stream `0`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":52949,"byte_end":53013,"line_start":273,"line_end":273,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":53168,"byte_end":53178,"line_start":279,"line_end":279,"column_start":8,"column_end":18},"name":"get_header","qualname":"<HeadersFrame as http::frame::Frame>::get_header","value":"fn get_header(&Self) -> FrameHeader","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":198},"docs":" Returns a `FrameHeader` based on the current state of the `Frame`.\n","sig":null,"attributes":[{"value":"/ Returns a `FrameHeader` based on the current state of the `Frame`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":53090,"byte_end":53160,"line_start":278,"line_end":278,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":53322,"byte_end":53330,"line_start":284,"line_end":284,"column_start":8,"column_end":16},"name":"set_flag","qualname":"<HeadersFrame as http::frame::Frame>::set_flag","value":"fn set_flag(&mut Self, HeadersFlag)","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":199},"docs":" Sets the given flag for the frame.\n","sig":null,"attributes":[{"value":"/ Sets the given flag for the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":53276,"byte_end":53314,"line_start":283,"line_end":283,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":53659,"byte_end":53668,"line_start":294,"line_end":294,"column_start":8,"column_end":17},"name":"serialize","qualname":"<HeadersFrame as http::frame::Frame>::serialize","value":"fn serialize(&Self) -> Vec<u8>","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":200},"docs":" Returns a `Vec` with the serialized representation of the frame.","sig":null,"attributes":[{"value":"/ Returns a `Vec` with the serialized representation of the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":53412,"byte_end":53480,"line_start":288,"line_end":288,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":53485,"byte_end":53488,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":53493,"byte_end":53505,"line_start":290,"line_end":290,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":53510,"byte_end":53513,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If the `HeadersFlag::Priority` flag was set, but no stream dependency","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":53518,"byte_end":53591,"line_start":292,"line_end":292,"column_start":5,"column_end":78}},{"value":"/ information is given (i.e. `stream_dep` is `None`).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":53596,"byte_end":53651,"line_start":293,"line_end":293,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":114},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"settings","qualname":"::http::frame::settings","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":1163},{"krate":0,"index":1182},{"krate":0,"index":1161},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1155},{"krate":0,"index":134},{"krate":0,"index":1190},{"krate":0,"index":1194},{"krate":0,"index":1188},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1183},{"krate":0,"index":141},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1199},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":143},{"krate":0,"index":152}],"decl_id":null,"docs":" The module contains the implementation of the `SETTINGS` frame and associated flags.\n","sig":null,"attributes":[{"value":"/ The module contains the implementation of the `SETTINGS` frame and associated flags.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":64977,"byte_end":65065,"line_start":1,"line_end":1,"column_start":1,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65438,"byte_end":65453,"line_start":21,"line_end":21,"column_start":5,"column_end":20},"name":"HeaderTableSize","qualname":"::http::frame::settings::HttpSetting::HeaderTableSize","value":"HttpSetting::HeaderTableSize(u32)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65454,"byte_end":65457,"line_start":21,"line_end":21,"column_start":21,"column_end":24},"name":"0","qualname":"::http::frame::settings::HttpSetting::HeaderTableSize::0","value":"u32","parent":{"krate":0,"index":1164},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65464,"byte_end":65474,"line_start":22,"line_end":22,"column_start":5,"column_end":15},"name":"EnablePush","qualname":"::http::frame::settings::HttpSetting::EnablePush","value":"HttpSetting::EnablePush(u32)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65475,"byte_end":65478,"line_start":22,"line_end":22,"column_start":16,"column_end":19},"name":"0","qualname":"::http::frame::settings::HttpSetting::EnablePush::0","value":"u32","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65485,"byte_end":65505,"line_start":23,"line_end":23,"column_start":5,"column_end":25},"name":"MaxConcurrentStreams","qualname":"::http::frame::settings::HttpSetting::MaxConcurrentStreams","value":"HttpSetting::MaxConcurrentStreams(u32)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65506,"byte_end":65509,"line_start":23,"line_end":23,"column_start":26,"column_end":29},"name":"0","qualname":"::http::frame::settings::HttpSetting::MaxConcurrentStreams::0","value":"u32","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65516,"byte_end":65533,"line_start":24,"line_end":24,"column_start":5,"column_end":22},"name":"InitialWindowSize","qualname":"::http::frame::settings::HttpSetting::InitialWindowSize","value":"HttpSetting::InitialWindowSize(u32)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65534,"byte_end":65537,"line_start":24,"line_end":24,"column_start":23,"column_end":26},"name":"0","qualname":"::http::frame::settings::HttpSetting::InitialWindowSize::0","value":"u32","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65544,"byte_end":65556,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"MaxFrameSize","qualname":"::http::frame::settings::HttpSetting::MaxFrameSize","value":"HttpSetting::MaxFrameSize(u32)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65557,"byte_end":65560,"line_start":25,"line_end":25,"column_start":18,"column_end":21},"name":"0","qualname":"::http::frame::settings::HttpSetting::MaxFrameSize::0","value":"u32","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65567,"byte_end":65584,"line_start":26,"line_end":26,"column_start":5,"column_end":22},"name":"MaxHeaderListSize","qualname":"::http::frame::settings::HttpSetting::MaxHeaderListSize","value":"HttpSetting::MaxHeaderListSize(u32)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65585,"byte_end":65588,"line_start":26,"line_end":26,"column_start":23,"column_end":26},"name":"0","qualname":"::http::frame::settings::HttpSetting::MaxHeaderListSize::0","value":"u32","parent":{"krate":0,"index":1179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65420,"byte_end":65431,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"name":"HttpSetting","qualname":"::http::frame::settings::HttpSetting","value":"enum HttpSetting {\n    HeaderTableSize(u32),\n    EnablePush(u32),\n    MaxConcurrentStreams(u32),\n    InitialWindowSize(u32),\n    MaxFrameSize(u32),\n    MaxHeaderListSize(u32),\n}","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1167},{"krate":0,"index":1170},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1179}],"decl_id":null,"docs":" An enum that lists all valid settings that can be sent in a SETTINGS\n frame.","sig":null,"attributes":[{"value":"/ An enum that lists all valid settings that can be sent in a SETTINGS","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65179,"byte_end":65251,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65252,"byte_end":65262,"line_start":13,"line_end":13,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65263,"byte_end":65266,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Each setting has a value that is a 32 bit unsigned integer (6.5.1.).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65267,"byte_end":65339,"line_start":15,"line_end":15,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65792,"byte_end":65799,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"from_id","qualname":"<HttpSetting>::from_id","value":"fn from_id(u16, u32) -> Option<HttpSetting>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `HttpSetting` with the correct variant corresponding to\n the given setting id, based on the settings IDs defined in section\n 6.5.2.\n","sig":null,"attributes":[{"value":"/ Creates a new `HttpSetting` with the correct variant corresponding to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65617,"byte_end":65690,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ the given setting id, based on the settings IDs defined in section","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65695,"byte_end":65765,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ 6.5.2.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65770,"byte_end":65780,"line_start":32,"line_end":32,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":67079,"byte_end":67085,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"get_id","qualname":"<HttpSetting>::get_id","value":"fn get_id(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the setting ID as an unsigned 16 bit integer, as defined in\n section 6.5.2.\n","sig":null,"attributes":[{"value":"/ Returns the setting ID as an unsigned 16 bit integer, as defined in","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":66973,"byte_end":67044,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ section 6.5.2.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":67049,"byte_end":67067,"line_start":63,"line_end":63,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":67529,"byte_end":67536,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_val","qualname":"<HttpSetting>::get_val","value":"fn get_val(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets the setting value by unpacking it from the wrapped `u32`.\n","sig":null,"attributes":[{"value":"/ Gets the setting value by unpacking it from the wrapped `u32`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":67451,"byte_end":67517,"line_start":75,"line_end":75,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68792,"byte_end":68795,"line_start":112,"line_end":112,"column_start":5,"column_end":8},"name":"Ack","qualname":"::http::frame::settings::SettingsFlag::Ack","value":"SettingsFlag::Ack","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68773,"byte_end":68785,"line_start":111,"line_end":111,"column_start":10,"column_end":22},"name":"SettingsFlag","qualname":"::http::frame::settings::SettingsFlag","value":"enum SettingsFlag { Ack = , }","parent":null,"children":[{"krate":0,"index":1191}],"decl_id":null,"docs":" An enum representing the flags that a `SettingsFrame` can have.\n The integer representation associated to each variant is that flag's\n bitmask.","sig":null,"attributes":[{"value":"/ An enum representing the flags that a `SettingsFrame` can have.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68505,"byte_end":68572,"line_start":102,"line_end":102,"column_start":1,"column_end":68}},{"value":"/ The integer representation associated to each variant is that flag's","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68573,"byte_end":68645,"line_start":103,"line_end":103,"column_start":1,"column_end":73}},{"value":"/ bitmask.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68646,"byte_end":68658,"line_start":104,"line_end":104,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68659,"byte_end":68662,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ HTTP/2 spec, section 6.5.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68663,"byte_end":68692,"line_start":106,"line_end":106,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68856,"byte_end":68863,"line_start":117,"line_end":117,"column_start":8,"column_end":15},"name":"bitmask","qualname":"<SettingsFlag as http::frame::Flag>::bitmask","value":"fn bitmask(&Self) -> u8","parent":{"krate":0,"index":191},"children":[],"decl_id":{"krate":0,"index":192},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68839,"byte_end":68848,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69758,"byte_end":69771,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"SettingsFrame","qualname":"::http::frame::settings::SettingsFrame","value":"SettingsFrame { settings }","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203}],"decl_id":null,"docs":" A struct representing the SETTINGS frames of HTTP/2, as defined in the\n HTTP/2 spec, section 6.5.","sig":null,"attributes":[{"value":"/ A struct representing the SETTINGS frames of HTTP/2, as defined in the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68908,"byte_end":68982,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ HTTP/2 spec, section 6.5.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68983,"byte_end":69012,"line_start":123,"line_end":123,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69013,"byte_end":69016,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The struct does not try to prevent the client from creating malformed","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69017,"byte_end":69090,"line_start":125,"line_end":125,"column_start":1,"column_end":74}},{"value":"/ SETTINGS frames, such as ones that have the ACK flag set along with some","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69091,"byte_end":69167,"line_start":126,"line_end":126,"column_start":1,"column_end":77}},{"value":"/ settings values. The users are responsible to follow the prescribed rules","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69168,"byte_end":69245,"line_start":127,"line_end":127,"column_start":1,"column_end":78}},{"value":"/ before sending the frame to the peer.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69246,"byte_end":69287,"line_start":128,"line_end":128,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69288,"byte_end":69291,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ On parsing received frames, it treats the following as errors:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69292,"byte_end":69358,"line_start":130,"line_end":130,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69359,"byte_end":69362,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ - ACK flag and a number of settings both set","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69363,"byte_end":69411,"line_start":132,"line_end":132,"column_start":1,"column_end":49}},{"value":"/ - Payload length not a multiple of 6","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69412,"byte_end":69452,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"/ - Stream ID not zero (SETTINGS frames MUST be associated to stream 0)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69453,"byte_end":69526,"line_start":134,"line_end":134,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69527,"byte_end":69530,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ What is *not* treated as an error (for now) are settings values out of","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69531,"byte_end":69605,"line_start":136,"line_end":136,"column_start":1,"column_end":75}},{"value":"/ allowed bounds such as a EnablePush being set to something other than 0 or","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69606,"byte_end":69684,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/ 1.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69685,"byte_end":69691,"line_start":138,"line_end":138,"column_start":1,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69987,"byte_end":69995,"line_start":146,"line_end":146,"column_start":9,"column_end":17},"name":"settings","qualname":"::http::frame::settings::SettingsFrame::settings","value":"std::vec::Vec<http::frame::settings::HttpSetting>","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" Contains all the settings that are currently set in the frame. It is\n safe to access this field (to read, add, or remove settings), even\n though a helper method `add_setting` exists.\n","sig":null,"attributes":[{"value":"/ Contains all the settings that are currently set in the frame. It is","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69778,"byte_end":69850,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/ safe to access this field (to read, add, or remove settings), even","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69855,"byte_end":69925,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ though a helper method `add_setting` exists.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":69930,"byte_end":69978,"line_start":145,"line_end":145,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":70205,"byte_end":70208,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"new","qualname":"<SettingsFrame>::new","value":"fn new() -> SettingsFrame","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SettingsFrame`\n","sig":null,"attributes":[{"value":"/ Creates a new `SettingsFrame`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":70160,"byte_end":70193,"line_start":153,"line_end":153,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":70502,"byte_end":70509,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"new_ack","qualname":"<SettingsFrame>::new_ack","value":"fn new_ack() -> SettingsFrame","parent":null,"children":[],"decl_id":null,"docs":" A convenience constructor that returns a `SettingsFrame` with the ACK\n flag already set and no settings.\n","sig":null,"attributes":[{"value":"/ A convenience constructor that returns a `SettingsFrame` with the ACK","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":70375,"byte_end":70448,"line_start":162,"line_end":162,"column_start":5,"column_end":78}},{"value":"/ flag already set and no settings.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":70453,"byte_end":70490,"line_start":163,"line_end":163,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":70710,"byte_end":70721,"line_start":172,"line_end":172,"column_start":12,"column_end":23},"name":"add_setting","qualname":"<SettingsFrame>::add_setting","value":"fn add_setting(&mut Self, HttpSetting)","parent":null,"children":[],"decl_id":null,"docs":" Adds the given setting to the frame.\n","sig":null,"attributes":[{"value":"/ Adds the given setting to the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":70658,"byte_end":70698,"line_start":171,"line_end":171,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":70951,"byte_end":70958,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"set_ack","qualname":"<SettingsFrame>::set_ack","value":"fn set_ack(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets the ACK flag for the frame. This method is just a convenience\n method for calling `frame.set_flag(SettingsFlag::Ack)`.\n","sig":null,"attributes":[{"value":"/ Sets the ACK flag for the frame. This method is just a convenience","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":70805,"byte_end":70875,"line_start":176,"line_end":176,"column_start":5,"column_end":75}},{"value":"/ method for calling `frame.set_flag(SettingsFlag::Ack)`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":70880,"byte_end":70939,"line_start":177,"line_end":177,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":71101,"byte_end":71107,"line_start":183,"line_end":183,"column_start":12,"column_end":18},"name":"is_ack","qualname":"<SettingsFrame>::is_ack","value":"fn is_ack(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the `SettingsFrame` has an ACK attached to it.\n","sig":null,"attributes":[{"value":"/ Checks whether the `SettingsFrame` has an ACK attached to it.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":71024,"byte_end":71089,"line_start":182,"line_end":182,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72894,"byte_end":72902,"line_start":233,"line_end":233,"column_start":8,"column_end":16},"name":"from_raw","qualname":"<SettingsFrame as http::frame::Frame>::from_raw","value":"fn from_raw(RawFrame) -> Option<SettingsFrame>","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":195},"docs":" Creates a new `SettingsFrame` with the given `RawFrame` (i.e. header and\n payload), if possible.","sig":null,"attributes":[{"value":"/ Creates a new `SettingsFrame` with the given `RawFrame` (i.e. header and","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72393,"byte_end":72469,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/ payload), if possible.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72474,"byte_end":72500,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72505,"byte_end":72508,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72513,"byte_end":72526,"line_start":225,"line_end":225,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72531,"byte_end":72534,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ `None` if a valid `SettingsFrame` cannot be constructed from the given","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72539,"byte_end":72613,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/ `RawFrame`. The stream ID *must* be 0 in order for the frame to be","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72618,"byte_end":72688,"line_start":228,"line_end":228,"column_start":5,"column_end":75}},{"value":"/ valid. If the `ACK` flag is set, there MUST not be a payload. The","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72693,"byte_end":72762,"line_start":229,"line_end":229,"column_start":5,"column_end":74}},{"value":"/ total payload length must be multiple of 6.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72767,"byte_end":72814,"line_start":230,"line_end":230,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72819,"byte_end":72822,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Otherwise, returns a newly constructed `SettingsFrame`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72827,"byte_end":72886,"line_start":232,"line_end":232,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":74385,"byte_end":74391,"line_start":275,"line_end":275,"column_start":8,"column_end":14},"name":"is_set","qualname":"<SettingsFrame as http::frame::Frame>::is_set","value":"fn is_set(&Self, SettingsFlag) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":196},"docs":" Tests if the given flag is set for the frame.\n","sig":null,"attributes":[{"value":"/ Tests if the given flag is set for the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":74328,"byte_end":74377,"line_start":274,"line_end":274,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":74642,"byte_end":74655,"line_start":282,"line_end":282,"column_start":8,"column_end":21},"name":"get_stream_id","qualname":"<SettingsFrame as http::frame::Frame>::get_stream_id","value":"fn get_stream_id(&Self) -> StreamId","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":197},"docs":" Returns the `StreamId` of the stream to which the frame is associated.","sig":null,"attributes":[{"value":"/ Returns the `StreamId` of the stream to which the frame is associated.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":74483,"byte_end":74557,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":74562,"byte_end":74565,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ A `SettingsFrame` always has to be associated to stream `0`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":74570,"byte_end":74634,"line_start":281,"line_end":281,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":74776,"byte_end":74786,"line_start":287,"line_end":287,"column_start":8,"column_end":18},"name":"get_header","qualname":"<SettingsFrame as http::frame::Frame>::get_header","value":"fn get_header(&Self) -> FrameHeader","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":198},"docs":" Returns a `FrameHeader` based on the current state of the `Frame`.\n","sig":null,"attributes":[{"value":"/ Returns a `FrameHeader` based on the current state of the `Frame`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":74698,"byte_end":74768,"line_start":286,"line_end":286,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":74917,"byte_end":74925,"line_start":292,"line_end":292,"column_start":8,"column_end":16},"name":"set_flag","qualname":"<SettingsFrame as http::frame::Frame>::set_flag","value":"fn set_flag(&mut Self, SettingsFlag)","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":199},"docs":" Sets the given flag for the frame.\n","sig":null,"attributes":[{"value":"/ Sets the given flag for the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":74871,"byte_end":74909,"line_start":291,"line_end":291,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":75084,"byte_end":75093,"line_start":297,"line_end":297,"column_start":8,"column_end":17},"name":"serialize","qualname":"<SettingsFrame as http::frame::Frame>::serialize","value":"fn serialize(&Self) -> Vec<u8>","parent":{"krate":0,"index":193},"children":[],"decl_id":{"krate":0,"index":200},"docs":" Returns a `Vec` with the serialized representation of the frame.\n","sig":null,"attributes":[{"value":"/ Returns a `Vec` with the serialized representation of the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":75008,"byte_end":75076,"line_start":296,"line_end":296,"column_start":5,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":184},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8962,"byte_end":8979,"line_start":41,"line_end":41,"column_start":10,"column_end":27},"name":"FrameHeaderBuffer","qualname":"::http::frame::FrameHeaderBuffer","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" An alias for the 9-byte buffer that each HTTP/2 frame header must be stored\n in.\n","sig":null,"attributes":[{"value":"/ An alias for the 9-byte buffer that each HTTP/2 frame header must be stored","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8865,"byte_end":8944,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ in.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8945,"byte_end":8952,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":186},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":9090,"byte_end":9101,"line_start":44,"line_end":44,"column_start":10,"column_end":21},"name":"FrameHeader","qualname":"::http::frame::FrameHeader","value":"(u32, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" An alias for the 4-tuple representing the components of each HTTP/2 frame\n header.\n","sig":null,"attributes":[{"value":"/ An alias for the 4-tuple representing the components of each HTTP/2 frame","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8991,"byte_end":9068,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ header.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":9069,"byte_end":9080,"line_start":43,"line_end":43,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":187},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":9406,"byte_end":9419,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"unpack_header","qualname":"::http::frame::unpack_header","value":"fn unpack_header(&FrameHeaderBuffer) -> FrameHeader","parent":null,"children":[],"decl_id":null,"docs":" Deconstructs a `FrameHeader` into its corresponding 4 components,\n represented as a 4-tuple: `(length, frame_type, flags, stream_id)`.","sig":null,"attributes":[{"value":"/ Deconstructs a `FrameHeader` into its corresponding 4 components,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":9125,"byte_end":9194,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/ represented as a 4-tuple: `(length, frame_type, flags, stream_id)`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":9195,"byte_end":9266,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":9267,"byte_end":9270,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The frame `type` and `flags` components are returned as their original","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":9271,"byte_end":9345,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/ octet representation, rather than reinterpreted.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":9346,"byte_end":9398,"line_start":50,"line_end":50,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":188},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":9845,"byte_end":9856,"line_start":64,"line_end":64,"column_start":8,"column_end":19},"name":"pack_header","qualname":"::http::frame::pack_header","value":"fn pack_header(&FrameHeader) -> FrameHeaderBuffer","parent":null,"children":[],"decl_id":null,"docs":" Constructs a buffer of 9 bytes that represents the given `FrameHeader`.\n","sig":null,"attributes":[{"value":"/ Constructs a buffer of 9 bytes that represents the given `FrameHeader`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":9762,"byte_end":9837,"line_start":63,"line_end":63,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":191},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":11535,"byte_end":11539,"line_start":112,"line_end":112,"column_start":11,"column_end":15},"name":"Flag","qualname":"::http::frame::Flag","value":"Flag","parent":null,"children":[{"krate":0,"index":192}],"decl_id":null,"docs":" A trait that all HTTP/2 frame header flags need to implement.\n","sig":null,"attributes":[{"value":"/ A trait that all HTTP/2 frame header flags need to implement.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":11459,"byte_end":11524,"line_start":111,"line_end":111,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":11602,"byte_end":11609,"line_start":114,"line_end":114,"column_start":8,"column_end":15},"name":"bitmask","qualname":"::http::frame::Flag::bitmask","value":"fn bitmask(&Self) -> u8","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Returns a bit mask that represents the flag.\n","sig":null,"attributes":[{"value":"/ Returns a bit mask that represents the flag.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":11546,"byte_end":11594,"line_start":113,"line_end":113,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":193},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":11698,"byte_end":11703,"line_start":118,"line_end":118,"column_start":11,"column_end":16},"name":"Frame","qualname":"::http::frame::Frame","value":"Frame: Sized","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"decl_id":null,"docs":" A trait that all HTTP/2 frame structs need to implement.\n","sig":null,"attributes":[{"value":"/ A trait that all HTTP/2 frame structs need to implement.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":11627,"byte_end":11687,"line_start":117,"line_end":117,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":194},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":11879,"byte_end":11887,"line_start":121,"line_end":121,"column_start":10,"column_end":18},"name":"FlagType","qualname":"::http::frame::Frame::FlagType","value":"type FlagType: Flag;","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" The type that represents the flags that the particular `Frame` can take.\n This makes sure that only valid `Flag`s are used with each `Frame`.\n","sig":null,"attributes":[{"value":"/ The type that represents the flags that the particular `Frame` can take.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":11717,"byte_end":11793,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/ This makes sure that only valid `Flag`s are used with each `Frame`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":11798,"byte_end":11869,"line_start":120,"line_end":120,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12360,"byte_end":12368,"line_start":134,"line_end":134,"column_start":8,"column_end":16},"name":"from_raw","qualname":"::http::frame::Frame::from_raw","value":"fn from_raw(RawFrame) -> Option<Self>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Creates a new `Frame` from the given `RawFrame` (i.e. header and\n payload), if possible.","sig":null,"attributes":[{"value":"/ Creates a new `Frame` from the given `RawFrame` (i.e. header and","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":11900,"byte_end":11968,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ payload), if possible.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":11973,"byte_end":11999,"line_start":124,"line_end":124,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12004,"byte_end":12007,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12012,"byte_end":12025,"line_start":126,"line_end":126,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12030,"byte_end":12033,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ `None` if a valid `Frame` cannot be constructed from the given","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12038,"byte_end":12104,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/ `RawFrame`. Some reasons why this may happen is a wrong frame type in","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12109,"byte_end":12182,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/ the header, a body that cannot be decoded according to the particular","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12187,"byte_end":12260,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ frame's rules, etc.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12265,"byte_end":12288,"line_start":131,"line_end":131,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12293,"byte_end":12296,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Otherwise, returns a newly constructed `Frame`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12301,"byte_end":12352,"line_start":133,"line_end":133,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12469,"byte_end":12475,"line_start":137,"line_end":137,"column_start":8,"column_end":14},"name":"is_set","qualname":"::http::frame::Frame::is_set","value":"fn is_set(&Self, Self::FlagType) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Tests if the given flag is set for the frame.\n","sig":null,"attributes":[{"value":"/ Tests if the given flag is set for the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12412,"byte_end":12461,"line_start":136,"line_end":136,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12599,"byte_end":12612,"line_start":139,"line_end":139,"column_start":8,"column_end":21},"name":"get_stream_id","qualname":"::http::frame::Frame::get_stream_id","value":"fn get_stream_id(&Self) -> StreamId","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Returns the `StreamId` of the stream to which the frame is associated\n","sig":null,"attributes":[{"value":"/ Returns the `StreamId` of the stream to which the frame is associated","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12518,"byte_end":12591,"line_start":138,"line_end":138,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12715,"byte_end":12725,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"get_header","qualname":"::http::frame::Frame::get_header","value":"fn get_header(&Self) -> FrameHeader","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Returns a `FrameHeader` based on the current state of the `Frame`.\n","sig":null,"attributes":[{"value":"/ Returns a `FrameHeader` based on the current state of the `Frame`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12637,"byte_end":12707,"line_start":140,"line_end":140,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12800,"byte_end":12808,"line_start":144,"line_end":144,"column_start":8,"column_end":16},"name":"set_flag","qualname":"::http::frame::Frame::set_flag","value":"fn set_flag(&mut Self, Self::FlagType)","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Sets the given flag for the frame.\n","sig":null,"attributes":[{"value":"/ Sets the given flag for the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12754,"byte_end":12792,"line_start":143,"line_end":143,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12924,"byte_end":12933,"line_start":147,"line_end":147,"column_start":8,"column_end":17},"name":"serialize","qualname":"::http::frame::Frame::serialize","value":"fn serialize(&Self) -> Vec<u8>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Returns a `Vec` with the serialized representation of the frame.\n","sig":null,"attributes":[{"value":"/ Returns a `Vec` with the serialized representation of the frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12848,"byte_end":12916,"line_start":146,"line_end":146,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13557,"byte_end":13565,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"RawFrame","qualname":"::http::frame::RawFrame","value":"RawFrame {  }","parent":null,"children":[{"krate":0,"index":1213}],"decl_id":null,"docs":" A struct that defines the format of the raw HTTP/2 frame, i.e. the frame\n as it is read from the wire.","sig":null,"attributes":[{"value":"/ A struct that defines the format of the raw HTTP/2 frame, i.e. the frame","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":12956,"byte_end":13032,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/ as it is read from the wire.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13033,"byte_end":13065,"line_start":151,"line_end":151,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13066,"byte_end":13069,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ This format is defined in section 4.1. of the HTTP/2 spec.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13070,"byte_end":13132,"line_start":153,"line_end":153,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13133,"byte_end":13136,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The `RawFrame` struct simply stores the raw components of an HTTP/2 frame:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13137,"byte_end":13215,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ its header and the payload as a sequence of bytes.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13216,"byte_end":13270,"line_start":156,"line_end":156,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13271,"byte_end":13274,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ It does not try to interpret the payload bytes, nor do any validation in","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13275,"byte_end":13351,"line_start":158,"line_end":158,"column_start":1,"column_end":77}},{"value":"/ terms of its validity based on the frame type given in the header.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13352,"byte_end":13422,"line_start":159,"line_end":159,"column_start":1,"column_end":71}},{"value":"/ It is simply a wrapper around the two parts of an HTTP/2 frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13423,"byte_end":13490,"line_start":160,"line_end":160,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13881,"byte_end":13884,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<RawFrame>::new","value":"fn new(FrameHeader) -> RawFrame","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `RawFrame` with the given `FrameHeader`. The payload is\n left empty.\n","sig":null,"attributes":[{"value":"/ Creates a new `RawFrame` with the given `FrameHeader`. The payload is","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13776,"byte_end":13849,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ left empty.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13854,"byte_end":13869,"line_start":172,"line_end":172,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14169,"byte_end":14181,"line_start":180,"line_end":180,"column_start":12,"column_end":24},"name":"with_payload","qualname":"<RawFrame>::with_payload","value":"fn with_payload(FrameHeader, Vec<u8>) -> RawFrame","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `RawFrame` with the given header and payload.\n Does not do any validation to determine whether the frame is in a correct\n state as constructed.\n","sig":null,"attributes":[{"value":"/ Creates a new `RawFrame` with the given header and payload.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13982,"byte_end":14045,"line_start":177,"line_end":177,"column_start":5,"column_end":68}},{"value":"/ Does not do any validation to determine whether the frame is in a correct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14050,"byte_end":14127,"line_start":178,"line_end":178,"column_start":5,"column_end":82}},{"value":"/ state as constructed.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14132,"byte_end":14157,"line_start":179,"line_end":179,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14796,"byte_end":14804,"line_start":199,"line_end":199,"column_start":12,"column_end":20},"name":"from_buf","qualname":"<RawFrame>::from_buf","value":"fn from_buf(&[u8]) -> Option<RawFrame>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `RawFrame` by parsing the given buffer.","sig":null,"attributes":[{"value":"/ Creates a new `RawFrame` by parsing the given buffer.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14435,"byte_end":14492,"line_start":190,"line_end":190,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14497,"byte_end":14500,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14505,"byte_end":14518,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14523,"byte_end":14526,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ A `RawFrame` instance constructed from the given buffer.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14531,"byte_end":14591,"line_start":194,"line_end":194,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14596,"byte_end":14599,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If the buffer cannot be parsed into a frame, which includes the payload","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14604,"byte_end":14679,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ section having a different length than what was found in the header,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14684,"byte_end":14756,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ `None` is returned.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":14761,"byte_end":14784,"line_start":198,"line_end":198,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":15430,"byte_end":15439,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"serialize","qualname":"<RawFrame>::serialize","value":"fn serialize(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Vec` of bytes representing the serialized (on-the-wire)\n representation of this raw frame.\n","sig":null,"attributes":[{"value":"/ Returns a `Vec` of bytes representing the serialized (on-the-wire)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":15306,"byte_end":15376,"line_start":219,"line_end":219,"column_start":5,"column_end":75}},{"value":"/ representation of this raw frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":15381,"byte_end":15418,"line_start":220,"line_end":220,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":15608,"byte_end":15614,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"header","qualname":"<RawFrame>::header","value":"fn header(&Self) -> FrameHeader","parent":null,"children":[],"decl_id":null,"docs":" Returns a `FrameHeader` instance corresponding to the headers of the\n `RawFrame`.\n","sig":null,"attributes":[{"value":"/ Returns a `FrameHeader` instance corresponding to the headers of the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":15504,"byte_end":15576,"line_start":225,"line_end":225,"column_start":5,"column_end":77}},{"value":"/ `RawFrame`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":15581,"byte_end":15596,"line_start":226,"line_end":226,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":15932,"byte_end":15939,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"payload","qualname":"<RawFrame>::payload","value":"fn payload(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice representing the payload of the `RawFrame`.\n","sig":null,"attributes":[{"value":"/ Returns a slice representing the payload of the `RawFrame`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":15857,"byte_end":15920,"line_start":235,"line_end":235,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":16078,"byte_end":16082,"line_start":243,"line_end":243,"column_start":8,"column_end":12},"name":"into","qualname":"<RawFrame as std::convert::Into>::into","value":"fn into(Self) -> Vec<u8>","parent":{"krate":2,"index":3071},"children":[],"decl_id":{"krate":2,"index":3073},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":16317,"byte_end":16321,"line_start":251,"line_end":251,"column_start":8,"column_end":12},"name":"from","qualname":"<RawFrame as std::convert::From>::from","value":"fn from(Vec<u8>) -> RawFrame","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":213},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transport","qualname":"::http::transport","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":234}],"decl_id":null,"docs":" The module contains implementations of the transport layer functionality\n that HTTP/2 requires. It exposes APIs that allow the HTTP/2 connection to\n use the transport layer without requiring it to know which exact\n implementation they are using (e.g. a clear-text TCP connection, a TLS\n protected connection, or even a mock implementation).","sig":null,"attributes":[{"value":"/ The module contains implementations of the transport layer functionality","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":86592,"byte_end":86668,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ that HTTP/2 requires. It exposes APIs that allow the HTTP/2 connection to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":86669,"byte_end":86746,"line_start":2,"line_end":2,"column_start":1,"column_end":78}},{"value":"/ use the transport layer without requiring it to know which exact","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":86747,"byte_end":86815,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ implementation they are using (e.g. a clear-text TCP connection, a TLS","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":86816,"byte_end":86890,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ protected connection, or even a mock implementation).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":86891,"byte_end":86948,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":86949,"byte_end":86952,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The types provided here are purely for convenience in being able to easily","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":86953,"byte_end":87031,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ plug in the native Rust socket IO primitives into the HTTP/2 connection API","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87032,"byte_end":87111,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ without having to write too much boilerplate around them.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87112,"byte_end":87173,"line_start":9,"line_end":9,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":230},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87509,"byte_end":87524,"line_start":21,"line_end":21,"column_start":11,"column_end":26},"name":"TransportStream","qualname":"::http::transport::TransportStream","value":"TransportStream: Read + Write + Sized","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"decl_id":null,"docs":" A trait that any struct that wants to provide the transport layer for\n HTTP/2 needs to implement.","sig":null,"attributes":[{"value":"/ A trait that any struct that wants to provide the transport layer for","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87266,"byte_end":87339,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ HTTP/2 needs to implement.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87340,"byte_end":87370,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87371,"byte_end":87374,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ It provides default implementations for some convenience methods, backed","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87375,"byte_end":87451,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ by the `Read` and `Write` implementations.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87452,"byte_end":87498,"line_start":20,"line_end":20,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":88504,"byte_end":88514,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::http::transport::TransportStream::read_exact","value":"fn read_exact(&mut Self, &mut [u8]) -> io::Result<()>","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" A convenience method that performs as many `read` calls on the\n underlying `Read` implementation as it takes to fill the given buffer.","sig":null,"attributes":[{"value":"/ A convenience method that performs as many `read` calls on the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87553,"byte_end":87619,"line_start":22,"line_end":22,"column_start":5,"column_end":71}},{"value":"/ underlying `Read` implementation as it takes to fill the given buffer.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87624,"byte_end":87698,"line_start":23,"line_end":23,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87703,"byte_end":87706,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ The implementation simply calls the `read` in a loop until the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87711,"byte_end":87777,"line_start":25,"line_end":25,"column_start":5,"column_end":71}},{"value":"/ buffer is filled or an aparent end of file is reached, upon which","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87782,"byte_end":87851,"line_start":26,"line_end":26,"column_start":5,"column_end":74}},{"value":"/ an error is returned.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87856,"byte_end":87881,"line_start":27,"line_end":27,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87886,"byte_end":87889,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ However, no particular care is taken to limit the number of loop","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87894,"byte_end":87962,"line_start":29,"line_end":29,"column_start":5,"column_end":73}},{"value":"/ iterations and it could theoretically be possible to end up reading","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87967,"byte_end":88038,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ a single byte at a time into a large buffer, taking a long time to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":88043,"byte_end":88113,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ return.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":88118,"byte_end":88129,"line_start":32,"line_end":32,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":88134,"byte_end":88137,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Any errors raised by the underlying `Read` implementations are","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":88142,"byte_end":88208,"line_start":34,"line_end":34,"column_start":5,"column_end":71}},{"value":"/ propagated.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":88213,"byte_end":88228,"line_start":35,"line_end":35,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":88233,"byte_end":88236,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ When an error is raised, the given buffer is only partially filled,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":88241,"byte_end":88312,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/ but there is no way to know how many bytes were actually written to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":88317,"byte_end":88388,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ the underlying buffer, which means that, effectively, all read bytes","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":88393,"byte_end":88465,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ are lost on any error.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":88470,"byte_end":88496,"line_start":40,"line_end":40,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":89230,"byte_end":89239,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"try_split","qualname":"::http::transport::TransportStream::try_split","value":"fn try_split(&Self) -> Result<Self, io::Error>","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" Attempts to split the `TransportStream` instance into a new independently\n owned handle to the same underlying stream.\n","sig":null,"attributes":[{"value":"/ Attempts to split the `TransportStream` instance into a new independently","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":89093,"byte_end":89170,"line_start":58,"line_end":58,"column_start":5,"column_end":82}},{"value":"/ owned handle to the same underlying stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":89175,"byte_end":89222,"line_start":59,"line_end":59,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":89502,"byte_end":89507,"line_start":66,"line_end":66,"column_start":8,"column_end":13},"name":"close","qualname":"::http::transport::TransportStream::close","value":"fn close(&mut Self) -> Result<(), io::Error>","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" Attempts to shutdown both ends of the transport stream.","sig":null,"attributes":[{"value":"/ Attempts to shutdown both ends of the transport stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":89280,"byte_end":89339,"line_start":62,"line_end":62,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":89344,"byte_end":89347,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ If successful, all handles to the stream created by the `try_split` operation will start","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":89352,"byte_end":89444,"line_start":64,"line_end":64,"column_start":5,"column_end":97}},{"value":"/ receiving an error for any IO operations.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":89449,"byte_end":89494,"line_start":65,"line_end":65,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":89592,"byte_end":89601,"line_start":70,"line_end":70,"column_start":8,"column_end":17},"name":"try_split","qualname":"<TcpStream as http::transport::TransportStream>::try_split","value":"fn try_split(&Self) -> Result<TcpStream, io::Error>","parent":{"krate":0,"index":230},"children":[],"decl_id":{"krate":0,"index":232},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":89682,"byte_end":89687,"line_start":74,"line_end":74,"column_start":8,"column_end":13},"name":"close","qualname":"<TcpStream as http::transport::TransportStream>::close","value":"fn close(&mut Self) -> Result<(), io::Error>","parent":{"krate":0,"index":230},"children":[],"decl_id":{"krate":0,"index":233},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":237},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"connection","qualname":"::http::connection","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":1222},{"krate":0,"index":1235},{"krate":0,"index":1220},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":300},{"krate":0,"index":1237},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":304},{"krate":0,"index":312},{"krate":0,"index":316},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":330},{"krate":0,"index":335},{"krate":0,"index":1252},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":340}],"decl_id":null,"docs":" The module contains the implementation of an HTTP/2 connection.","sig":null,"attributes":[{"value":"/ The module contains the implementation of an HTTP/2 connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90103,"byte_end":90170,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90171,"byte_end":90174,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This provides an API to read and write raw HTTP/2 frames, as well as a way to hook into","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90175,"byte_end":90266,"line_start":3,"line_end":3,"column_start":1,"column_end":92}},{"value":"/ higher-level events arising on an HTTP/2 connection, such as the receipt of headers on a","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90267,"byte_end":90359,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ particular stream or a new data chunk.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90360,"byte_end":90402,"line_start":5,"line_end":5,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90403,"byte_end":90406,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The `SendFrame` and `ReceiveFrame` traits are the API to sending and receiving frames off of an","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90407,"byte_end":90506,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ HTTP/2 connection. The module includes default implementations of those traits for `io::Write`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90507,"byte_end":90605,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ and `solicit::http::transport::TransportStream` types.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90606,"byte_end":90664,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90665,"byte_end":90668,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The `HttpConnection` struct builds on top of these traits and provides an API for sending","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90669,"byte_end":90762,"line_start":11,"line_end":11,"column_start":1,"column_end":94}},{"value":"/ messages of a higher level to the peer (such as writing data or headers, while automatically","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90763,"byte_end":90859,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ handling the framing and header encoding), as well as for handling incoming events of that","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90860,"byte_end":90954,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ type. The `Session` trait is the bridge between the connection layer (i.e. the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":90955,"byte_end":91037,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/ `HttpConnection`) and the higher layers that handle these events and pass them on to the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91038,"byte_end":91130,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ application.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91131,"byte_end":91147,"line_start":16,"line_end":16,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91801,"byte_end":91810,"line_start":52,"line_end":52,"column_start":5,"column_end":14},"name":"DataFrame","qualname":"::http::connection::HttpFrame::DataFrame","value":"HttpFrame::DataFrame(DataFrame)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91811,"byte_end":91820,"line_start":52,"line_end":52,"column_start":15,"column_end":24},"name":"0","qualname":"::http::connection::HttpFrame::DataFrame::0","value":"http::frame::data::DataFrame","parent":{"krate":0,"index":1223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1226},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91827,"byte_end":91839,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"name":"HeadersFrame","qualname":"::http::connection::HttpFrame::HeadersFrame","value":"HttpFrame::HeadersFrame(HeadersFrame)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91840,"byte_end":91852,"line_start":53,"line_end":53,"column_start":18,"column_end":30},"name":"0","qualname":"::http::connection::HttpFrame::HeadersFrame::0","value":"http::frame::headers::HeadersFrame","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91859,"byte_end":91872,"line_start":54,"line_end":54,"column_start":5,"column_end":18},"name":"SettingsFrame","qualname":"::http::connection::HttpFrame::SettingsFrame","value":"HttpFrame::SettingsFrame(SettingsFrame)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91873,"byte_end":91886,"line_start":54,"line_end":54,"column_start":19,"column_end":32},"name":"0","qualname":"::http::connection::HttpFrame::SettingsFrame::0","value":"http::frame::settings::SettingsFrame","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91893,"byte_end":91905,"line_start":55,"line_end":55,"column_start":5,"column_end":17},"name":"UnknownFrame","qualname":"::http::connection::HttpFrame::UnknownFrame","value":"HttpFrame::UnknownFrame(RawFrame)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91906,"byte_end":91914,"line_start":55,"line_end":55,"column_start":18,"column_end":26},"name":"0","qualname":"::http::connection::HttpFrame::UnknownFrame::0","value":"http::frame::RawFrame","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91785,"byte_end":91794,"line_start":51,"line_end":51,"column_start":10,"column_end":19},"name":"HttpFrame","qualname":"::http::connection::HttpFrame","value":"enum HttpFrame {\n    DataFrame(DataFrame),\n    HeadersFrame(HeadersFrame),\n    SettingsFrame(SettingsFrame),\n    UnknownFrame(RawFrame),\n}","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1229},{"krate":0,"index":1232}],"decl_id":null,"docs":" An enum representing all frame variants that can be returned by an\n `HttpConnection`.","sig":null,"attributes":[{"value":"/ An enum representing all frame variants that can be returned by an","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91562,"byte_end":91632,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ `HttpConnection`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91633,"byte_end":91654,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91655,"byte_end":91658,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The variants wrap the appropriate `Frame` implementation.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91659,"byte_end":91720,"line_start":47,"line_end":47,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91948,"byte_end":91956,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<HttpFrame>::from_raw","value":"fn from_raw(RawFrame) -> HttpResult<HttpFrame>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93281,"byte_end":93285,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"Sent","qualname":"::http::connection::SendStatus::Sent","value":"SendStatus::Sent","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" Indicates that a DATA frame was successfully sent\n","sig":null,"attributes":[{"value":"/ Indicates that a DATA frame was successfully sent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93223,"byte_end":93276,"line_start":90,"line_end":90,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93442,"byte_end":93449,"line_start":95,"line_end":95,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::http::connection::SendStatus::Nothing","value":"SendStatus::Nothing","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" Indicates that nothing was sent, but that no errors occurred.","sig":null,"attributes":[{"value":"/ Indicates that nothing was sent, but that no errors occurred.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93291,"byte_end":93356,"line_start":92,"line_end":92,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93361,"byte_end":93364,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This is the case when none of the streams had any data to write.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93369,"byte_end":93437,"line_start":94,"line_end":94,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93206,"byte_end":93216,"line_start":89,"line_end":89,"column_start":10,"column_end":20},"name":"SendStatus","qualname":"::http::connection::SendStatus","value":"enum SendStatus { Sent, Nothing, }","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1240}],"decl_id":null,"docs":" The enum represents the success status of the operation of sending a next data chunk on an\n HTTP/2 connection.\n","sig":null,"attributes":[{"value":"/ The enum represents the success status of the operation of sending a next data chunk on an","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93038,"byte_end":93132,"line_start":86,"line_end":86,"column_start":1,"column_end":95}},{"value":"/ HTTP/2 connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93133,"byte_end":93155,"line_start":87,"line_end":87,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":304},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94138,"byte_end":94152,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"HttpConnection","qualname":"::http::connection::HttpConnection","value":"HttpConnection { receiver, sender, scheme }","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"decl_id":null,"docs":" The struct implements the HTTP/2 connection level logic.","sig":null,"attributes":[{"value":"/ The struct implements the HTTP/2 connection level logic.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93454,"byte_end":93514,"line_start":98,"line_end":98,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93515,"byte_end":93518,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This means that the struct is a bridge between the low level raw frame reads/writes (i.e. what","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93519,"byte_end":93617,"line_start":100,"line_end":100,"column_start":1,"column_end":99}},{"value":"/ the `SendFrame` and `ReceiveFrame` traits do) and the higher session-level logic.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93618,"byte_end":93703,"line_start":101,"line_end":101,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93704,"byte_end":93707,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Therefore, it provides an API that exposes higher-level write operations, such as writing","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93708,"byte_end":93801,"line_start":103,"line_end":103,"column_start":1,"column_end":94}},{"value":"/ headers or data, that take care of all the underlying frame construction that is required.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93802,"byte_end":93896,"line_start":104,"line_end":104,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93897,"byte_end":93900,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Similarly, it provides an API for handling events that arise from receiving frames, without","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93901,"byte_end":93996,"line_start":106,"line_end":106,"column_start":1,"column_end":96}},{"value":"/ requiring the higher level to directly look at the frames themselves, rather only the semantic","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":93997,"byte_end":94095,"line_start":107,"line_end":107,"column_start":1,"column_end":99}},{"value":"/ content within the frames.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94096,"byte_end":94126,"line_start":108,"line_end":108,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":307},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94258,"byte_end":94266,"line_start":111,"line_end":111,"column_start":9,"column_end":17},"name":"receiver","qualname":"::http::connection::HttpConnection::receiver","value":"R","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" The instance handling the reading of frames.\n","sig":null,"attributes":[{"value":"/ The instance handling the reading of frames.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94201,"byte_end":94249,"line_start":110,"line_end":110,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":308},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94332,"byte_end":94338,"line_start":113,"line_end":113,"column_start":9,"column_end":15},"name":"sender","qualname":"::http::connection::HttpConnection::sender","value":"S","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" The instance handling the writing of frames.\n","sig":null,"attributes":[{"value":"/ The instance handling the writing of frames.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94275,"byte_end":94323,"line_start":112,"line_end":112,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":311},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94646,"byte_end":94652,"line_start":119,"line_end":119,"column_start":9,"column_end":15},"name":"scheme","qualname":"::http::connection::HttpConnection::scheme","value":"http::HttpScheme","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" The scheme of the connection\n","sig":null,"attributes":[{"value":"/ The scheme of the connection","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94605,"byte_end":94637,"line_start":118,"line_end":118,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":312},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94792,"byte_end":94801,"line_start":124,"line_end":124,"column_start":11,"column_end":20},"name":"SendFrame","qualname":"::http::connection::SendFrame","value":"SendFrame","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":" A trait that should be implemented by types that can provide the functionality\n of sending HTTP/2 frames.\n","sig":null,"attributes":[{"value":"/ A trait that should be implemented by types that can provide the functionality","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94669,"byte_end":94751,"line_start":122,"line_end":122,"column_start":1,"column_end":83}},{"value":"/ of sending HTTP/2 frames.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94752,"byte_end":94781,"line_start":123,"line_end":123,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94846,"byte_end":94860,"line_start":126,"line_end":126,"column_start":8,"column_end":22},"name":"send_raw_frame","qualname":"::http::connection::SendFrame::send_raw_frame","value":"fn send_raw_frame(&mut Self, RawFrame) -> HttpResult<()>","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Sends the given raw frame.\n","sig":null,"attributes":[{"value":"/ Sends the given raw frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94808,"byte_end":94838,"line_start":125,"line_end":125,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95046,"byte_end":95056,"line_start":130,"line_end":130,"column_start":8,"column_end":18},"name":"send_frame","qualname":"::http::connection::SendFrame::send_frame","value":"fn send_frame<F>(&mut Self, F) -> HttpResult<()> where F: Frame","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Sends the given concrete frame.","sig":null,"attributes":[{"value":"/ Sends the given concrete frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94912,"byte_end":94947,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94952,"byte_end":94955,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ A default implementation based on the `send_raw_frame` method is provided.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":94960,"byte_end":95038,"line_start":129,"line_end":129,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95348,"byte_end":95358,"line_start":139,"line_end":139,"column_start":8,"column_end":18},"name":"send_frame","qualname":"<W as http::connection::SendFrame>::send_frame","value":"fn send_frame<F>(&mut Self, F) -> HttpResult<()> where F: Frame","parent":{"krate":0,"index":312},"children":[],"decl_id":{"krate":0,"index":314},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95331,"byte_end":95340,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95503,"byte_end":95517,"line_start":145,"line_end":145,"column_start":8,"column_end":22},"name":"send_raw_frame","qualname":"<W as http::connection::SendFrame>::send_raw_frame","value":"fn send_raw_frame(&mut Self, RawFrame) -> HttpResult<()>","parent":{"krate":0,"index":312},"children":[],"decl_id":{"krate":0,"index":313},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95486,"byte_end":95495,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":321},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95806,"byte_end":95818,"line_start":154,"line_end":154,"column_start":11,"column_end":23},"name":"ReceiveFrame","qualname":"::http::connection::ReceiveFrame","value":"ReceiveFrame","parent":null,"children":[{"krate":0,"index":322}],"decl_id":null,"docs":" A trait that should be implemented by types that can provide the functionality\n of receiving HTTP/2 frames.\n","sig":null,"attributes":[{"value":"/ A trait that should be implemented by types that can provide the functionality","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95681,"byte_end":95763,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ of receiving HTTP/2 frames.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95764,"byte_end":95795,"line_start":153,"line_end":153,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95990,"byte_end":96000,"line_start":157,"line_end":157,"column_start":8,"column_end":18},"name":"recv_frame","qualname":"::http::connection::ReceiveFrame::recv_frame","value":"fn recv_frame(&mut Self) -> HttpResult<HttpFrame>","parent":{"krate":0,"index":321},"children":[],"decl_id":null,"docs":" Return a new `HttpFrame` instance. Unknown frames can be wrapped in the\n `HttpFrame::UnknownFrame` variant (i.e. their `RawFrame` representation).\n","sig":null,"attributes":[{"value":"/ Return a new `HttpFrame` instance. Unknown frames can be wrapped in the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95825,"byte_end":95900,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ `HttpFrame::UnknownFrame` variant (i.e. their `RawFrame` representation).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95905,"byte_end":95982,"line_start":156,"line_end":156,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":96171,"byte_end":96181,"line_start":162,"line_end":162,"column_start":8,"column_end":18},"name":"recv_frame","qualname":"<TS as http::connection::ReceiveFrame>::recv_frame","value":"fn recv_frame(&mut Self) -> HttpResult<HttpFrame>","parent":{"krate":0,"index":321},"children":[],"decl_id":{"krate":0,"index":322},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":97891,"byte_end":97900,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"DataChunk","qualname":"::http::connection::DataChunk","value":"DataChunk { data, stream_id, end_stream }","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"decl_id":null,"docs":" The struct represents a chunk of data that should be sent to the peer on a particular stream.\n","sig":null,"attributes":[{"value":"/ The struct represents a chunk of data that should be sent to the peer on a particular stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":97782,"byte_end":97879,"line_start":199,"line_end":199,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":332},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":97953,"byte_end":97957,"line_start":202,"line_end":202,"column_start":9,"column_end":13},"name":"data","qualname":"::http::connection::DataChunk::data","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" The data that should be sent.\n","sig":null,"attributes":[{"value":"/ The data that should be sent.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":97911,"byte_end":97944,"line_start":201,"line_end":201,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":333},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98045,"byte_end":98054,"line_start":204,"line_end":204,"column_start":9,"column_end":18},"name":"stream_id","qualname":"::http::connection::DataChunk::stream_id","value":"u32","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" The ID of the stream on which the data should be sent.\n","sig":null,"attributes":[{"value":"/ The ID of the stream on which the data should be sent.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":97978,"byte_end":98036,"line_start":203,"line_end":203,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":334},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98131,"byte_end":98141,"line_start":206,"line_end":206,"column_start":9,"column_end":19},"name":"end_stream","qualname":"::http::connection::DataChunk::end_stream","value":"http::connection::EndStream","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Whether the data chunk will also end the stream.\n","sig":null,"attributes":[{"value":"/ Whether the data chunk will also end the stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98070,"byte_end":98122,"line_start":205,"line_end":205,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98517,"byte_end":98520,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"new","qualname":"<DataChunk>::new","value":"fn new(Cow, StreamId, EndStream) -> DataChunk","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DataChunk`.","sig":null,"attributes":[{"value":"/ Creates a new `DataChunk`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98186,"byte_end":98216,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98221,"byte_end":98224,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ **Note:** `IntoCow` is unstable and there's no implementation of `Into<Cow<'a, [u8]>>` for","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98229,"byte_end":98323,"line_start":212,"line_end":212,"column_start":5,"column_end":99}},{"value":"/ the fundamental types, making this a bit of a clunky API. Once such an `Into` impl is","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98328,"byte_end":98417,"line_start":213,"line_end":213,"column_start":5,"column_end":94}},{"value":"/ added, this can be made generic over the trait for some ergonomic improvements.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98422,"byte_end":98505,"line_start":214,"line_end":214,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98916,"byte_end":98928,"line_start":225,"line_end":225,"column_start":12,"column_end":24},"name":"new_borrowed","qualname":"<DataChunk>::new_borrowed","value":"fn new_borrowed<D>(D, StreamId, EndStream) -> DataChunk where\nD: Borrow<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DataChunk` from a borrowed slice. This method should become obsolete if we\n can take an `Into<Cow<_, _>>` without using unstable features.\n","sig":null,"attributes":[{"value":"/ Creates a new `DataChunk` from a borrowed slice. This method should become obsolete if we","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98740,"byte_end":98833,"line_start":223,"line_end":223,"column_start":5,"column_end":98}},{"value":"/ can take an `Into<Cow<_, _>>` without using unstable features.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98838,"byte_end":98904,"line_start":224,"line_end":224,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":99383,"byte_end":99386,"line_start":239,"line_end":239,"column_start":5,"column_end":8},"name":"Yes","qualname":"::http::connection::EndStream::Yes","value":"EndStream::Yes","parent":{"krate":0,"index":1252},"children":[],"decl_id":null,"docs":" The stream should be closed\n","sig":null,"attributes":[{"value":"/ The stream should be closed","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":99347,"byte_end":99378,"line_start":238,"line_end":238,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":99437,"byte_end":99439,"line_start":241,"line_end":241,"column_start":5,"column_end":7},"name":"No","qualname":"::http::connection::EndStream::No","value":"EndStream::No","parent":{"krate":0,"index":1252},"children":[],"decl_id":null,"docs":" The stream should still be kept open\n","sig":null,"attributes":[{"value":"/ The stream should still be kept open","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":99392,"byte_end":99432,"line_start":240,"line_end":240,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":99331,"byte_end":99340,"line_start":237,"line_end":237,"column_start":10,"column_end":19},"name":"EndStream","qualname":"::http::connection::EndStream","value":"enum EndStream { Yes, No, }","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1255}],"decl_id":null,"docs":" An enum indicating whether the `HttpConnection` send operation should end the stream.\n","sig":null,"attributes":[{"value":"/ An enum indicating whether the `HttpConnection` send operation should end the stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":99191,"byte_end":99280,"line_start":235,"line_end":235,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":99672,"byte_end":99675,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"new","qualname":"<HttpConnection<S, R>>::new","value":"fn new(S, R, HttpScheme) -> HttpConnection<S, R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `HttpConnection` that will use the given sender and receiver instances\n for writing and reading frames, respectively.\n","sig":null,"attributes":[{"value":"/ Creates a new `HttpConnection` that will use the given sender and receiver instances","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":99518,"byte_end":99606,"line_start":245,"line_end":245,"column_start":5,"column_end":93}},{"value":"/ for writing and reading frames, respectively.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":99611,"byte_end":99660,"line_start":246,"line_end":246,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":100321,"byte_end":100332,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"with_stream","qualname":"<HttpConnection<S, R>>::with_stream","value":"fn with_stream<TS>(TS, HttpScheme) -> HttpConnection<TS, TS> where\nTS: TransportStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `HttpConnection` that will use the given stream as its\n underlying transport layer.","sig":null,"attributes":[{"value":"/ Creates a new `HttpConnection` that will use the given stream as its","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":99968,"byte_end":100040,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/ underlying transport layer.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":100045,"byte_end":100076,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":100081,"byte_end":100084,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This constructor is provided as a convenience when the underlying IO of the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":100089,"byte_end":100168,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ HTTP/2 connection should be based on the `TransportStream` interface.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":100173,"byte_end":100246,"line_start":261,"line_end":261,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":100251,"byte_end":100254,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The scheme of the connection is also provided.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":100259,"byte_end":100309,"line_start":263,"line_end":263,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102690,"byte_end":102702,"line_start":321,"line_end":321,"column_start":12,"column_end":24},"name":"send_headers","qualname":"<HttpConnection<S, R>>::send_headers","value":"fn send_headers<H>(&mut Self, H, StreamId, EndStream) -> HttpResult<()> where\nH: Into<Vec<Header>>","parent":null,"children":[],"decl_id":null,"docs":" A helper function that inserts the frames required to send the given headers onto the\n `SendFrame` stream.","sig":null,"attributes":[{"value":"/ A helper function that inserts the frames required to send the given headers onto the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102044,"byte_end":102133,"line_start":308,"line_end":308,"column_start":5,"column_end":94}},{"value":"/ `SendFrame` stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102138,"byte_end":102161,"line_start":309,"line_end":309,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102166,"byte_end":102169,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ The `HttpConnection` performs the HPACK encoding of the header block using an internal","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102174,"byte_end":102264,"line_start":311,"line_end":311,"column_start":5,"column_end":95}},{"value":"/ encoder.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102269,"byte_end":102281,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102286,"byte_end":102289,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102294,"byte_end":102310,"line_start":314,"line_end":314,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102315,"byte_end":102318,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ - `headers` - a headers list that should be sent.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102323,"byte_end":102376,"line_start":316,"line_end":316,"column_start":5,"column_end":58}},{"value":"/ - `stream_id` - the ID of the stream on which the headers will be sent. The connection","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102381,"byte_end":102471,"line_start":317,"line_end":317,"column_start":5,"column_end":95}},{"value":"/   performs no checks as to whether the stream is a valid identifier.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102476,"byte_end":102548,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ - `end_stream` - whether the stream should be closed from the peer's side immediately","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102553,"byte_end":102642,"line_start":319,"line_end":319,"column_start":5,"column_end":94}},{"value":"/   after sending the headers","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":102647,"byte_end":102678,"line_start":320,"line_end":320,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":104501,"byte_end":104510,"line_start":359,"line_end":359,"column_start":12,"column_end":21},"name":"send_data","qualname":"<HttpConnection<S, R>>::send_data","value":"fn send_data<'a>(&mut Self, DataChunk) -> HttpResult<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function that inserts a frame representing the given data into the `SendFrame`\n stream.","sig":null,"attributes":[{"value":"/ A helper function that inserts a frame representing the given data into the `SendFrame`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":103831,"byte_end":103922,"line_start":347,"line_end":347,"column_start":5,"column_end":96}},{"value":"/ stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":103927,"byte_end":103938,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":103943,"byte_end":103946,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The `HttpConnection` itself does not track the flow control window and will happily send","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":103951,"byte_end":104043,"line_start":350,"line_end":350,"column_start":5,"column_end":97}},{"value":"/ data that exceeds a particular stream's or the connection's flow control window size.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":104048,"byte_end":104137,"line_start":351,"line_end":351,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":104142,"byte_end":104145,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":104150,"byte_end":104166,"line_start":353,"line_end":353,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":104171,"byte_end":104174,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ - `data` - the data that should be sent on the connection","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":104179,"byte_end":104240,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"/ - `stream_id` - the ID of the stream on which the data will be sent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":104245,"byte_end":104316,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ - `end_stream` - whether the stream should be closed from the peer's side immediately after","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":104321,"byte_end":104416,"line_start":357,"line_end":357,"column_start":5,"column_end":100}},{"value":"/   sending the data (i.e. the last data frame closes the stream).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":104421,"byte_end":104489,"line_start":358,"line_end":358,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":105631,"byte_end":105645,"line_start":386,"line_end":386,"column_start":12,"column_end":26},"name":"send_next_data","qualname":"<HttpConnection<S, R>>::send_next_data","value":"fn send_next_data<P>(&mut Self, &mut P) -> HttpResult<SendStatus> where\nP: DataPrioritizer","parent":null,"children":[],"decl_id":null,"docs":" Sends the chunk of data provided by the given `DataPrioritizer`.","sig":null,"attributes":[{"value":"/ Sends the chunk of data provided by the given `DataPrioritizer`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":105307,"byte_end":105375,"line_start":379,"line_end":379,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":105380,"byte_end":105383,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":105388,"byte_end":105401,"line_start":381,"line_end":381,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":105406,"byte_end":105409,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Returns the status of the operation. If the provider does not currently have any data that","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":105414,"byte_end":105508,"line_start":383,"line_end":383,"column_start":5,"column_end":99}},{"value":"/ could be sent, returns `SendStatus::Nothing`. If any data is sent, returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":105513,"byte_end":105591,"line_start":384,"line_end":384,"column_start":5,"column_end":83}},{"value":"/ `SendStatus::Sent`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":105596,"byte_end":105619,"line_start":385,"line_end":385,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":106533,"byte_end":106548,"line_start":405,"line_end":405,"column_start":12,"column_end":27},"name":"expect_settings","qualname":"<HttpConnection<S, R>>::expect_settings","value":"fn expect_settings<Sess>(&mut Self, &mut Sess) -> HttpResult<()> where\nSess: Session","parent":null,"children":[],"decl_id":null,"docs":" The method processes the next incoming frame, expecting it to be a SETTINGS frame.\n Additionally, the frame cannot be an ACK settings frame, but rather it should contain the\n peer's settings.","sig":null,"attributes":[{"value":"/ The method processes the next incoming frame, expecting it to be a SETTINGS frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":106007,"byte_end":106093,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"/ Additionally, the frame cannot be an ACK settings frame, but rather it should contain the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":106098,"byte_end":106191,"line_start":398,"line_end":398,"column_start":5,"column_end":98}},{"value":"/ peer's settings.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":106196,"byte_end":106216,"line_start":399,"line_end":399,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":106221,"byte_end":106224,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The method can be used when the receipt of the peer's preface needs to be asserted.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":106229,"byte_end":106316,"line_start":401,"line_end":401,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":106321,"byte_end":106324,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ If the received frame is not a SETTINGS frame, an `HttpError::UnableToConnect` variant is","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":106329,"byte_end":106422,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ returned. (TODO: Change this variant's name, as it is a byproduct of this method's legacy)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":106427,"byte_end":106521,"line_start":404,"line_end":404,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":107672,"byte_end":107689,"line_start":429,"line_end":429,"column_start":12,"column_end":29},"name":"handle_next_frame","qualname":"<HttpConnection<S, R>>::handle_next_frame","value":"fn handle_next_frame<Sess>(&mut Self, &mut Sess) -> HttpResult<()> where\nSess: Session","parent":null,"children":[],"decl_id":null,"docs":" Handles the next frame incoming on the `ReceiveFrame` instance.","sig":null,"attributes":[{"value":"/ Handles the next frame incoming on the `ReceiveFrame` instance.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":107135,"byte_end":107202,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":107207,"byte_end":107210,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ The `HttpConnection` takes care of parsing the frame and extracting the semantics behind it","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":107215,"byte_end":107310,"line_start":422,"line_end":422,"column_start":5,"column_end":100}},{"value":"/ and passes this on to the higher level by invoking (possibly multiple) callbacks on the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":107315,"byte_end":107406,"line_start":423,"line_end":423,"column_start":5,"column_end":96}},{"value":"/ given `Session` instance. For information on which events can be passed to the session,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":107411,"byte_end":107502,"line_start":424,"line_end":424,"column_start":5,"column_end":96}},{"value":"/ check out the `Session` trait.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":107507,"byte_end":107541,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":107546,"byte_end":107549,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ If the handling is successful, a unit `Ok` is returned; all HTTP and IO errors are","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":107554,"byte_end":107640,"line_start":427,"line_end":427,"column_start":5,"column_end":91}},{"value":"/ propagated.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":107645,"byte_end":107660,"line_start":428,"line_end":428,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":369},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"session","qualname":"::http::session","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":396},{"krate":0,"index":401},{"krate":0,"index":406},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":1277},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1306},{"krate":0,"index":431},{"krate":0,"index":1308},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1324},{"krate":0,"index":434},{"krate":0,"index":1326},{"krate":0,"index":1332},{"krate":0,"index":448},{"krate":0,"index":451}],"decl_id":null,"docs":" Defines the interface for the session-level management of HTTP/2\n communication. This is effectively an API that allows hooking into an\n HTTP/2 connection in order to handle events arising on the connection.","sig":null,"attributes":[{"value":"/ Defines the interface for the session-level management of HTTP/2","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":133565,"byte_end":133633,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ communication. This is effectively an API that allows hooking into an","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":133634,"byte_end":133707,"line_start":2,"line_end":2,"column_start":1,"column_end":74}},{"value":"/ HTTP/2 connection in order to handle events arising on the connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":133708,"byte_end":133782,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":133783,"byte_end":133786,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The module also provides a default implementation for some of the traits.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":133787,"byte_end":133864,"line_start":5,"line_end":5,"column_start":1,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":392},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134583,"byte_end":134590,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"name":"Session","qualname":"::http::session::Session","value":"Session","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"decl_id":null,"docs":" A trait that defines the interface between an `HttpConnection` and the higher-levels that use\n it. Essentially, it allows the `HttpConnection` to pass information onto those higher levels\n through a well-defined interface.","sig":null,"attributes":[{"value":"/ A trait that defines the interface between an `HttpConnection` and the higher-levels that use","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134019,"byte_end":134116,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ it. Essentially, it allows the `HttpConnection` to pass information onto those higher levels","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134117,"byte_end":134213,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ through a well-defined interface.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134214,"byte_end":134251,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134252,"byte_end":134255,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These methods are effectively a set of callbacks that the `HttpConnection` invokes when the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134256,"byte_end":134351,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/ corresponding events arise on the HTTP/2 connection (i.e. frame stream).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134352,"byte_end":134428,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134429,"byte_end":134432,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ TODO Allow the session to influence the `HttpConnection` state and raise","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134433,"byte_end":134509,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/      errors (i.e. make the return type -> HttpResult<()>).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134510,"byte_end":134572,"line_start":21,"line_end":21,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134822,"byte_end":134836,"line_start":26,"line_end":26,"column_start":8,"column_end":22},"name":"new_data_chunk","qualname":"::http::session::Session::new_data_chunk","value":"fn new_data_chunk(&mut Self, StreamId, &[u8])","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Notifies the `Session` that a new data chunk has arrived on the\n connection for a particular stream. Only the raw data is passed\n to the callback (all padding is already discarded by the connection).\n","sig":null,"attributes":[{"value":"/ Notifies the `Session` that a new data chunk has arrived on the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134597,"byte_end":134664,"line_start":23,"line_end":23,"column_start":5,"column_end":72}},{"value":"/ connection for a particular stream. Only the raw data is passed","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134669,"byte_end":134736,"line_start":24,"line_end":24,"column_start":5,"column_end":72}},{"value":"/ to the callback (all padding is already discarded by the connection).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134741,"byte_end":134814,"line_start":25,"line_end":25,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135044,"byte_end":135055,"line_start":29,"line_end":29,"column_start":8,"column_end":19},"name":"new_headers","qualname":"::http::session::Session::new_headers","value":"fn new_headers(&mut Self, StreamId, Vec<Header>)","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Notifies the `Session` that headers have arrived for a particular\n stream. The given list of headers is already decoded by the connection.\n","sig":null,"attributes":[{"value":"/ Notifies the `Session` that headers have arrived for a particular","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134887,"byte_end":134956,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ stream. The given list of headers is already decoded by the connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":134961,"byte_end":135036,"line_start":28,"line_end":28,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135198,"byte_end":135211,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"end_of_stream","qualname":"::http::session::Session::end_of_stream","value":"fn end_of_stream(&mut Self, StreamId)","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Notifies the `Session` that a particular stream got closed by the peer.\n","sig":null,"attributes":[{"value":"/ Notifies the `Session` that a particular stream got closed by the peer.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135115,"byte_end":135190,"line_start":30,"line_end":30,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":396},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135476,"byte_end":135486,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"StreamIter","qualname":"::http::session::StreamIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A newtype for an iterator over `Stream`s saved in a `SessionState`.","sig":null,"attributes":[{"value":"/ A newtype for an iterator over `Stream`s saved in a `SessionState`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135248,"byte_end":135319,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135320,"byte_end":135323,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Allows `SessionState` implementations to return iterators over its session without being forced","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135324,"byte_end":135423,"line_start":36,"line_end":36,"column_start":1,"column_end":100}},{"value":"/ to declare them as associated types.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135424,"byte_end":135464,"line_start":37,"line_end":37,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135660,"byte_end":135664,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"next","qualname":"<StreamIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<&'a mut S>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135643,"byte_end":135652,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":406},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136293,"byte_end":136305,"line_start":57,"line_end":57,"column_start":11,"column_end":23},"name":"SessionState","qualname":"::http::session::SessionState","value":"SessionState","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"decl_id":null,"docs":" A trait defining a set of methods for accessing and influencing an HTTP/2 session's state.","sig":null,"attributes":[{"value":"/ A trait defining a set of methods for accessing and influencing an HTTP/2 session's state.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135718,"byte_end":135812,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135813,"byte_end":135816,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This trait is tightly coupled to a `Stream`-based session layer implementation. Particular","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135817,"byte_end":135911,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"/ implementations are additionally tightly coupled to one particular `Stream` implementation.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135912,"byte_end":136007,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136008,"byte_end":136011,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136012,"byte_end":136022,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136023,"byte_end":136026,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Clients built on top of the raw `HttpConnection` + `Session` can still exist without using","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136027,"byte_end":136121,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/ this trait; however, it is included for convenience, as most session implementations *will*","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136122,"byte_end":136217,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/ want to keep track of similar things in the session's state.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136218,"byte_end":136282,"line_start":56,"line_end":56,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":407},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136383,"byte_end":136389,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"name":"Stream","qualname":"::http::session::SessionState::Stream","value":"type Stream: Stream;","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" The type of the `Stream` that the `SessionState` manages.\n","sig":null,"attributes":[{"value":"/ The type of the `Stream` that the `SessionState` manages.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136312,"byte_end":136373,"line_start":58,"line_end":58,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136490,"byte_end":136503,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"insert_stream","qualname":"::http::session::SessionState::insert_stream","value":"fn insert_stream(&mut Self, Self::Stream)","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Inserts the given `Stream` into the session's state, starting to track it.\n","sig":null,"attributes":[{"value":"/ Inserts the given `Stream` into the session's state, starting to track it.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136404,"byte_end":136482,"line_start":61,"line_end":61,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136661,"byte_end":136675,"line_start":65,"line_end":65,"column_start":8,"column_end":22},"name":"get_stream_ref","qualname":"::http::session::SessionState::get_stream_ref","value":"fn get_stream_ref(&Self, StreamId) -> Option<&Self::Stream>","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Returns a reference to a `Stream` with the given `StreamId`, if it is found in the current\n session.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `Stream` with the given `StreamId`, if it is found in the current","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136542,"byte_end":136636,"line_start":63,"line_end":63,"column_start":5,"column_end":99}},{"value":"/ session.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136641,"byte_end":136653,"line_start":64,"line_end":64,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136861,"byte_end":136875,"line_start":68,"line_end":68,"column_start":8,"column_end":22},"name":"get_stream_mut","qualname":"::http::session::SessionState::get_stream_mut","value":"fn get_stream_mut(&mut Self, StreamId) -> Option<&mut Self::Stream>","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Returns a mutable reference to a `Stream` with the given `StreamId`, if it is found in the\n current session.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to a `Stream` with the given `StreamId`, if it is found in the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136734,"byte_end":136828,"line_start":66,"line_end":66,"column_start":5,"column_end":99}},{"value":"/ current session.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136833,"byte_end":136853,"line_start":67,"line_end":67,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":137094,"byte_end":137107,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"remove_stream","qualname":"::http::session::SessionState::remove_stream","value":"fn remove_stream(&mut Self, StreamId) -> Option<Self::Stream>","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Removes the stream with the given `StreamId` from the session. If the stream was found in\n the session, it is returned in the result.\n","sig":null,"attributes":[{"value":"/ Removes the stream with the given `StreamId` from the session. If the stream was found in","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":136942,"byte_end":137035,"line_start":69,"line_end":69,"column_start":5,"column_end":98}},{"value":"/ the session, it is returned in the result.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":137040,"byte_end":137086,"line_start":70,"line_end":70,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":137250,"byte_end":137254,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"iter","qualname":"::http::session::SessionState::iter","value":"fn iter(&mut Self) -> StreamIter<, Self::Stream>","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Returns an iterator over the streams currently found in the session.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the streams currently found in the session.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":137170,"byte_end":137242,"line_start":73,"line_end":73,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":137613,"byte_end":137623,"line_start":82,"line_end":82,"column_start":8,"column_end":18},"name":"get_closed","qualname":"::http::session::SessionState::get_closed","value":"fn get_closed(&mut Self) -> Vec<Self::Stream>","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Returns all streams that are closed and tracked by the session state.","sig":null,"attributes":[{"value":"/ Returns all streams that are closed and tracked by the session state.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":137300,"byte_end":137373,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":137378,"byte_end":137381,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The streams are moved out of the session state.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":137386,"byte_end":137437,"line_start":78,"line_end":78,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":137442,"byte_end":137445,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The default implementations relies on the `iter` implementation to find the closed streams","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":137450,"byte_end":137544,"line_start":80,"line_end":80,"column_start":5,"column_end":99}},{"value":"/ first and then calls `remove_stream` on all of them.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":137549,"byte_end":137605,"line_start":81,"line_end":81,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":416},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138168,"byte_end":138187,"line_start":94,"line_end":94,"column_start":12,"column_end":31},"name":"DefaultSessionState","qualname":"::http::session::DefaultSessionState","value":"DefaultSessionState {  }","parent":null,"children":[{"krate":0,"index":418}],"decl_id":null,"docs":" An implementation of the `SessionState` trait that tracks the active streams in a `HashMap`,\n mapping the stream ID to the concrete `Stream` instance.\n","sig":null,"attributes":[{"value":"/ An implementation of the `SessionState` trait that tracks the active streams in a `HashMap`,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":137999,"byte_end":138095,"line_start":92,"line_end":92,"column_start":1,"column_end":97}},{"value":"/ mapping the stream ID to the concrete `Stream` instance.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138096,"byte_end":138156,"line_start":93,"line_end":93,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138440,"byte_end":138443,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultSessionState<S>>::new","value":"fn new() -> DefaultSessionState<S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DefaultSessionState` with no known streams.\n","sig":null,"attributes":[{"value":"/ Creates a new `DefaultSessionState` with no known streams.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138366,"byte_end":138428,"line_start":100,"line_end":100,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138669,"byte_end":138682,"line_start":112,"line_end":112,"column_start":8,"column_end":21},"name":"insert_stream","qualname":"<DefaultSessionState<S> as http::session::SessionState>::insert_stream","value":"fn insert_stream(&mut Self, Self::Stream)","parent":{"krate":0,"index":406},"children":[],"decl_id":{"krate":0,"index":408},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138652,"byte_end":138661,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138796,"byte_end":138810,"line_start":117,"line_end":117,"column_start":8,"column_end":22},"name":"get_stream_ref","qualname":"<DefaultSessionState<S> as http::session::SessionState>::get_stream_ref","value":"fn get_stream_ref(&Self, StreamId) -> Option<&Self::Stream>","parent":{"krate":0,"index":406},"children":[],"decl_id":{"krate":0,"index":409},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138779,"byte_end":138788,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138930,"byte_end":138944,"line_start":121,"line_end":121,"column_start":8,"column_end":22},"name":"get_stream_mut","qualname":"<DefaultSessionState<S> as http::session::SessionState>::get_stream_mut","value":"fn get_stream_mut(&mut Self, StreamId) -> Option<&mut Self::Stream>","parent":{"krate":0,"index":406},"children":[],"decl_id":{"krate":0,"index":410},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138913,"byte_end":138922,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139077,"byte_end":139090,"line_start":126,"line_end":126,"column_start":8,"column_end":21},"name":"remove_stream","qualname":"<DefaultSessionState<S> as http::session::SessionState>::remove_stream","value":"fn remove_stream(&mut Self, StreamId) -> Option<Self::Stream>","parent":{"krate":0,"index":406},"children":[],"decl_id":{"krate":0,"index":411},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139060,"byte_end":139069,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139217,"byte_end":139221,"line_start":131,"line_end":131,"column_start":8,"column_end":12},"name":"iter","qualname":"<DefaultSessionState<S> as http::session::SessionState>::iter","value":"fn iter(&mut Self) -> StreamIter<, S>","parent":{"krate":0,"index":406},"children":[],"decl_id":{"krate":0,"index":412},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139200,"byte_end":139209,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139580,"byte_end":139584,"line_start":141,"line_end":141,"column_start":5,"column_end":9},"name":"Idle","qualname":"::http::session::StreamState::Idle","value":"StreamState::Idle","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139590,"byte_end":139603,"line_start":142,"line_end":142,"column_start":5,"column_end":18},"name":"ReservedLocal","qualname":"::http::session::StreamState::ReservedLocal","value":"StreamState::ReservedLocal","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139609,"byte_end":139623,"line_start":143,"line_end":143,"column_start":5,"column_end":19},"name":"ReservedRemote","qualname":"::http::session::StreamState::ReservedRemote","value":"StreamState::ReservedRemote","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139629,"byte_end":139633,"line_start":144,"line_end":144,"column_start":5,"column_end":9},"name":"Open","qualname":"::http::session::StreamState::Open","value":"StreamState::Open","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139639,"byte_end":139655,"line_start":145,"line_end":145,"column_start":5,"column_end":21},"name":"HalfClosedRemote","qualname":"::http::session::StreamState::HalfClosedRemote","value":"StreamState::HalfClosedRemote","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139661,"byte_end":139676,"line_start":146,"line_end":146,"column_start":5,"column_end":20},"name":"HalfClosedLocal","qualname":"::http::session::StreamState::HalfClosedLocal","value":"StreamState::HalfClosedLocal","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139682,"byte_end":139688,"line_start":147,"line_end":147,"column_start":5,"column_end":11},"name":"Closed","qualname":"::http::session::StreamState::Closed","value":"StreamState::Closed","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139562,"byte_end":139573,"line_start":140,"line_end":140,"column_start":10,"column_end":21},"name":"StreamState","qualname":"::http::session::StreamState","value":"enum StreamState {\n    Idle,\n    ReservedLocal,\n    ReservedRemote,\n    Open,\n    HalfClosedRemote,\n    HalfClosedLocal,\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290}],"decl_id":null,"docs":" The enum represents all the states that an HTTP/2 stream can be found in.","sig":null,"attributes":[{"value":"/ The enum represents all the states that an HTTP/2 stream can be found in.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139331,"byte_end":139408,"line_start":136,"line_end":136,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139409,"byte_end":139412,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [section 5.1.](http://http2.github.io/http2-spec/#rfc.section.5.1) of the spec.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139413,"byte_end":139511,"line_start":138,"line_end":138,"column_start":1,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139962,"byte_end":139968,"line_start":155,"line_end":155,"column_start":5,"column_end":11},"name":"Closed","qualname":"::http::session::StreamDataError::Closed","value":"StreamDataError::Closed","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Indicates that the stream cannot provide any data, since it is closed for further writes\n from the peer's side.\n","sig":null,"attributes":[{"value":"/ Indicates that the stream cannot provide any data, since it is closed for further writes","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139835,"byte_end":139927,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ from the peer's side.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139932,"byte_end":139957,"line_start":154,"line_end":154,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140067,"byte_end":140072,"line_start":157,"line_end":157,"column_start":5,"column_end":10},"name":"Other","qualname":"::http::session::StreamDataError::Other","value":"StreamDataError::Other(Box<Error + Send + Sync>)","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" A different error while trying to obtain the data chunk. Wraps a boxed `Error` impl.\n","sig":null,"attributes":[{"value":"/ A different error while trying to obtain the data chunk. Wraps a boxed `Error` impl.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139974,"byte_end":140062,"line_start":156,"line_end":156,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140073,"byte_end":140097,"line_start":157,"line_end":157,"column_start":11,"column_end":35},"name":"0","qualname":"::http::session::StreamDataError::Other::0","value":"std::boxed::Box<(dyn std::error::Error + std::marker::Send + std::marker::Sync + 'static)>","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139813,"byte_end":139828,"line_start":152,"line_end":152,"column_start":10,"column_end":25},"name":"StreamDataError","qualname":"::http::session::StreamDataError","value":"enum StreamDataError { Closed, Other(Box<Error + Send + Sync>), }","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1303}],"decl_id":null,"docs":" The enum represents errors that can be returned from the `Stream::get_data_chunk` method.\n","sig":null,"attributes":[{"value":"/ The enum represents errors that can be returned from the `Stream::get_data_chunk` method.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":139693,"byte_end":139786,"line_start":150,"line_end":150,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140187,"byte_end":140191,"line_start":161,"line_end":161,"column_start":8,"column_end":12},"name":"from","qualname":"<StreamDataError as std::convert::From>::from","value":"fn from(E) -> StreamDataError","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140502,"byte_end":140507,"line_start":168,"line_end":168,"column_start":5,"column_end":10},"name":"Chunk","qualname":"::http::session::StreamDataChunk::Chunk","value":"StreamDataChunk::Chunk(usize)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":" A data chunk of the given size, after which more chunks can follow.\n","sig":null,"attributes":[{"value":"/ A data chunk of the given size, after which more chunks can follow.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140426,"byte_end":140497,"line_start":167,"line_end":167,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140508,"byte_end":140513,"line_start":168,"line_end":168,"column_start":11,"column_end":16},"name":"0","qualname":"::http::session::StreamDataChunk::Chunk::0","value":"usize","parent":{"krate":0,"index":1309},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140588,"byte_end":140592,"line_start":170,"line_end":170,"column_start":5,"column_end":9},"name":"Last","qualname":"::http::session::StreamDataChunk::Last","value":"StreamDataChunk::Last(usize)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":" The chunk was the last one that the stream will ever write.\n","sig":null,"attributes":[{"value":"/ The chunk was the last one that the stream will ever write.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140520,"byte_end":140583,"line_start":169,"line_end":169,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140593,"byte_end":140598,"line_start":170,"line_end":170,"column_start":10,"column_end":15},"name":"0","qualname":"::http::session::StreamDataChunk::Last::0","value":"usize","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140674,"byte_end":140685,"line_start":172,"line_end":172,"column_start":5,"column_end":16},"name":"Unavailable","qualname":"::http::session::StreamDataChunk::Unavailable","value":"StreamDataChunk::Unavailable","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":" No data currently available, but the stream isn't closed yet\n","sig":null,"attributes":[{"value":"/ No data currently available, but the stream isn't closed yet","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140605,"byte_end":140669,"line_start":171,"line_end":171,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140404,"byte_end":140419,"line_start":166,"line_end":166,"column_start":10,"column_end":25},"name":"StreamDataChunk","qualname":"::http::session::StreamDataChunk","value":"enum StreamDataChunk { Chunk(usize), Last(usize), Unavailable, }","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1315}],"decl_id":null,"docs":" The enum represents the successful completion of the `Stream::get_data_chunk` method.\n","sig":null,"attributes":[{"value":"/ The enum represents the successful completion of the `Stream::get_data_chunk` method.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140264,"byte_end":140353,"line_start":164,"line_end":164,"column_start":1,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":434},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141253,"byte_end":141259,"line_start":183,"line_end":183,"column_start":11,"column_end":17},"name":"Stream","qualname":"::http::session::Stream","value":"Stream","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"decl_id":null,"docs":" A trait representing a single HTTP/2 stream. An HTTP/2 connection multiplexes a number of\n streams.","sig":null,"attributes":[{"value":"/ A trait representing a single HTTP/2 stream. An HTTP/2 connection multiplexes a number of","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140690,"byte_end":140783,"line_start":175,"line_end":175,"column_start":1,"column_end":94}},{"value":"/ streams.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140784,"byte_end":140796,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140797,"byte_end":140800,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The trait defines which operations need to be implemented by a type that should","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140801,"byte_end":140884,"line_start":178,"line_end":178,"column_start":1,"column_end":84}},{"value":"/ be usable as an HTTP/2 stream. By implementing this trait, clients can implement only","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140885,"byte_end":140974,"line_start":179,"line_end":179,"column_start":1,"column_end":90}},{"value":"/ stream-level logic, such as how the received data should be handled, or which data should be","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140975,"byte_end":141071,"line_start":180,"line_end":180,"column_start":1,"column_end":97}},{"value":"/ sent to the peer, without having to worry about the lower-level details of session and","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141072,"byte_end":141162,"line_start":181,"line_end":181,"column_start":1,"column_end":91}},{"value":"/ connection management (e.g. handling raw frames or tracking stream status).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141163,"byte_end":141242,"line_start":182,"line_end":182,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141315,"byte_end":141318,"line_start":185,"line_end":185,"column_start":8,"column_end":11},"name":"new","qualname":"::http::session::Stream::new","value":"fn new(StreamId) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Create a new stream with the given ID\n","sig":null,"attributes":[{"value":"/ Create a new stream with the given ID","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141266,"byte_end":141307,"line_start":184,"line_end":184,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141421,"byte_end":141435,"line_start":187,"line_end":187,"column_start":8,"column_end":22},"name":"new_data_chunk","qualname":"::http::session::Stream::new_data_chunk","value":"fn new_data_chunk(&mut Self, &[u8])","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Handle a new data chunk that has arrived for the stream.\n","sig":null,"attributes":[{"value":"/ Handle a new data chunk that has arrived for the stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141353,"byte_end":141413,"line_start":186,"line_end":186,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141563,"byte_end":141574,"line_start":190,"line_end":190,"column_start":8,"column_end":19},"name":"set_headers","qualname":"::http::session::Stream::set_headers","value":"fn set_headers(&mut Self, Vec<Header>)","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Set headers for a stream. A stream is only allowed to have one set of\n headers.\n","sig":null,"attributes":[{"value":"/ Set headers for a stream. A stream is only allowed to have one set of","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141465,"byte_end":141538,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ headers.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141543,"byte_end":141555,"line_start":189,"line_end":189,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141675,"byte_end":141684,"line_start":192,"line_end":192,"column_start":8,"column_end":17},"name":"set_state","qualname":"::http::session::Stream::set_state","value":"fn set_state(&mut Self, StreamState)","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Sets the stream state to the newly provided state.\n","sig":null,"attributes":[{"value":"/ Sets the stream state to the newly provided state.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141613,"byte_end":141667,"line_start":191,"line_end":191,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142489,"byte_end":142503,"line_start":207,"line_end":207,"column_start":8,"column_end":22},"name":"get_data_chunk","qualname":"::http::session::Stream::get_data_chunk","value":"fn get_data_chunk(&mut Self, &mut [u8])\n-> Result<StreamDataChunk, StreamDataError>","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Places the next data chunk that should be written onto the stream into the given buffer.","sig":null,"attributes":[{"value":"/ Places the next data chunk that should be written onto the stream into the given buffer.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141722,"byte_end":141814,"line_start":194,"line_end":194,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141819,"byte_end":141822,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141827,"byte_end":141840,"line_start":196,"line_end":196,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141845,"byte_end":141848,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The returned variant of the `StreamDataChunk` enum can indicate that the returned chunk is","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141853,"byte_end":141947,"line_start":198,"line_end":198,"column_start":5,"column_end":99}},{"value":"/ the last one that the stream can write (the `StreamDataChunk::Last` variant).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":141952,"byte_end":142033,"line_start":199,"line_end":199,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142038,"byte_end":142041,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ It can also indicate that the stream currently does not have any data that could be","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142046,"byte_end":142133,"line_start":201,"line_end":201,"column_start":5,"column_end":92}},{"value":"/ written, but it isn't closed yet, implying that at a later time some data might become","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142138,"byte_end":142228,"line_start":202,"line_end":202,"column_start":5,"column_end":95}},{"value":"/ available for writing (the `StreamDataChunk::Unavailable` variant).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142233,"byte_end":142304,"line_start":203,"line_end":203,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142309,"byte_end":142312,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The `StreamDataChunk::Chunk` indicates that the chunk of the given length has been placed","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142317,"byte_end":142410,"line_start":205,"line_end":205,"column_start":5,"column_end":98}},{"value":"/ into the buffer and that more data might follow on the stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142415,"byte_end":142481,"line_start":206,"line_end":206,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142622,"byte_end":142624,"line_start":210,"line_end":210,"column_start":8,"column_end":10},"name":"id","qualname":"::http::session::Stream::id","value":"fn id(&Self) -> StreamId","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the ID of the stream.\n","sig":null,"attributes":[{"value":"/ Returns the ID of the stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142581,"byte_end":142614,"line_start":209,"line_end":209,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142701,"byte_end":142706,"line_start":212,"line_end":212,"column_start":8,"column_end":13},"name":"state","qualname":"::http::session::Stream::state","value":"fn state(&Self) -> StreamState","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the current state of the stream.\n","sig":null,"attributes":[{"value":"/ Returns the current state of the stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142649,"byte_end":142693,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142877,"byte_end":142882,"line_start":216,"line_end":216,"column_start":8,"column_end":13},"name":"close","qualname":"::http::session::Stream::close","value":"fn close(&mut Self)","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Transitions the stream state to closed. After this, the stream is considered to be closed\n for any further reads or writes.\n","sig":null,"attributes":[{"value":"/ Transitions the stream state to closed. After this, the stream is considered to be closed","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142735,"byte_end":142828,"line_start":214,"line_end":214,"column_start":5,"column_end":98}},{"value":"/ for any further reads or writes.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142833,"byte_end":142869,"line_start":215,"line_end":215,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":143117,"byte_end":143128,"line_start":220,"line_end":220,"column_start":8,"column_end":19},"name":"close_local","qualname":"::http::session::Stream::close_local","value":"fn close_local(&mut Self)","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Updates the `Stream` status to indicate that it is closed locally.","sig":null,"attributes":[{"value":"/ Updates the `Stream` status to indicate that it is closed locally.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":142939,"byte_end":143009,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":143014,"byte_end":143017,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ If the stream is closed on the remote end, then it is fully closed after this call.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":143022,"byte_end":143109,"line_start":219,"line_end":219,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":143537,"byte_end":143549,"line_start":230,"line_end":230,"column_start":8,"column_end":20},"name":"close_remote","qualname":"::http::session::Stream::close_remote","value":"fn close_remote(&mut Self)","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Updates the `Stream` status to indicate that it is closed on the remote peer's side.","sig":null,"attributes":[{"value":"/ Updates the `Stream` status to indicate that it is closed on the remote peer's side.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":143346,"byte_end":143434,"line_start":227,"line_end":227,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":143439,"byte_end":143442,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ If the stream is also locally closed, then it is fully closed after this call.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":143447,"byte_end":143529,"line_start":229,"line_end":229,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":143902,"byte_end":143911,"line_start":240,"line_end":240,"column_start":8,"column_end":17},"name":"is_closed","qualname":"::http::session::Stream::is_closed","value":"fn is_closed(&Self) -> bool","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns whether the stream is closed.","sig":null,"attributes":[{"value":"/ Returns whether the stream is closed.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":143767,"byte_end":143808,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":143813,"byte_end":143816,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ A stream is considered to be closed iff its state is set to `Closed`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":143821,"byte_end":143894,"line_start":239,"line_end":239,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144028,"byte_end":144043,"line_start":242,"line_end":242,"column_start":8,"column_end":23},"name":"is_closed_local","qualname":"::http::session::Stream::is_closed_local","value":"fn is_closed_local(&Self) -> bool","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns whether the stream is closed locally.\n","sig":null,"attributes":[{"value":"/ Returns whether the stream is closed locally.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":143971,"byte_end":144020,"line_start":241,"line_end":241,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144309,"byte_end":144325,"line_start":249,"line_end":249,"column_start":8,"column_end":24},"name":"is_closed_remote","qualname":"::http::session::Stream::is_closed_remote","value":"fn is_closed_remote(&Self) -> bool","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns whether the remote peer has closed the stream. This includes a fully closed stream.\n","sig":null,"attributes":[{"value":"/ Returns whether the remote peer has closed the stream. This includes a fully closed stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144206,"byte_end":144301,"line_start":248,"line_end":248,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144656,"byte_end":144669,"line_start":262,"line_end":262,"column_start":12,"column_end":25},"name":"DefaultStream","qualname":"::http::session::DefaultStream","value":"DefaultStream { stream_id, headers, body, state }","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331}],"decl_id":null,"docs":" An implementation of the `Stream` trait that saves all headers and data\n in memory.","sig":null,"attributes":[{"value":"/ An implementation of the `Stream` trait that saves all headers and data","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144488,"byte_end":144563,"line_start":257,"line_end":257,"column_start":1,"column_end":76}},{"value":"/ in memory.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144564,"byte_end":144578,"line_start":258,"line_end":258,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144579,"byte_end":144582,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ Stores its outgoing data as a `Vec<u8>`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144583,"byte_end":144627,"line_start":260,"line_end":260,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144709,"byte_end":144718,"line_start":264,"line_end":264,"column_start":9,"column_end":18},"name":"stream_id","qualname":"::http::session::DefaultStream::stream_id","value":"u32","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":" The ID of the stream\n","sig":null,"attributes":[{"value":"/ The ID of the stream","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144676,"byte_end":144700,"line_start":263,"line_end":263,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144813,"byte_end":144820,"line_start":266,"line_end":266,"column_start":9,"column_end":16},"name":"headers","qualname":"::http::session::DefaultStream::headers","value":"std::option::Option<std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>>","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":" The headers associated with the stream (i.e. the response headers)\n","sig":null,"attributes":[{"value":"/ The headers associated with the stream (i.e. the response headers)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144734,"byte_end":144804,"line_start":265,"line_end":265,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144907,"byte_end":144911,"line_start":268,"line_end":268,"column_start":9,"column_end":13},"name":"body","qualname":"::http::session::DefaultStream::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":" The body of the stream (i.e. the response body)\n","sig":null,"attributes":[{"value":"/ The body of the stream (i.e. the response body)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144847,"byte_end":144898,"line_start":267,"line_end":267,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144964,"byte_end":144969,"line_start":270,"line_end":270,"column_start":9,"column_end":14},"name":"state","qualname":"::http::session::DefaultStream::state","value":"http::session::StreamState","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":" The current stream state.\n","sig":null,"attributes":[{"value":"/ The current stream state.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":144926,"byte_end":144955,"line_start":269,"line_end":269,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145255,"byte_end":145258,"line_start":278,"line_end":278,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultStream>::new","value":"fn new(StreamId) -> DefaultStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DefaultStream` with the given ID.\n","sig":null,"attributes":[{"value":"/ Create a new `DefaultStream` with the given ID.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145192,"byte_end":145243,"line_start":277,"line_end":277,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145668,"byte_end":145681,"line_start":292,"line_end":292,"column_start":12,"column_end":25},"name":"set_full_data","qualname":"<DefaultStream>::set_full_data","value":"fn set_full_data(&mut Self, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the outgoing data of the stream to the given `Vec`.","sig":null,"attributes":[{"value":"/ Sets the outgoing data of the stream to the given `Vec`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145497,"byte_end":145557,"line_start":288,"line_end":288,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145562,"byte_end":145565,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Any previously associated (and perhaps unwritten) data is discarded.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145570,"byte_end":145642,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145647,"byte_end":145656,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145803,"byte_end":145806,"line_start":298,"line_end":298,"column_start":8,"column_end":11},"name":"new","qualname":"<DefaultStream as http::session::Stream>::new","value":"fn new(StreamId) -> DefaultStream","parent":{"krate":0,"index":434},"children":[],"decl_id":{"krate":0,"index":435},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145899,"byte_end":145913,"line_start":302,"line_end":302,"column_start":8,"column_end":22},"name":"new_data_chunk","qualname":"<DefaultStream as http::session::Stream>::new_data_chunk","value":"fn new_data_chunk(&mut Self, &[u8])","parent":{"krate":0,"index":434},"children":[],"decl_id":{"krate":0,"index":436},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":146007,"byte_end":146018,"line_start":306,"line_end":306,"column_start":8,"column_end":19},"name":"set_headers","qualname":"<DefaultStream as http::session::Stream>::set_headers","value":"fn set_headers(&mut Self, Vec<Header>)","parent":{"krate":0,"index":434},"children":[],"decl_id":{"krate":0,"index":437},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":146105,"byte_end":146114,"line_start":309,"line_end":309,"column_start":8,"column_end":17},"name":"set_state","qualname":"<DefaultStream as http::session::Stream>::set_state","value":"fn set_state(&mut Self, StreamState)","parent":{"krate":0,"index":434},"children":[],"decl_id":{"krate":0,"index":438},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":146178,"byte_end":146180,"line_start":311,"line_end":311,"column_start":8,"column_end":10},"name":"id","qualname":"<DefaultStream as http::session::Stream>::id","value":"fn id(&Self) -> StreamId","parent":{"krate":0,"index":434},"children":[],"decl_id":{"krate":0,"index":440},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":146238,"byte_end":146243,"line_start":314,"line_end":314,"column_start":8,"column_end":13},"name":"state","qualname":"<DefaultStream as http::session::Stream>::state","value":"fn state(&Self) -> StreamState","parent":{"krate":0,"index":434},"children":[],"decl_id":{"krate":0,"index":441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":146289,"byte_end":146303,"line_start":316,"line_end":316,"column_start":8,"column_end":22},"name":"get_data_chunk","qualname":"<DefaultStream as http::session::Stream>::get_data_chunk","value":"fn get_data_chunk(&mut Self, &mut [u8])\n-> Result<StreamDataChunk, StreamDataError>","parent":{"krate":0,"index":434},"children":[],"decl_id":{"krate":0,"index":439},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":459},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"priority","qualname":"::http::priority","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":495},{"krate":0,"index":500}],"decl_id":null,"docs":" The module exposes an API for defining data prioritization strategies.","sig":null,"attributes":[{"value":"/ The module exposes an API for defining data prioritization strategies.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":152936,"byte_end":153010,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":153011,"byte_end":153014,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Types that implement the `DataPrioritizer` trait can be used to provide new data for an","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":153015,"byte_end":153106,"line_start":3,"line_end":3,"column_start":1,"column_end":92}},{"value":"/ `HttpConnection` to send to its peer. Neither the `HttpConnection` nor the `DataPrioritizer`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":153107,"byte_end":153203,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"/ have control over exactly *when* the data is sent. This is left up to the particular client","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":153204,"byte_end":153299,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"/ implementations to trigger.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":153300,"byte_end":153331,"line_start":6,"line_end":6,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":487},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":153620,"byte_end":153635,"line_start":20,"line_end":20,"column_start":11,"column_end":26},"name":"DataPrioritizer","qualname":"::http::priority::DataPrioritizer","value":"DataPrioritizer","parent":null,"children":[{"krate":0,"index":488}],"decl_id":null,"docs":" A trait that types that want to provide data to an HTTP/2 connection need to implement.\n","sig":null,"attributes":[{"value":"/ A trait that types that want to provide data to an HTTP/2 connection need to implement.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":153518,"byte_end":153609,"line_start":19,"line_end":19,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":153820,"byte_end":153834,"line_start":23,"line_end":23,"column_start":8,"column_end":22},"name":"get_next_chunk","qualname":"::http::priority::DataPrioritizer::get_next_chunk","value":"fn get_next_chunk(&mut Self) -> HttpResult<Option<DataChunk>>","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":" Returns the next `DataChunk` that should be sent on the HTTP/2 connection. `None` indicates\n that currently there was no data that could be sent at that point.\n","sig":null,"attributes":[{"value":"/ Returns the next `DataChunk` that should be sent on the HTTP/2 connection. `None` indicates","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":153642,"byte_end":153737,"line_start":21,"line_end":21,"column_start":5,"column_end":100}},{"value":"/ that currently there was no data that could be sent at that point.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":153742,"byte_end":153812,"line_start":22,"line_end":22,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":489},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":154213,"byte_end":154230,"line_start":31,"line_end":31,"column_start":12,"column_end":29},"name":"SimplePrioritizer","qualname":"::http::priority::SimplePrioritizer","value":"SimplePrioritizer {  }","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494}],"decl_id":null,"docs":" An implementation of the `DataPrioritizer` trait that is based on finding the first stream from\n the given `SessionState` instance that can send data and returning this chunk.","sig":null,"attributes":[{"value":"/ An implementation of the `DataPrioritizer` trait that is based on finding the first stream from","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":153883,"byte_end":153982,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ the given `SessionState` instance that can send data and returning this chunk.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":153983,"byte_end":154065,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":154066,"byte_end":154069,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ For all means and purposes, the order of data chunks that the prioritizer returns is undefined","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":154070,"byte_end":154168,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/ and should not be relied on.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":154169,"byte_end":154201,"line_start":30,"line_end":30,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":154759,"byte_end":154762,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<SimplePrioritizer>::new","value":"fn new(&'a mut State, &'b mut [u8]) -> SimplePrioritizer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SimplePrioritizer` that will use the given state to find stream data that\n should be sent and use the given buffer to hold the data of the returned chunk.\n","sig":null,"attributes":[{"value":"/ Creates a new `SimplePrioritizer` that will use the given state to find stream data that","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":154567,"byte_end":154659,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ should be sent and use the given buffer to hold the data of the returned chunk.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":154664,"byte_end":154747,"line_start":40,"line_end":40,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":155057,"byte_end":155071,"line_start":51,"line_end":51,"column_start":8,"column_end":22},"name":"get_next_chunk","qualname":"<SimplePrioritizer as http::priority::DataPrioritizer>::get_next_chunk","value":"fn get_next_chunk(&mut Self) -> HttpResult<Option<DataChunk>>","parent":{"krate":0,"index":487},"children":[],"decl_id":{"krate":0,"index":488},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":506},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::http::client","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":599},{"krate":0,"index":603},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":620},{"krate":0,"index":624},{"krate":0,"index":630},{"krate":0,"index":643},{"krate":0,"index":647},{"krate":0,"index":651}],"decl_id":null,"docs":" The module contains a number of reusable components for implementing the client side of an\n HTTP/2 connection.\n","sig":null,"attributes":[{"value":"/ The module contains a number of reusable components for implementing the client side of an","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":159848,"byte_end":159942,"line_start":1,"line_end":1,"column_start":1,"column_end":95}},{"value":"/ HTTP/2 connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":159943,"byte_end":159965,"line_start":2,"line_end":2,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":583},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":160765,"byte_end":160778,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"write_preface","qualname":"::http::client::write_preface","value":"fn write_preface<W>(&mut W) -> Result<(), io::Error> where W: io::Write","parent":null,"children":[],"decl_id":null,"docs":" Writes the client preface to the underlying HTTP/2 connection.","sig":null,"attributes":[{"value":"/ Writes the client preface to the underlying HTTP/2 connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":160479,"byte_end":160545,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":160546,"byte_end":160549,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ According to the HTTP/2 spec, a client preface is first a specific","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":160550,"byte_end":160620,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ sequence of octets, followed by a settings frame.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":160621,"byte_end":160674,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":160675,"byte_end":160678,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":160679,"byte_end":160692,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ Any error raised by the underlying connection is propagated.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":160693,"byte_end":160757,"line_start":34,"line_end":34,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":585},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161521,"byte_end":161533,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"ClientStream","qualname":"::http::client::ClientStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A convenience wrapper type that represents an established client network transport stream.\n It wraps the stream itself, the scheme of the protocol to be used, and the remote\n host name.\n","sig":null,"attributes":[{"value":"/ A convenience wrapper type that represents an established client network transport stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161314,"byte_end":161408,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/ It wraps the stream itself, the scheme of the protocol to be used, and the remote","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161409,"byte_end":161494,"line_start":54,"line_end":54,"column_start":1,"column_end":86}},{"value":"/ host name.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161495,"byte_end":161509,"line_start":55,"line_end":55,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":588},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161555,"byte_end":161561,"line_start":56,"line_end":56,"column_start":46,"column_end":52},"name":"0","qualname":"::http::client::ClientStream::0","value":"TS","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":589},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161563,"byte_end":161577,"line_start":56,"line_end":56,"column_start":54,"column_end":68},"name":"1","qualname":"::http::client::ClientStream::1","value":"http::HttpScheme","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":590},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161579,"byte_end":161589,"line_start":56,"line_end":56,"column_start":70,"column_end":80},"name":"2","qualname":"::http::client::ClientStream::2","value":"std::string::String","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":591},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161693,"byte_end":161709,"line_start":60,"line_end":60,"column_start":11,"column_end":27},"name":"HttpConnectError","qualname":"::http::client::HttpConnectError","value":"HttpConnectError: error::Error + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" A marker trait for errors raised by attempting to establish an HTTP/2\n connection.\n","sig":null,"attributes":[{"value":"/ A marker trait for errors raised by attempting to establish an HTTP/2","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161593,"byte_end":161666,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161667,"byte_end":161682,"line_start":59,"line_end":59,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161817,"byte_end":161821,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"from","qualname":"<HttpError as std::convert::From>::from","value":"fn from(E) -> HttpError","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":595},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162489,"byte_end":162500,"line_start":76,"line_end":76,"column_start":11,"column_end":22},"name":"HttpConnect","qualname":"::http::client::HttpConnect","value":"HttpConnect","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"decl_id":null,"docs":" A trait that can be implemented by structs that want to provide the\n functionality of establishing network connections for use by HTTP/2 connections.","sig":null,"attributes":[{"value":"/ A trait that can be implemented by structs that want to provide the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161878,"byte_end":161949,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/ functionality of establishing network connections for use by HTTP/2 connections.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161950,"byte_end":162034,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162035,"byte_end":162038,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The `ClientStream` instance returned from the `connect` method needs to contain","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162039,"byte_end":162122,"line_start":69,"line_end":69,"column_start":1,"column_end":84}},{"value":"/ the `TransportStream` that can be used by an HTTP/2 connection, along with the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162123,"byte_end":162205,"line_start":70,"line_end":70,"column_start":1,"column_end":83}},{"value":"/ appropriate scheme (depending on how the connection was established), and the remote","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162206,"byte_end":162294,"line_start":71,"line_end":71,"column_start":1,"column_end":89}},{"value":"/ host name.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162295,"byte_end":162309,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162310,"byte_end":162313,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The transport stream needs to have already been initialized by writing the client","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162314,"byte_end":162399,"line_start":74,"line_end":74,"column_start":1,"column_end":86}},{"value":"/ preface. The helper function `write_preface` can be used for this purpose.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162400,"byte_end":162478,"line_start":75,"line_end":75,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":596},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162663,"byte_end":162669,"line_start":79,"line_end":79,"column_start":10,"column_end":16},"name":"Stream","qualname":"::http::client::HttpConnect::Stream","value":"type Stream: TransportStream;","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" The type of the underlying transport stream that the `HttpConnection`s\n produced by this `HttpConnect` implementation will be based on.\n","sig":null,"attributes":[{"value":"/ The type of the underlying transport stream that the `HttpConnection`s","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162507,"byte_end":162581,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/ produced by this `HttpConnect` implementation will be based on.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162586,"byte_end":162653,"line_start":78,"line_end":78,"column_start":5,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":597},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162831,"byte_end":162834,"line_start":82,"line_end":82,"column_start":10,"column_end":13},"name":"Err","qualname":"::http::client::HttpConnect::Err","value":"type Err: HttpConnectError + 'static;","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" The type of the error that can be produced by trying to establish the\n connection (i.e. calling the `connect` method).\n","sig":null,"attributes":[{"value":"/ The type of the error that can be produced by trying to establish the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162692,"byte_end":162765,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ connection (i.e. calling the `connect` method).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162770,"byte_end":162821,"line_start":81,"line_end":81,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162953,"byte_end":162960,"line_start":85,"line_end":85,"column_start":8,"column_end":15},"name":"connect","qualname":"::http::client::HttpConnect::connect","value":"fn connect(Self) -> Result<ClientStream<Self::Stream>, Self::Err>","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Establishes a network connection that can be used by HTTP/2 connections.\n","sig":null,"attributes":[{"value":"/ Establishes a network connection that can be used by HTTP/2 connections.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":162869,"byte_end":162945,"line_start":84,"line_end":84,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163354,"byte_end":163372,"line_start":95,"line_end":95,"column_start":12,"column_end":30},"name":"CleartextConnector","qualname":"::http::client::CleartextConnector","value":"CleartextConnector { host, port }","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"decl_id":null,"docs":" A struct that establishes a cleartext TCP connection that can be used by an HTTP/2\n connection. Defaults to using port 80.","sig":null,"attributes":[{"value":"/ A struct that establishes a cleartext TCP connection that can be used by an HTTP/2","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163020,"byte_end":163106,"line_start":88,"line_end":88,"column_start":1,"column_end":87}},{"value":"/ connection. Defaults to using port 80.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163107,"byte_end":163149,"line_start":89,"line_end":89,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163150,"byte_end":163153,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ It assumes that the connection is based on prior knowledge of the server's","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163154,"byte_end":163232,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ support for HTTP/2.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163233,"byte_end":163256,"line_start":92,"line_end":92,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163257,"byte_end":163260,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ More information in the [spec](http://http2.github.io/http2-spec/#known-http)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163261,"byte_end":163342,"line_start":94,"line_end":94,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":601},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163450,"byte_end":163454,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"name":"host","qualname":"::http::client::CleartextConnector::host","value":"&'a str","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":" The host to which the connection should be established\n","sig":null,"attributes":[{"value":"/ The host to which the connection should be established","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163383,"byte_end":163441,"line_start":96,"line_end":96,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":602},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163536,"byte_end":163540,"line_start":99,"line_end":99,"column_start":9,"column_end":13},"name":"port","qualname":"::http::client::CleartextConnector::port","value":"u16","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":" The port on which the connection should be established\n","sig":null,"attributes":[{"value":"/ The port on which the connection should be established","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163469,"byte_end":163527,"line_start":98,"line_end":98,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163720,"byte_end":163723,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<CleartextConnector>::new","value":"fn new(&'a str) -> CleartextConnector","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `CleartextConnector` that will attempt to establish a connection to the given\n host on port 80.\n","sig":null,"attributes":[{"value":"/ Creates a new `CleartextConnector` that will attempt to establish a connection to the given","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163588,"byte_end":163683,"line_start":103,"line_end":103,"column_start":5,"column_end":100}},{"value":"/ host on port 80.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163688,"byte_end":163708,"line_start":104,"line_end":104,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163965,"byte_end":163974,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"with_port","qualname":"<CleartextConnector>::with_port","value":"fn with_port(&'a str, u16) -> CleartextConnector","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `CleartextConnector` that will attempt to establish a connection to the given\n host on the given port.\n","sig":null,"attributes":[{"value":"/ Creates a new `CleartextConnector` that will attempt to establish a connection to the given","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163826,"byte_end":163921,"line_start":109,"line_end":109,"column_start":5,"column_end":100}},{"value":"/ host on the given port.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163926,"byte_end":163953,"line_start":110,"line_end":110,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164266,"byte_end":164287,"line_start":119,"line_end":119,"column_start":12,"column_end":33},"name":"CleartextConnectError","qualname":"::http::client::CleartextConnectError","value":"","parent":null,"children":[],"decl_id":null,"docs":" A newtype wrapping the `io::Error`, as it occurs when attempting to\n establish an HTTP/2 connection over cleartext TCP (with prior knowledge).\n","sig":null,"attributes":[{"value":"/ A newtype wrapping the `io::Error`, as it occurs when attempting to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164088,"byte_end":164159,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/ establish an HTTP/2 connection over cleartext TCP (with prior knowledge).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164160,"byte_end":164237,"line_start":117,"line_end":117,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164354,"byte_end":164357,"line_start":122,"line_end":122,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CleartextConnectError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10016},"children":[],"decl_id":{"krate":2,"index":10017},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164567,"byte_end":164578,"line_start":128,"line_end":128,"column_start":8,"column_end":19},"name":"description","qualname":"<CleartextConnectError as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2559},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164639,"byte_end":164644,"line_start":132,"line_end":132,"column_start":8,"column_end":13},"name":"cause","qualname":"<CleartextConnectError as std::error::Error>::cause","value":"fn cause(&Self) -> Option<&error::Error>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2560},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164888,"byte_end":164892,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"from","qualname":"<CleartextConnectError as std::convert::From>::from","value":"fn from(io::Error) -> CleartextConnectError","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":165320,"byte_end":165327,"line_start":152,"line_end":152,"column_start":8,"column_end":15},"name":"connect","qualname":"<CleartextConnector as http::client::HttpConnect>::connect","value":"fn connect(Self) -> Result<ClientStream<TcpStream>, CleartextConnectError>","parent":{"krate":0,"index":595},"children":[],"decl_id":{"krate":0,"index":598},"docs":" Establishes a cleartext TCP connection based on the host and port.\n If it is not possible, returns an `HttpError`.\n","sig":null,"attributes":[{"value":"/ Establishes a cleartext TCP connection based on the host and port.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":165187,"byte_end":165257,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ If it is not possible, returns an `HttpError`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":165262,"byte_end":165312,"line_start":151,"line_end":151,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":620},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":165994,"byte_end":166007,"line_start":166,"line_end":166,"column_start":12,"column_end":25},"name":"RequestStream","qualname":"::http::client::RequestStream","value":"RequestStream { headers, stream }","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623}],"decl_id":null,"docs":" A struct representing a request stream. It provides the headers that are to be sent when\n initiating the request, as well as a `Stream` instance that handles the received response and\n provides the request body.\n","sig":null,"attributes":[{"value":"/ A struct representing a request stream. It provides the headers that are to be sent when","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":165761,"byte_end":165853,"line_start":163,"line_end":163,"column_start":1,"column_end":93}},{"value":"/ initiating the request, as well as a `Stream` instance that handles the received response and","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":165854,"byte_end":165951,"line_start":164,"line_end":164,"column_start":1,"column_end":98}},{"value":"/ provides the request body.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":165952,"byte_end":165982,"line_start":165,"line_end":165,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":622},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166101,"byte_end":166108,"line_start":168,"line_end":168,"column_start":9,"column_end":16},"name":"headers","qualname":"::http::client::RequestStream::headers","value":"std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" The list of headers that will be sent with the request.\n","sig":null,"attributes":[{"value":"/ The list of headers that will be sent with the request.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166033,"byte_end":166092,"line_start":167,"line_end":167,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":623},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166268,"byte_end":166274,"line_start":171,"line_end":171,"column_start":9,"column_end":15},"name":"stream","qualname":"::http::client::RequestStream::stream","value":"S","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" The underlying `Stream` instance, which will handle the response, as well as optionally\n provide the body of the request.\n","sig":null,"attributes":[{"value":"/ The underlying `Stream` instance, which will handle the response, as well as optionally","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166127,"byte_end":166218,"line_start":169,"line_end":169,"column_start":5,"column_end":96}},{"value":"/ provide the body of the request.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166223,"byte_end":166259,"line_start":170,"line_end":170,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":624},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166466,"byte_end":166482,"line_start":176,"line_end":176,"column_start":12,"column_end":28},"name":"ClientConnection","qualname":"::http::client::ClientConnection","value":"ClientConnection { state }","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"decl_id":null,"docs":" The struct extends the `HttpConnection` API with client-specific methods (such as\n `start_request`) and wires the `HttpConnection` to the client `Session` callbacks.\n","sig":null,"attributes":[{"value":"/ The struct extends the `HttpConnection` API with client-specific methods (such as","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166282,"byte_end":166367,"line_start":174,"line_end":174,"column_start":1,"column_end":86}},{"value":"/ `start_request`) and wires the `HttpConnection` to the client `Session` callbacks.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166368,"byte_end":166454,"line_start":175,"line_end":175,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":629},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166861,"byte_end":166866,"line_start":183,"line_end":183,"column_start":9,"column_end":14},"name":"state","qualname":"::http::client::ClientConnection::state","value":"State","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" The state of the session associated to this client connection. Maintains the status of the\n connection streams.\n","sig":null,"attributes":[{"value":"/ The state of the session associated to this client connection. Maintains the status of the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166730,"byte_end":166824,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ connection streams.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166829,"byte_end":166852,"line_start":182,"line_end":182,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":167234,"byte_end":167249,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"with_connection","qualname":"<ClientConnection<S, R, State>>::with_connection","value":"fn with_connection(HttpConnection<S, R>, State)\n-> ClientConnection<S, R, State>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ClientConnection` that will use the given `HttpConnection`\n for all its underlying HTTP/2 communication.","sig":null,"attributes":[{"value":"/ Creates a new `ClientConnection` that will use the given `HttpConnection`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166997,"byte_end":167074,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ for all its underlying HTTP/2 communication.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":167079,"byte_end":167127,"line_start":189,"line_end":189,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":167132,"byte_end":167135,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The given `state` instance will handle the maintenance of the session's state.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":167140,"byte_end":167222,"line_start":191,"line_end":191,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":167521,"byte_end":167527,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"scheme","qualname":"<ClientConnection<S, R, State>>::scheme","value":"fn scheme(&Self) -> HttpScheme","parent":null,"children":[],"decl_id":null,"docs":" Returns the scheme of the underlying `HttpConnection`.\n","sig":null,"attributes":[{"value":"/ Returns the scheme of the underlying `HttpConnection`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":167437,"byte_end":167495,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":167500,"byte_end":167509,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":167841,"byte_end":167845,"line_start":210,"line_end":210,"column_start":12,"column_end":16},"name":"init","qualname":"<ClientConnection<S, R, State>>::init","value":"fn init(&mut Self) -> HttpResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Performs the initialization of the `ClientConnection`.","sig":null,"attributes":[{"value":"/ Performs the initialization of the `ClientConnection`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":167587,"byte_end":167645,"line_start":206,"line_end":206,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":167650,"byte_end":167653,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This means that it expects the next frame that it receives to be the server preface -- i.e.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":167658,"byte_end":167753,"line_start":208,"line_end":208,"column_start":5,"column_end":100}},{"value":"/ a `SETTINGS` frame. Returns an `HttpError` if this is not the case.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":167758,"byte_end":167829,"line_start":209,"line_end":209,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":168728,"byte_end":168741,"line_start":235,"line_end":235,"column_start":12,"column_end":25},"name":"start_request","qualname":"<ClientConnection<S, R, State>>::start_request","value":"fn start_request(&mut Self, RequestStream<State::Stream>) -> HttpResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Starts a new request based on the given `RequestStream`.","sig":null,"attributes":[{"value":"/ Starts a new request based on the given `RequestStream`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":168553,"byte_end":168613,"line_start":232,"line_end":232,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":168618,"byte_end":168621,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ For now it does not perform any validation whether the given `RequestStream` is valid.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":168626,"byte_end":168716,"line_start":234,"line_end":234,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":169271,"byte_end":169288,"line_start":247,"line_end":247,"column_start":12,"column_end":29},"name":"handle_next_frame","qualname":"<ClientConnection<S, R, State>>::handle_next_frame","value":"fn handle_next_frame(&mut Self) -> HttpResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Fully handles the next incoming frame. Events are passed on to the internal `session`\n instance.\n","sig":null,"attributes":[{"value":"/ Fully handles the next incoming frame. Events are passed on to the internal `session`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":169138,"byte_end":169227,"line_start":244,"line_end":244,"column_start":5,"column_end":94}},{"value":"/ instance.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":169232,"byte_end":169245,"line_start":245,"line_end":245,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":169250,"byte_end":169259,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":169657,"byte_end":169671,"line_start":256,"line_end":256,"column_start":12,"column_end":26},"name":"send_next_data","qualname":"<ClientConnection<S, R, State>>::send_next_data","value":"fn send_next_data(&mut Self) -> HttpResult<SendStatus>","parent":null,"children":[],"decl_id":null,"docs":" Queues a new DATA frame onto the underlying `SendFrame`.","sig":null,"attributes":[{"value":"/ Queues a new DATA frame onto the underlying `SendFrame`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":169444,"byte_end":169504,"line_start":252,"line_end":252,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":169509,"byte_end":169512,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Currently, no prioritization of streams is taken into account and which stream's data is","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":169517,"byte_end":169609,"line_start":254,"line_end":254,"column_start":5,"column_end":97}},{"value":"/ queued cannot be relied on.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":169614,"byte_end":169645,"line_start":255,"line_end":255,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":643},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170820,"byte_end":170833,"line_start":280,"line_end":280,"column_start":12,"column_end":25},"name":"ClientSession","qualname":"::http::client::ClientSession","value":"ClientSession {  }","parent":null,"children":[{"krate":0,"index":646}],"decl_id":null,"docs":" An implementation of the `Session` trait specific to handling client HTTP/2 connections.","sig":null,"attributes":[{"value":"/ An implementation of the `Session` trait specific to handling client HTTP/2 connections.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170062,"byte_end":170154,"line_start":267,"line_end":267,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170155,"byte_end":170158,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ While handling the events signaled by the `HttpConnection`, the struct will modify the given","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170159,"byte_end":170255,"line_start":269,"line_end":269,"column_start":1,"column_end":97}},{"value":"/ session state appropriately.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170256,"byte_end":170288,"line_start":270,"line_end":270,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170289,"byte_end":170292,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ The purpose of the type is to make it easier for client implementations to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170293,"byte_end":170371,"line_start":272,"line_end":272,"column_start":1,"column_end":79}},{"value":"/ only handle stream-level events by providing a `Stream` implementation,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170372,"byte_end":170447,"line_start":273,"line_end":273,"column_start":1,"column_end":76}},{"value":"/ instead of having to implement all session management callbacks.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170448,"byte_end":170516,"line_start":274,"line_end":274,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170517,"byte_end":170520,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ For example, by varying the `Stream` implementation it is easy to implement","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170521,"byte_end":170600,"line_start":276,"line_end":276,"column_start":1,"column_end":80}},{"value":"/ a client that streams responses directly into a file on the local file system,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170601,"byte_end":170683,"line_start":277,"line_end":277,"column_start":1,"column_end":83}},{"value":"/ instead of keeping it in memory (like the `DefaultStream` does), without","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170684,"byte_end":170760,"line_start":278,"line_end":278,"column_start":1,"column_end":77}},{"value":"/ having to change any HTTP/2-specific logic.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170761,"byte_end":170808,"line_start":279,"line_end":279,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":171075,"byte_end":171078,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"new","qualname":"<ClientSession>::new","value":"fn new(&'a mut State) -> ClientSession<, State>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ClientSession` associated to the given state.\n","sig":null,"attributes":[{"value":"/ Returns a new `ClientSession` associated to the given state.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170985,"byte_end":171049,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":171054,"byte_end":171063,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":171289,"byte_end":171303,"line_start":295,"line_end":295,"column_start":8,"column_end":22},"name":"new_data_chunk","qualname":"<ClientSession as http::session::Session>::new_data_chunk","value":"fn new_data_chunk(&mut Self, StreamId, &[u8])","parent":{"krate":0,"index":392},"children":[],"decl_id":{"krate":0,"index":393},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":171754,"byte_end":171765,"line_start":308,"line_end":308,"column_start":8,"column_end":19},"name":"new_headers","qualname":"<ClientSession as http::session::Session>::new_headers","value":"fn new_headers(&mut Self, StreamId, Vec<Header>)","parent":{"krate":0,"index":392},"children":[],"decl_id":{"krate":0,"index":394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":172219,"byte_end":172232,"line_start":321,"line_end":321,"column_start":8,"column_end":21},"name":"end_of_stream","qualname":"<ClientSession as http::session::Session>::end_of_stream","value":"fn end_of_stream(&mut Self, StreamId)","parent":{"krate":0,"index":392},"children":[],"decl_id":{"krate":0,"index":395},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":657},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::http::server","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":713},{"krate":0,"index":717},{"krate":0,"index":723},{"krate":0,"index":729}],"decl_id":null,"docs":" The module contains a number of reusable components for implementing the server side of an\n HTTP/2 connection.\n","sig":null,"attributes":[{"value":"/ The module contains a number of reusable components for implementing the server side of an","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":182986,"byte_end":183080,"line_start":1,"line_end":1,"column_start":1,"column_end":95}},{"value":"/ HTTP/2 connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":183081,"byte_end":183103,"line_start":2,"line_end":2,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":709},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":183557,"byte_end":183570,"line_start":26,"line_end":26,"column_start":12,"column_end":25},"name":"ServerSession","qualname":"::http::server::ServerSession","value":"ServerSession {  }","parent":null,"children":[{"krate":0,"index":712}],"decl_id":null,"docs":" An implementation of the `Session` trait for a server-side HTTP/2 connection.\n","sig":null,"attributes":[{"value":"/ An implementation of the `Session` trait for a server-side HTTP/2 connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":183464,"byte_end":183545,"line_start":25,"line_end":25,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":183743,"byte_end":183746,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<ServerSession>::new","value":"fn new(&'a mut State) -> ServerSession<, State>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":183722,"byte_end":183731,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":183957,"byte_end":183971,"line_start":40,"line_end":40,"column_start":8,"column_end":22},"name":"new_data_chunk","qualname":"<ServerSession as http::session::Session>::new_data_chunk","value":"fn new_data_chunk(&mut Self, StreamId, &[u8])","parent":{"krate":0,"index":392},"children":[],"decl_id":{"krate":0,"index":393},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":184421,"byte_end":184432,"line_start":52,"line_end":52,"column_start":8,"column_end":19},"name":"new_headers","qualname":"<ServerSession as http::session::Session>::new_headers","value":"fn new_headers(&mut Self, StreamId, Vec<Header>)","parent":{"krate":0,"index":392},"children":[],"decl_id":{"krate":0,"index":394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":185014,"byte_end":185027,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"end_of_stream","qualname":"<ServerSession as http::session::Session>::end_of_stream","value":"fn end_of_stream(&mut Self, StreamId)","parent":{"krate":0,"index":392},"children":[],"decl_id":{"krate":0,"index":395},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":723},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":185559,"byte_end":185575,"line_start":83,"line_end":83,"column_start":12,"column_end":28},"name":"ServerConnection","qualname":"::http::server::ServerConnection","value":"ServerConnection { state }","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"decl_id":null,"docs":" The struct provides a more convenient API for server-related functionality of an HTTP/2\n connection, such as sending a response back to the client.\n","sig":null,"attributes":[{"value":"/ The struct provides a more convenient API for server-related functionality of an HTTP/2","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":185393,"byte_end":185484,"line_start":81,"line_end":81,"column_start":1,"column_end":92}},{"value":"/ connection, such as sending a response back to the client.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":185485,"byte_end":185547,"line_start":82,"line_end":82,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":728},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":185954,"byte_end":185959,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"name":"state","qualname":"::http::server::ServerConnection::state","value":"State","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" The state of the session associated to this client connection. Maintains the status of the\n connection streams.\n","sig":null,"attributes":[{"value":"/ The state of the session associated to this client connection. Maintains the status of the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":185823,"byte_end":185917,"line_start":88,"line_end":88,"column_start":5,"column_end":99}},{"value":"/ connection streams.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":185922,"byte_end":185945,"line_start":89,"line_end":89,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":186228,"byte_end":186243,"line_start":97,"line_end":97,"column_start":12,"column_end":27},"name":"with_connection","qualname":"<ServerConnection<S, R, State>>::with_connection","value":"fn with_connection(HttpConnection<S, R>, State)\n-> ServerConnection<S, R, State>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ServerConnection` that will use the given `HttpConnection` for its\n underlying HTTP/2 communication.\n","sig":null,"attributes":[{"value":"/ Creates a new `ServerConnection` that will use the given `HttpConnection` for its","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":186090,"byte_end":186175,"line_start":95,"line_end":95,"column_start":5,"column_end":90}},{"value":"/ underlying HTTP/2 communication.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":186180,"byte_end":186216,"line_start":96,"line_end":96,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":186515,"byte_end":186521,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"scheme","qualname":"<ServerConnection<S, R, State>>::scheme","value":"fn scheme(&Self) -> HttpScheme","parent":null,"children":[],"decl_id":null,"docs":" Returns the scheme of the underlying `HttpConnection`.\n","sig":null,"attributes":[{"value":"/ Returns the scheme of the underlying `HttpConnection`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":186431,"byte_end":186489,"line_start":105,"line_end":105,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":186494,"byte_end":186503,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":186846,"byte_end":186850,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"init","qualname":"<ServerConnection<S, R, State>>::init","value":"fn init(&mut Self) -> HttpResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the `ServerConnection` by sending the server's settings and processing the\n client's.\n If the client does not provide a settings frame, returns an error.","sig":null,"attributes":[{"value":"/ Initializes the `ServerConnection` by sending the server's settings and processing the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":186581,"byte_end":186671,"line_start":111,"line_end":111,"column_start":5,"column_end":95}},{"value":"/ client's.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":186676,"byte_end":186689,"line_start":112,"line_end":112,"column_start":5,"column_end":18}},{"value":"/ If the client does not provide a settings frame, returns an error.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":186694,"byte_end":186764,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":186769,"byte_end":186772,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ TODO This method should eventually be split into two.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":186777,"byte_end":186834,"line_start":115,"line_end":115,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":187571,"byte_end":187588,"line_start":133,"line_end":133,"column_start":12,"column_end":29},"name":"handle_next_frame","qualname":"<ServerConnection<S, R, State>>::handle_next_frame","value":"fn handle_next_frame(&mut Self) -> HttpResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Fully handles the next incoming frame. Events are passed on to the internal `session`\n instance.\n","sig":null,"attributes":[{"value":"/ Fully handles the next incoming frame. Events are passed on to the internal `session`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":187438,"byte_end":187527,"line_start":130,"line_end":130,"column_start":5,"column_end":94}},{"value":"/ instance.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":187532,"byte_end":187545,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":187550,"byte_end":187559,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":188149,"byte_end":188163,"line_start":144,"line_end":144,"column_start":12,"column_end":26},"name":"start_response","qualname":"<ServerConnection<S, R, State>>::start_response","value":"fn start_response(&mut Self, Vec<Header>, StreamId, EndStream)\n-> HttpResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Starts a response on the stream with the given ID by sending the given headers.","sig":null,"attributes":[{"value":"/ Starts a response on the stream with the given ID by sending the given headers.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":187744,"byte_end":187827,"line_start":138,"line_end":138,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":187832,"byte_end":187835,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The body of the response is assumed to be provided by the `Stream` instance stored within","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":187840,"byte_end":187933,"line_start":140,"line_end":140,"column_start":5,"column_end":98}},{"value":"/ the connection's state. (The body does not have to be ready when this method is called, as","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":187938,"byte_end":188032,"line_start":141,"line_end":141,"column_start":5,"column_end":99}},{"value":"/ long as the `Stream` instance knows how to provide it to the connection later on.)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":188037,"byte_end":188123,"line_start":142,"line_end":142,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":188128,"byte_end":188137,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":188626,"byte_end":188640,"line_start":155,"line_end":155,"column_start":12,"column_end":26},"name":"send_next_data","qualname":"<ServerConnection<S, R, State>>::send_next_data","value":"fn send_next_data(&mut Self) -> HttpResult<SendStatus>","parent":null,"children":[],"decl_id":null,"docs":" Queues a new DATA frame onto the underlying `SendFrame`.","sig":null,"attributes":[{"value":"/ Queues a new DATA frame onto the underlying `SendFrame`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":188413,"byte_end":188473,"line_start":151,"line_end":151,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":188478,"byte_end":188481,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Currently, no prioritization of streams is taken into account and which stream's data is","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":188486,"byte_end":188578,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ queued cannot be relied on.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":188583,"byte_end":188614,"line_start":154,"line_end":154,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":742},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":616,"byte_end":624,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"name":"StreamId","qualname":"::http::StreamId","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" An alias for the type that represents the ID of an HTTP/2 stream\n","sig":null,"attributes":[{"value":"/ An alias for the type that represents the ID of an HTTP/2 stream","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":538,"byte_end":606,"line_start":18,"line_end":18,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":743},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":803,"byte_end":809,"line_start":22,"line_end":22,"column_start":10,"column_end":16},"name":"Header","qualname":"::http::Header","value":"(Vec<u8>, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" An alias for the type that represents HTTP/2 headers. For now we only alias\n the tuple of byte vectors instead of going with a full struct representation.\n","sig":null,"attributes":[{"value":"/ An alias for the type that represents HTTP/2 headers. For now we only alias","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":632,"byte_end":711,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ the tuple of byte vectors instead of going with a full struct representation.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":712,"byte_end":793,"line_start":21,"line_end":21,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":744},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1222,"byte_end":1236,"line_start":30,"line_end":30,"column_start":11,"column_end":25},"name":"ALPN_PROTOCOLS","qualname":"::http::ALPN_PROTOCOLS","value":"&'static [&'static [u8]]","parent":null,"children":[],"decl_id":null,"docs":" A set of protocol names that the library should use to indicate that HTTP/2\n is supported during protocol negotiation (NPN or ALPN).\n We include some of the drafts' protocol names, since there is basically no\n difference for all intents and purposes (and some servers out there still\n only officially advertise draft support).\n TODO: Eventually only use \"h2\".\n","sig":null,"attributes":[{"value":"/ A set of protocol names that the library should use to indicate that HTTP/2","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":833,"byte_end":912,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ is supported during protocol negotiation (NPN or ALPN).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":913,"byte_end":972,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/ We include some of the drafts' protocol names, since there is basically no","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":973,"byte_end":1051,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ difference for all intents and purposes (and some servers out there still","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1052,"byte_end":1129,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ only officially advertise draft support).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1130,"byte_end":1175,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/ TODO: Eventually only use \"h2\".","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1176,"byte_end":1211,"line_start":29,"line_end":29,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1477,"byte_end":1484,"line_start":41,"line_end":41,"column_start":5,"column_end":12},"name":"IoError","qualname":"::http::HttpError::IoError","value":"HttpError::IoError(io::Error)","parent":{"krate":0,"index":1353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1485,"byte_end":1494,"line_start":41,"line_end":41,"column_start":13,"column_end":22},"name":"0","qualname":"::http::HttpError::IoError::0","value":"std::io::Error","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1501,"byte_end":1513,"line_start":42,"line_end":42,"column_start":5,"column_end":17},"name":"InvalidFrame","qualname":"::http::HttpError::InvalidFrame","value":"HttpError::InvalidFrame","parent":{"krate":0,"index":1353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1519,"byte_end":1535,"line_start":43,"line_end":43,"column_start":5,"column_end":21},"name":"CompressionError","qualname":"::http::HttpError::CompressionError","value":"HttpError::CompressionError(DecoderError)","parent":{"krate":0,"index":1353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1536,"byte_end":1548,"line_start":43,"line_end":43,"column_start":22,"column_end":34},"name":"0","qualname":"::http::HttpError::CompressionError::0","value":"hpack::decoder::DecoderError","parent":{"krate":0,"index":1359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1555,"byte_end":1570,"line_start":44,"line_end":44,"column_start":5,"column_end":20},"name":"UnknownStreamId","qualname":"::http::HttpError::UnknownStreamId","value":"HttpError::UnknownStreamId","parent":{"krate":0,"index":1353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1576,"byte_end":1591,"line_start":45,"line_end":45,"column_start":5,"column_end":20},"name":"UnableToConnect","qualname":"::http::HttpError::UnableToConnect","value":"HttpError::UnableToConnect","parent":{"krate":0,"index":1353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1691,"byte_end":1708,"line_start":47,"line_end":47,"column_start":5,"column_end":22},"name":"MalformedResponse","qualname":"::http::HttpError::MalformedResponse","value":"HttpError::MalformedResponse","parent":{"krate":0,"index":1353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1714,"byte_end":1719,"line_start":48,"line_end":48,"column_start":5,"column_end":10},"name":"Other","qualname":"::http::HttpError::Other","value":"HttpError::Other(Box<Error + Send + Sync>)","parent":{"krate":0,"index":1353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1720,"byte_end":1744,"line_start":48,"line_end":48,"column_start":11,"column_end":35},"name":"0","qualname":"::http::HttpError::Other::0","value":"std::boxed::Box<(dyn std::error::Error + std::marker::Send + std::marker::Sync + 'static)>","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1461,"byte_end":1470,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"name":"HttpError","qualname":"::http::HttpError","value":"enum HttpError {\n    IoError(io::Error),\n    InvalidFrame,\n    CompressionError(DecoderError),\n    UnknownStreamId,\n    UnableToConnect,\n    MalformedResponse,\n    Other(Box<Error + Send + Sync>),\n}","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368}],"decl_id":null,"docs":" An enum representing errors that can arise when performing operations\n involving an HTTP/2 connection.\n","sig":null,"attributes":[{"value":"/ An enum representing errors that can arise when performing operations","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1325,"byte_end":1398,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ involving an HTTP/2 connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1399,"byte_end":1434,"line_start":38,"line_end":38,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1967,"byte_end":1971,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"from","qualname":"<HttpError as std::convert::From>::from","value":"fn from(io::Error) -> HttpError","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":2085,"byte_end":2088,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"fmt","qualname":"<HttpError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10016},"children":[],"decl_id":{"krate":2,"index":10017},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":2242,"byte_end":2253,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"description","qualname":"<HttpError as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2559},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":2890,"byte_end":2895,"line_start":78,"line_end":78,"column_start":8,"column_end":13},"name":"cause","qualname":"<HttpError as std::error::Error>::cause","value":"fn cause(&Self) -> Option<&Error>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2560},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":752},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4208,"byte_end":4218,"line_start":112,"line_end":112,"column_start":10,"column_end":20},"name":"HttpResult","qualname":"::http::HttpResult","value":"Result<T, HttpError>","parent":null,"children":[],"decl_id":null,"docs":" A convenience `Result` type that has the `HttpError` type as the error\n type and a generic Ok result type.\n","sig":null,"attributes":[{"value":"/ A convenience `Result` type that has the `HttpError` type as the error","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4085,"byte_end":4159,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"/ type and a generic Ok result type.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4160,"byte_end":4198,"line_start":111,"line_end":111,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4417,"byte_end":4421,"line_start":118,"line_end":118,"column_start":5,"column_end":9},"name":"Http","qualname":"::http::HttpScheme::Http","value":"HttpScheme::Http","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" The variant corresponding to `http://`\n","sig":null,"attributes":[{"value":"/ The variant corresponding to `http://`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4370,"byte_end":4412,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4475,"byte_end":4480,"line_start":120,"line_end":120,"column_start":5,"column_end":10},"name":"Https","qualname":"::http::HttpScheme::Https","value":"HttpScheme::Https","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" The variant corresponding to `https://`\n","sig":null,"attributes":[{"value":"/ The variant corresponding to `https://`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4427,"byte_end":4470,"line_start":119,"line_end":119,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4353,"byte_end":4363,"line_start":116,"line_end":116,"column_start":10,"column_end":20},"name":"HttpScheme","qualname":"::http::HttpScheme","value":"enum HttpScheme { Http, Https, }","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1376}],"decl_id":null,"docs":" An enum representing the two possible HTTP schemes.\n","sig":null,"attributes":[{"value":"/ An enum representing the two possible HTTP schemes.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4247,"byte_end":4302,"line_start":114,"line_end":114,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4583,"byte_end":4591,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<HttpScheme>::as_bytes","value":"fn as_bytes(&Self) -> &'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a byte string representing the scheme.\n","sig":null,"attributes":[{"value":"/ Returns a byte string representing the scheme.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4507,"byte_end":4557,"line_start":124,"line_end":124,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4562,"byte_end":4571,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5014,"byte_end":5022,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"Response","qualname":"::http::Response","value":"Response { stream_id, headers, body }","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389}],"decl_id":null,"docs":" A struct representing the full raw response received on an HTTP/2 connection.","sig":null,"attributes":[{"value":"/ A struct representing the full raw response received on an HTTP/2 connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4743,"byte_end":4824,"line_start":134,"line_end":134,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4825,"byte_end":4828,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The full body of the response is included, regardless how large it may be.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4829,"byte_end":4907,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ The headers contain both the meta-headers, as well as the actual headers.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4908,"byte_end":4985,"line_start":137,"line_end":137,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5160,"byte_end":5169,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"name":"stream_id","qualname":"::http::Response::stream_id","value":"u32","parent":{"krate":0,"index":1386},"children":[],"decl_id":null,"docs":" The ID of the stream to which the response is associated. HTTP/1.1 does\n not really have an equivalent to this.\n","sig":null,"attributes":[{"value":"/ The ID of the stream to which the response is associated. HTTP/1.1 does","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5029,"byte_end":5104,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"/ not really have an equivalent to this.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5109,"byte_end":5151,"line_start":141,"line_end":141,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5358,"byte_end":5365,"line_start":146,"line_end":146,"column_start":9,"column_end":16},"name":"headers","qualname":"::http::Response::headers","value":"std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>","parent":{"krate":0,"index":1386},"children":[],"decl_id":null,"docs":" Exposes *all* the raw response headers, including the meta-headers.\n (For now the only meta header allowed in HTTP/2 responses is the\n `:status`.)\n","sig":null,"attributes":[{"value":"/ Exposes *all* the raw response headers, including the meta-headers.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5185,"byte_end":5256,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ (For now the only meta header allowed in HTTP/2 responses is the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5261,"byte_end":5329,"line_start":144,"line_end":144,"column_start":5,"column_end":73}},{"value":"/ `:status`.)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5334,"byte_end":5349,"line_start":145,"line_end":145,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5465,"byte_end":5469,"line_start":148,"line_end":148,"column_start":9,"column_end":13},"name":"body","qualname":"::http::Response::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1386},"children":[],"decl_id":null,"docs":" The full body of the response as an uninterpreted sequence of bytes.\n","sig":null,"attributes":[{"value":"/ The full body of the response as an uninterpreted sequence of bytes.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5384,"byte_end":5456,"line_start":147,"line_end":147,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5585,"byte_end":5588,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"new","qualname":"<Response>::new","value":"fn new(StreamId, Vec<Header>, Vec<u8>) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Response` with all the components already provided.\n","sig":null,"attributes":[{"value":"/ Creates a new `Response` with all the components already provided.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5503,"byte_end":5573,"line_start":152,"line_end":152,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":6013,"byte_end":6024,"line_start":165,"line_end":165,"column_start":12,"column_end":23},"name":"status_code","qualname":"<Response>::status_code","value":"fn status_code(&Self) -> HttpResult<u16>","parent":null,"children":[],"decl_id":null,"docs":" Gets the response status code from the pseudo-header. If the response\n does not contain the response as the first pseuo-header, an error is\n returned as such a response is malformed.\n","sig":null,"attributes":[{"value":"/ Gets the response status code from the pseudo-header. If the response","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5801,"byte_end":5874,"line_start":162,"line_end":162,"column_start":5,"column_end":78}},{"value":"/ does not contain the response as the first pseuo-header, an error is","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5879,"byte_end":5951,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ returned as such a response is malformed.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5956,"byte_end":6001,"line_start":164,"line_end":164,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":7639,"byte_end":7646,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"Request","qualname":"::http::Request","value":"Request { stream_id, headers, body }","parent":null,"children":[{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395}],"decl_id":null,"docs":" A struct representing a full HTTP/2 request, along with the full body, as a\n sequence of bytes.\n","sig":null,"attributes":[{"value":"/ A struct representing a full HTTP/2 request, along with the full body, as a","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":7508,"byte_end":7587,"line_start":205,"line_end":205,"column_start":1,"column_end":80}},{"value":"/ sequence of bytes.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":7588,"byte_end":7610,"line_start":206,"line_end":206,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":7657,"byte_end":7666,"line_start":209,"line_end":209,"column_start":9,"column_end":18},"name":"stream_id","qualname":"::http::Request::stream_id","value":"u32","parent":{"krate":0,"index":1392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":7681,"byte_end":7688,"line_start":210,"line_end":210,"column_start":9,"column_end":16},"name":"headers","qualname":"::http::Request::headers","value":"std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>","parent":{"krate":0,"index":1392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":7711,"byte_end":7715,"line_start":211,"line_end":211,"column_start":9,"column_end":13},"name":"body","qualname":"::http::Request::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":760},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/mod.rs","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":835}],"decl_id":null,"docs":" The module contains implementations of HTTP/2 clients that could be\n directly used to access HTTP/2 servers, i.e. send requests and read\n responses.\n","sig":null,"attributes":[{"value":"/ The module contains implementations of HTTP/2 clients that could be","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/mod.rs","byte_start":191261,"byte_end":191332,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ directly used to access HTTP/2 servers, i.e. send requests and read","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/mod.rs","byte_start":191333,"byte_end":191404,"line_start":2,"line_end":2,"column_start":1,"column_end":72}},{"value":"/ responses.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/mod.rs","byte_start":191405,"byte_end":191419,"line_start":3,"line_end":3,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":817},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195591,"byte_end":195603,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"SimpleClient","qualname":"::client::simple::SimpleClient","value":"SimpleClient {  }","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821}],"decl_id":null,"docs":" A struct implementing a simple HTTP/2 client.","sig":null,"attributes":[{"value":"/ A struct implementing a simple HTTP/2 client.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":191904,"byte_end":191953,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":191954,"byte_end":191957,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This client works as an HTTP/1.1 client with a Keep-Alive connection and","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":191958,"byte_end":192034,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ pipelining might work.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192035,"byte_end":192061,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192062,"byte_end":192065,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Multiple requests can be queued up (and sent to the server) by calling","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192066,"byte_end":192140,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ `request` multiple times, before any `get_response`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192141,"byte_end":192197,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192198,"byte_end":192201,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Once a `get_response` is issued, the client blocks until it receives the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192202,"byte_end":192278,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ response for the particular request that was referenced in the `get_response`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192279,"byte_end":192360,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/ call.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192361,"byte_end":192370,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192371,"byte_end":192374,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Therefore, by doing `request` -> `get_response` we can use the HTTP/2","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192375,"byte_end":192448,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ connection as a `Keep-Alive` HTTP/1.1 connection and a pipelined flow by","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192449,"byte_end":192525,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ queuing up a sequence of requests and then \"joining\" over them by calling","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192526,"byte_end":192603,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ `get_response` for each of them.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192604,"byte_end":192640,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192641,"byte_end":192644,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The responses that are returned by the client are very raw representations","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192645,"byte_end":192723,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ of the response.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192724,"byte_end":192744,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192745,"byte_end":192748,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192749,"byte_end":192763,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192764,"byte_end":192767,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Issue a simple GET request using the helper `get` method. Premade connection","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192768,"byte_end":192848,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ passed to the client.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192849,"byte_end":192874,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192875,"byte_end":192878,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192879,"byte_end":192892,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192893,"byte_end":192921,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ use solicit::http::HttpScheme;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192922,"byte_end":192956,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/ use solicit::http::connection::HttpConnection;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":192957,"byte_end":193007,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/ use solicit::http::client::write_preface;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193008,"byte_end":193053,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/ use solicit::client::SimpleClient;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193054,"byte_end":193092,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ use std::str;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193093,"byte_end":193110,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193111,"byte_end":193114,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Prepare a stream manually... We must write the preface ourselves in this case.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193115,"byte_end":193200,"line_start":42,"line_end":42,"column_start":1,"column_end":86}},{"value":"/ // This is a more advanced way to use the client and the `HttpConnect` implementations","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193201,"byte_end":193291,"line_start":43,"line_end":43,"column_start":1,"column_end":91}},{"value":"/ // should usually be preferred for their convenience.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193292,"byte_end":193349,"line_start":44,"line_end":44,"column_start":1,"column_end":58}},{"value":"/ let mut stream = TcpStream::connect(&(\"http2bin.org\", 80)).unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193350,"byte_end":193422,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ write_preface(&mut stream);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193423,"byte_end":193454,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ // Connect to an HTTP/2 aware server","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193455,"byte_end":193495,"line_start":47,"line_end":47,"column_start":1,"column_end":41}},{"value":"/ let conn = HttpConnection::<TcpStream, TcpStream>::with_stream(","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193496,"byte_end":193563,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/                                stream,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193564,"byte_end":193606,"line_start":49,"line_end":49,"column_start":1,"column_end":43}},{"value":"/                                HttpScheme::Http);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193607,"byte_end":193660,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/ let mut client = SimpleClient::with_connection(conn, \"http2bin.org\".into()).unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193661,"byte_end":193750,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ let response = client.get(b\"/\", &[]).unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193751,"byte_end":193801,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(response.stream_id, 1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193802,"byte_end":193840,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(response.status_code().unwrap(), 200);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193841,"byte_end":193894,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/ // Dump the headers and the response body to stdout.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193895,"byte_end":193951,"line_start":55,"line_end":55,"column_start":1,"column_end":57}},{"value":"/ // They are returned as raw bytes for the user to do as they please.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":193952,"byte_end":194024,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ // (Note: in general directly decoding assuming a utf8 encoding might not","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194025,"byte_end":194102,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ // always work -- this is meant as a simple example that shows that the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194103,"byte_end":194178,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ // response is well formed.)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194179,"byte_end":194211,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ for header in response.headers.iter() {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194212,"byte_end":194255,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/     println!(\"{}: {}\",","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194256,"byte_end":194282,"line_start":61,"line_end":61,"column_start":1,"column_end":27}},{"value":"/         str::from_utf8(&header.0).unwrap(),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194283,"byte_end":194330,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"/         str::from_utf8(&header.1).unwrap());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194331,"byte_end":194379,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194380,"byte_end":194385,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ println!(\"{}\", str::from_utf8(&response.body).unwrap());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194386,"byte_end":194446,"line_start":65,"line_end":65,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194447,"byte_end":194454,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194455,"byte_end":194458,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Issue a simple GET request using the helper `get` method. Pass a connector","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194459,"byte_end":194537,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ to establish a new connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194538,"byte_end":194572,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194573,"byte_end":194576,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194577,"byte_end":194590,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ use solicit::http::client::CleartextConnector;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194591,"byte_end":194641,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/ use solicit::client::SimpleClient;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194642,"byte_end":194680,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/ use std::str;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194681,"byte_end":194698,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194699,"byte_end":194702,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ // Connect to an HTTP/2 aware server","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194703,"byte_end":194743,"line_start":76,"line_end":76,"column_start":1,"column_end":41}},{"value":"/ let connector = CleartextConnector::new(\"http2bin.org\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194744,"byte_end":194804,"line_start":77,"line_end":77,"column_start":1,"column_end":61}},{"value":"/ let mut client = SimpleClient::with_connector(connector).unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194805,"byte_end":194875,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ let response = client.get(b\"/\", &[]).unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194876,"byte_end":194926,"line_start":79,"line_end":79,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(response.stream_id, 1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194927,"byte_end":194965,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(response.status_code().unwrap(), 200);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":194966,"byte_end":195019,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/ // Dump the headers and the response body to stdout.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195020,"byte_end":195076,"line_start":82,"line_end":82,"column_start":1,"column_end":57}},{"value":"/ // They are returned as raw bytes for the user to do as they please.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195077,"byte_end":195149,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/ // (Note: in general directly decoding assuming a utf8 encoding might not","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195150,"byte_end":195227,"line_start":84,"line_end":84,"column_start":1,"column_end":78}},{"value":"/ // always work -- this is meant as a simple example that shows that the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195228,"byte_end":195303,"line_start":85,"line_end":85,"column_start":1,"column_end":76}},{"value":"/ // response is well formed.)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195304,"byte_end":195336,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/ for header in response.headers.iter() {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195337,"byte_end":195380,"line_start":87,"line_end":87,"column_start":1,"column_end":44}},{"value":"/     println!(\"{}: {}\",","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195381,"byte_end":195407,"line_start":88,"line_end":88,"column_start":1,"column_end":27}},{"value":"/         str::from_utf8(&header.0).unwrap(),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195408,"byte_end":195455,"line_start":89,"line_end":89,"column_start":1,"column_end":48}},{"value":"/         str::from_utf8(&header.1).unwrap());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195456,"byte_end":195504,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195505,"byte_end":195510,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ println!(\"{}\", str::from_utf8(&response.body).unwrap());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195511,"byte_end":195571,"line_start":92,"line_end":92,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195572,"byte_end":195579,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196259,"byte_end":196274,"line_start":110,"line_end":110,"column_start":12,"column_end":27},"name":"with_connection","qualname":"<SimpleClient<S>>::with_connection","value":"fn with_connection(HttpConnection<S, S>, String)\n-> HttpResult<SimpleClient<S>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `SimpleClient` instance that will use the given `HttpConnection`\n to communicate to the server.","sig":null,"attributes":[{"value":"/ Create a new `SimpleClient` instance that will use the given `HttpConnection`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195996,"byte_end":196077,"line_start":105,"line_end":105,"column_start":5,"column_end":86}},{"value":"/ to communicate to the server.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196082,"byte_end":196115,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196120,"byte_end":196123,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ It assumes that the connection stream is initialized and will *not* automatically write the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196128,"byte_end":196223,"line_start":108,"line_end":108,"column_start":5,"column_end":100}},{"value":"/ client preface.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196228,"byte_end":196247,"line_start":109,"line_end":109,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196927,"byte_end":196941,"line_start":130,"line_end":130,"column_start":12,"column_end":26},"name":"with_connector","qualname":"<SimpleClient<S>>::with_connector","value":"fn with_connector<C>(C) -> HttpResult<SimpleClient<S>> where\nC: HttpConnect<Stream = S>","parent":null,"children":[],"decl_id":null,"docs":" A convenience constructor that first tries to establish an HTTP/2\n connection by using the given connector instance (an implementation of\n the `HttpConnect` trait).","sig":null,"attributes":[{"value":"/ A convenience constructor that first tries to establish an HTTP/2","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196636,"byte_end":196705,"line_start":123,"line_end":123,"column_start":5,"column_end":74}},{"value":"/ connection by using the given connector instance (an implementation of","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196710,"byte_end":196784,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ the `HttpConnect` trait).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196789,"byte_end":196818,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196823,"byte_end":196826,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196831,"byte_end":196843,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196848,"byte_end":196851,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Currently, it panics if the connector returns an error.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":196856,"byte_end":196915,"line_start":129,"line_end":129,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":198059,"byte_end":198066,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"request","qualname":"<SimpleClient<S>>::request","value":"fn request(&mut Self, &[u8], &[u8], &[Header], Option<Vec<u8>>)\n-> HttpResult<StreamId>","parent":null,"children":[],"decl_id":null,"docs":" Send a request to the server. Blocks until the entire request has been\n sent.","sig":null,"attributes":[{"value":"/ Send a request to the server. Blocks until the entire request has been","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197413,"byte_end":197487,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ sent.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197492,"byte_end":197501,"line_start":145,"line_end":145,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197506,"byte_end":197509,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The request is described by the method, the path on which it should be","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197514,"byte_end":197588,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ invoked and the \"real\" headers that should be included. Clients should","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197593,"byte_end":197667,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ never put pseudo-headers in the `headers` parameter, as those are","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197672,"byte_end":197741,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ automatically included based on metadata.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197746,"byte_end":197791,"line_start":150,"line_end":150,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197796,"byte_end":197799,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197804,"byte_end":197817,"line_start":152,"line_end":152,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197822,"byte_end":197825,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ If the full request is successfully sent, returns the ID of the stream","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197830,"byte_end":197904,"line_start":154,"line_end":154,"column_start":5,"column_end":79}},{"value":"/ on which the request was sent. Clients can use this ID to refer to the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197909,"byte_end":197983,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/ response.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":197988,"byte_end":198001,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":198006,"byte_end":198009,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Any IO errors are propagated.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":198014,"byte_end":198047,"line_start":158,"line_end":158,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":199490,"byte_end":199502,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"get_response","qualname":"<SimpleClient<S>>::get_response","value":"fn get_response(&mut Self, StreamId) -> HttpResult<Response>","parent":null,"children":[],"decl_id":null,"docs":" Gets the response for the stream with the given ID. If a valid stream ID\n is given, it blocks until a response is received.","sig":null,"attributes":[{"value":"/ Gets the response for the stream with the given ID. If a valid stream ID","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":199099,"byte_end":199175,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ is given, it blocks until a response is received.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":199180,"byte_end":199233,"line_start":182,"line_end":182,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":199238,"byte_end":199241,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":199246,"byte_end":199259,"line_start":184,"line_end":184,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":199264,"byte_end":199267,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ A `Response` if the response can be successfully read.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":199272,"byte_end":199330,"line_start":186,"line_end":186,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":199335,"byte_end":199338,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Any underlying IO errors are propagated. Errors in the HTTP/2 protocol","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":199343,"byte_end":199417,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ also stop processing and are returned to the client.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":199422,"byte_end":199478,"line_start":189,"line_end":189,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":200345,"byte_end":200348,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"get","qualname":"<SimpleClient<S>>::get","value":"fn get(&mut Self, &[u8], &[Header]) -> HttpResult<Response>","parent":null,"children":[],"decl_id":null,"docs":" Performs a GET request on the given path. This is a shortcut method for\n calling `request` followed by `get_response` for the returned stream ID.\n","sig":null,"attributes":[{"value":"/ Performs a GET request on the given path. This is a shortcut method for","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":200177,"byte_end":200252,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ calling `request` followed by `get_response` for the returned stream ID.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":200257,"byte_end":200333,"line_start":210,"line_end":210,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":200622,"byte_end":200626,"line_start":218,"line_end":218,"column_start":12,"column_end":16},"name":"post","qualname":"<SimpleClient<S>>::post","value":"fn post(&mut Self, &[u8], &[Header], Vec<u8>) -> HttpResult<Response>","parent":null,"children":[],"decl_id":null,"docs":" Performs a POST request on the given path.\n","sig":null,"attributes":[{"value":"/ Performs a POST request on the given path.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":200564,"byte_end":200610,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":995},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227763,"byte_end":227769,"line_start":569,"line_end":569,"column_start":12,"column_end":18},"name":"Client","qualname":"::client::async::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":996}],"decl_id":null,"docs":" A struct representing an HTTP/2 client that receives responses to its\n requests asynchronously. Additionally, this client can be cloned and all\n clones can issue (concurrently) requests to the server, using the same\n underlying HTTP/2 connection.","sig":null,"attributes":[{"value":"/ A struct representing an HTTP/2 client that receives responses to its","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226316,"byte_end":226389,"line_start":533,"line_end":533,"column_start":1,"column_end":74}},{"value":"/ requests asynchronously. Additionally, this client can be cloned and all","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226390,"byte_end":226466,"line_start":534,"line_end":534,"column_start":1,"column_end":77}},{"value":"/ clones can issue (concurrently) requests to the server, using the same","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226467,"byte_end":226541,"line_start":535,"line_end":535,"column_start":1,"column_end":75}},{"value":"/ underlying HTTP/2 connection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226542,"byte_end":226575,"line_start":536,"line_end":536,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226576,"byte_end":226579,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226580,"byte_end":226593,"line_start":538,"line_end":538,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226594,"byte_end":226597,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226598,"byte_end":226611,"line_start":540,"line_end":540,"column_start":1,"column_end":14}},{"value":"/ use solicit::client::Client;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226612,"byte_end":226644,"line_start":541,"line_end":541,"column_start":1,"column_end":33}},{"value":"/ use solicit::http::client::CleartextConnector;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226645,"byte_end":226695,"line_start":542,"line_end":542,"column_start":1,"column_end":51}},{"value":"/ use std::thread;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226696,"byte_end":226716,"line_start":543,"line_end":543,"column_start":1,"column_end":21}},{"value":"/ use std::str;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226717,"byte_end":226734,"line_start":544,"line_end":544,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226735,"byte_end":226738,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ // Connect to a server that supports HTTP/2","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226739,"byte_end":226786,"line_start":546,"line_end":546,"column_start":1,"column_end":48}},{"value":"/ let connector = CleartextConnector::new(\"http2bin.org\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226787,"byte_end":226847,"line_start":547,"line_end":547,"column_start":1,"column_end":61}},{"value":"/ let client = Client::with_connector(connector).unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226848,"byte_end":226908,"line_start":548,"line_end":548,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226909,"byte_end":226912,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ // Issue 5 requests from 5 different threads concurrently and wait for all","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226913,"byte_end":226991,"line_start":550,"line_end":550,"column_start":1,"column_end":79}},{"value":"/ // threads to receive their response.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":226992,"byte_end":227033,"line_start":551,"line_end":551,"column_start":1,"column_end":42}},{"value":"/ let threads: Vec<_> = (0..5).map(|i| {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227034,"byte_end":227076,"line_start":552,"line_end":552,"column_start":1,"column_end":43}},{"value":"/     let this = client.clone();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227077,"byte_end":227111,"line_start":553,"line_end":553,"column_start":1,"column_end":35}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227112,"byte_end":227143,"line_start":554,"line_end":554,"column_start":1,"column_end":32}},{"value":"/         let resp = this.get(b\"/\", &[]).unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227144,"byte_end":227196,"line_start":555,"line_end":555,"column_start":1,"column_end":53}},{"value":"/         let response = resp.recv().unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227197,"byte_end":227245,"line_start":556,"line_end":556,"column_start":1,"column_end":49}},{"value":"/         println!(\"Thread {} got response ... {}\", i, response.status_code().ok().unwrap());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227246,"byte_end":227341,"line_start":557,"line_end":557,"column_start":1,"column_end":96}},{"value":"/         println!(\"The response contains the following headers:\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227342,"byte_end":227411,"line_start":558,"line_end":558,"column_start":1,"column_end":70}},{"value":"/         for header in response.headers.iter() {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227412,"byte_end":227463,"line_start":559,"line_end":559,"column_start":1,"column_end":52}},{"value":"/             println!(\"  {}: {}\",","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227464,"byte_end":227500,"line_start":560,"line_end":560,"column_start":1,"column_end":37}},{"value":"/                   str::from_utf8(&header.0).unwrap(),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227501,"byte_end":227558,"line_start":561,"line_end":561,"column_start":1,"column_end":58}},{"value":"/                   str::from_utf8(&header.1).unwrap());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227559,"byte_end":227617,"line_start":562,"line_end":562,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227618,"byte_end":227631,"line_start":563,"line_end":563,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227632,"byte_end":227642,"line_start":564,"line_end":564,"column_start":1,"column_end":11}},{"value":"/ }).collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227643,"byte_end":227660,"line_start":565,"line_end":565,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227661,"byte_end":227664,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ let _: Vec<_> = threads.into_iter().map(|thread| thread.join()).collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227665,"byte_end":227743,"line_start":567,"line_end":567,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227744,"byte_end":227751,"line_start":568,"line_end":568,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227985,"byte_end":227990,"line_start":576,"line_end":576,"column_start":8,"column_end":13},"name":"clone","qualname":"<Client as std::clone::Clone>::clone","value":"fn clone(&Self) -> Client","parent":{"krate":2,"index":2790},"children":[],"decl_id":{"krate":2,"index":2791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228173,"byte_end":228177,"line_start":585,"line_end":585,"column_start":8,"column_end":12},"name":"drop","qualname":"<Client as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":229203,"byte_end":229217,"line_start":609,"line_end":609,"column_start":12,"column_end":26},"name":"with_connector","qualname":"<Client>::with_connector","value":"fn with_connector<C, S>(C) -> Option<Client> where C: HttpConnect<Stream = S>,\nS: TransportStream + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a brand new HTTP/2 client. This means that a new HTTP/2\n connection will be established behind the scenes. A thread is spawned\n to handle the connection in the background, so that the thread that\n creates the client can use it asynchronously.","sig":null,"attributes":[{"value":"/ Creates a brand new HTTP/2 client. This means that a new HTTP/2","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228274,"byte_end":228341,"line_start":591,"line_end":591,"column_start":5,"column_end":72}},{"value":"/ connection will be established behind the scenes. A thread is spawned","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228346,"byte_end":228419,"line_start":592,"line_end":592,"column_start":5,"column_end":78}},{"value":"/ to handle the connection in the background, so that the thread that","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228424,"byte_end":228495,"line_start":593,"line_end":593,"column_start":5,"column_end":76}},{"value":"/ creates the client can use it asynchronously.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228500,"byte_end":228549,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228554,"byte_end":228557,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228562,"byte_end":228575,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228580,"byte_end":228583,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ A `Client` instance that allows access to the underlying HTTP/2","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228588,"byte_end":228655,"line_start":598,"line_end":598,"column_start":5,"column_end":72}},{"value":"/ connection on the application level. Only full requests and responses","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228660,"byte_end":228733,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/ are exposed to users.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228738,"byte_end":228763,"line_start":600,"line_end":600,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228768,"byte_end":228771,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ The returned `Client` can be cloned and all clones will use the same","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228776,"byte_end":228848,"line_start":602,"line_end":602,"column_start":5,"column_end":77}},{"value":"/ underlying HTTP/2 connection. Once all cloned instances (as well as the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228853,"byte_end":228928,"line_start":603,"line_end":603,"column_start":5,"column_end":80}},{"value":"/ original one) are dropped, the thread that was spawned will also exit","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228933,"byte_end":229006,"line_start":604,"line_end":604,"column_start":5,"column_end":78}},{"value":"/ gracefully. Any error on the underlying HTTP/2 connection also causes","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":229011,"byte_end":229084,"line_start":605,"line_end":605,"column_start":5,"column_end":78}},{"value":"/ the thread to exit.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":229089,"byte_end":229112,"line_start":606,"line_end":606,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":229117,"byte_end":229120,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ If the HTTP/2 connection cannot be initialized returns `None`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":229125,"byte_end":229191,"line_start":608,"line_end":608,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":232509,"byte_end":232516,"line_start":681,"line_end":681,"column_start":12,"column_end":19},"name":"request","qualname":"<Client>::request","value":"fn request(&Self, &[u8], &[u8], &[Header], Option<Vec<u8>>)\n-> Option<Receiver<Response>>","parent":null,"children":[],"decl_id":null,"docs":" Issues a new request to the server.","sig":null,"attributes":[{"value":"/ Issues a new request to the server.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":231521,"byte_end":231560,"line_start":661,"line_end":661,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":231565,"byte_end":231568,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ The request's method, path, and extra headers are provided as parameters.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":231573,"byte_end":231650,"line_start":663,"line_end":663,"column_start":5,"column_end":82}},{"value":"/ The headers should *never* include any meta-headers (such as `:method`).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":231655,"byte_end":231731,"line_start":664,"line_end":664,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":231736,"byte_end":231739,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":231744,"byte_end":231757,"line_start":666,"line_end":666,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":231762,"byte_end":231765,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ The method itself returns immediately upon queuing the request. It does","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":231770,"byte_end":231845,"line_start":668,"line_end":668,"column_start":5,"column_end":80}},{"value":"/ not wait for the request to be transmitted nor for the response to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":231850,"byte_end":231920,"line_start":669,"line_end":669,"column_start":5,"column_end":75}},{"value":"/ arrive. Once the caller is interested in the final response, they can","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":231925,"byte_end":231998,"line_start":670,"line_end":670,"column_start":5,"column_end":78}},{"value":"/ block on the returned `Receiver` end of a channel which will receive","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":232003,"byte_end":232075,"line_start":671,"line_end":671,"column_start":5,"column_end":77}},{"value":"/ the response once generated.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":232080,"byte_end":232112,"line_start":672,"line_end":672,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":232117,"byte_end":232120,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ The `Response` instance that the channel receives will contain the full","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":232125,"byte_end":232200,"line_start":674,"line_end":674,"column_start":5,"column_end":80}},{"value":"/ response body and is available only once the full response body has","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":232205,"byte_end":232276,"line_start":675,"line_end":675,"column_start":5,"column_end":76}},{"value":"/ been received.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":232281,"byte_end":232299,"line_start":676,"line_end":676,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":232304,"byte_end":232307,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ If the method is unable to queue the request, it must mean that the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":232312,"byte_end":232383,"line_start":678,"line_end":678,"column_start":5,"column_end":76}},{"value":"/ underlying HTTP/2 connection to which this client is associated has","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":232388,"byte_end":232459,"line_start":679,"line_end":679,"column_start":5,"column_end":76}},{"value":"/ failed and it returns `None`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":232464,"byte_end":232497,"line_start":680,"line_end":680,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":233464,"byte_end":233467,"line_start":706,"line_end":706,"column_start":12,"column_end":15},"name":"get","qualname":"<Client>::get","value":"fn get(&Self, &[u8], &[Header]) -> Option<Receiver<Response>>","parent":null,"children":[],"decl_id":null,"docs":" Issues a GET request to the server.","sig":null,"attributes":[{"value":"/ Issues a GET request to the server.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":233309,"byte_end":233348,"line_start":702,"line_end":702,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":233353,"byte_end":233356,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ A convenience wrapper around the `request` method that sets the correct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":233361,"byte_end":233436,"line_start":704,"line_end":704,"column_start":5,"column_end":80}},{"value":"/ method.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":233441,"byte_end":233452,"line_start":705,"line_end":705,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":233756,"byte_end":233760,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"post","qualname":"<Client>::post","value":"fn post(&Self, &[u8], &[Header], Vec<u8>) -> Option<Receiver<Response>>","parent":null,"children":[],"decl_id":null,"docs":" Issues a POST request to the server.","sig":null,"attributes":[{"value":"/ Issues a POST request to the server.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":233601,"byte_end":233641,"line_start":710,"line_end":710,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":233646,"byte_end":233649,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ Returns the receiving end of a channel where the `Response` will eventually be pushed.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":233654,"byte_end":233744,"line_start":712,"line_end":712,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1062},{"krate":0,"index":1067}],"decl_id":null,"docs":" The module contains a simple HTTP/2 server implementation.\n","sig":null,"attributes":[{"value":"/ The module contains a simple HTTP/2 server implementation.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":233926,"byte_end":233988,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234330,"byte_end":234343,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"ServerRequest","qualname":"::server::ServerRequest","value":"ServerRequest { stream_id, headers, body }","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"decl_id":null,"docs":" The struct represents a fully received request.\n","sig":null,"attributes":[{"value":"/ The struct represents a fully received request.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234267,"byte_end":234318,"line_start":9,"line_end":9,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234358,"byte_end":234367,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"name":"stream_id","qualname":"::server::ServerRequest::stream_id","value":"u32","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234387,"byte_end":234394,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"headers","qualname":"::server::ServerRequest::headers","value":"&'a [(std::vec::Vec<u8>, std::vec::Vec<u8>)]","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234418,"byte_end":234422,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"body","qualname":"::server::ServerRequest::body","value":"&'a [u8]","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236479,"byte_end":236491,"line_start":72,"line_end":72,"column_start":12,"column_end":24},"name":"SimpleServer","qualname":"::server::SimpleServer","value":"SimpleServer {  }","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"decl_id":null,"docs":" The struct implements a simple HTTP/2 server that allows users to register a request handler (a\n callback taking a `ServerRequest` and returning a `Response`) which is run on all received\n requests.","sig":null,"attributes":[{"value":"/ The struct implements a simple HTTP/2 server that allows users to register a request handler (a","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234437,"byte_end":234536,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ callback taking a `ServerRequest` and returning a `Response`) which is run on all received","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234537,"byte_end":234631,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ requests.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234632,"byte_end":234645,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234646,"byte_end":234649,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The `handle_next` method needs to be called regularly in order to have the server process","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234650,"byte_end":234743,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/ received frames, as well as send out the responses.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234744,"byte_end":234799,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234800,"byte_end":234803,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This is an exceedingly simple implementation of an HTTP/2 server and is mostly an example of","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234804,"byte_end":234900,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ how the `solicit::http` API can be used to make one.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234901,"byte_end":234957,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234958,"byte_end":234961,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234962,"byte_end":234976,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234977,"byte_end":234980,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234981,"byte_end":234994,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ extern crate solicit;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":234995,"byte_end":235020,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/ use std::str;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235021,"byte_end":235038,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ use std::net::{TcpListener, TcpStream};","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235039,"byte_end":235082,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ use std::thread;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235083,"byte_end":235103,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235104,"byte_end":235107,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ use solicit::server::SimpleServer;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235108,"byte_end":235146,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235147,"byte_end":235150,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use solicit::http::Response;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235151,"byte_end":235183,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235184,"byte_end":235187,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235188,"byte_end":235203,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/     fn handle_client(stream: TcpStream) {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235204,"byte_end":235249,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/         let mut server = SimpleServer::new(stream, |req| {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235250,"byte_end":235312,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/             println!(\"Received request:\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235313,"byte_end":235359,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/             for header in req.headers.iter() {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235360,"byte_end":235410,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/                 println!(\"  {}: {}\",","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235411,"byte_end":235451,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/                 str::from_utf8(&header.0).unwrap(),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235452,"byte_end":235507,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/                 str::from_utf8(&header.1).unwrap());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235508,"byte_end":235564,"line_start":45,"line_end":45,"column_start":1,"column_end":57}},{"value":"/             }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235565,"byte_end":235582,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/             println!(\"Body:\\n{}\", str::from_utf8(&req.body).unwrap());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235583,"byte_end":235657,"line_start":47,"line_end":47,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235658,"byte_end":235661,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/             // Return a dummy response for every request","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235662,"byte_end":235722,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"/             Response {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235723,"byte_end":235749,"line_start":50,"line_end":50,"column_start":1,"column_end":27}},{"value":"/                 headers: vec![","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235750,"byte_end":235784,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/                     (b\":status\".to_vec(), b\"200\".to_vec()),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235785,"byte_end":235848,"line_start":52,"line_end":52,"column_start":1,"column_end":64}},{"value":"/                     (b\"x-solicit\".to_vec(), b\"Hello, World!\".to_vec()),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235849,"byte_end":235924,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/                 ],","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235925,"byte_end":235947,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/                 body: vec![65],","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235948,"byte_end":235983,"line_start":55,"line_end":55,"column_start":1,"column_end":36}},{"value":"/                 stream_id: req.stream_id,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":235984,"byte_end":236029,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/            }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236030,"byte_end":236046,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/         }).unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236047,"byte_end":236071,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/         while let Ok(_) = server.handle_next() {}","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236072,"byte_end":236125,"line_start":59,"line_end":59,"column_start":1,"column_end":54}},{"value":"/         println!(\"Server done (client disconnected)\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236126,"byte_end":236184,"line_start":60,"line_end":60,"column_start":1,"column_end":59}},{"value":"/     }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236185,"byte_end":236194,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236195,"byte_end":236198,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236199,"byte_end":236267,"line_start":63,"line_end":63,"column_start":1,"column_end":69}},{"value":"/     for stream in listener.incoming() {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236268,"byte_end":236311,"line_start":64,"line_end":64,"column_start":1,"column_end":44}},{"value":"/         let stream = stream.unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236312,"byte_end":236353,"line_start":65,"line_end":65,"column_start":1,"column_end":42}},{"value":"/         thread::spawn(move || {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236354,"byte_end":236389,"line_start":66,"line_end":66,"column_start":1,"column_end":36}},{"value":"/             handle_client(stream)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236390,"byte_end":236427,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/         });","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236428,"byte_end":236443,"line_start":68,"line_end":68,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236444,"byte_end":236453,"line_start":69,"line_end":69,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236454,"byte_end":236459,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236460,"byte_end":236467,"line_start":71,"line_end":71,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236931,"byte_end":236934,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<SimpleServer<TS, H>>::new","value":"fn new(TS, H) -> HttpResult<SimpleServer<TS, H>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SimpleServer` that will use the given `TransportStream` to communicate to\n the client. Assumes that the stream is fully uninitialized -- no preface sent or read yet.\n","sig":null,"attributes":[{"value":"/ Creates a new `SimpleServer` that will use the given `TransportStream` to communicate to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236728,"byte_end":236820,"line_start":79,"line_end":79,"column_start":5,"column_end":97}},{"value":"/ the client. Assumes that the stream is fully uninitialized -- no preface sent or read yet.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236825,"byte_end":236919,"line_start":80,"line_end":80,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":238030,"byte_end":238041,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"handle_next","qualname":"<SimpleServer<TS, H>>::handle_next","value":"fn handle_next(&mut Self) -> HttpResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Handles the next incoming frame, blocking to receive it if nothing is available on the\n underlying stream.","sig":null,"attributes":[{"value":"/ Handles the next incoming frame, blocking to receive it if nothing is available on the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":237707,"byte_end":237797,"line_start":102,"line_end":102,"column_start":5,"column_end":95}},{"value":"/ underlying stream.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":237802,"byte_end":237824,"line_start":103,"line_end":103,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":237829,"byte_end":237832,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Handling the frame can trigger the handler callback. Any responses returned by the handler","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":237837,"byte_end":237931,"line_start":105,"line_end":105,"column_start":5,"column_end":99}},{"value":"/ are immediately flushed out to the client (blocking the call until it's done).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":237936,"byte_end":238018,"line_start":106,"line_end":106,"column_start":5,"column_end":87}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28132,"byte_end":28140,"line_start":27,"line_end":27,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28962,"byte_end":28971,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":31294,"byte_end":31303,"line_start":124,"line_end":124,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44358,"byte_end":44369,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45111,"byte_end":45127,"line_start":52,"line_end":52,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":48210,"byte_end":48222,"line_start":139,"line_end":139,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":50393,"byte_end":50405,"line_start":204,"line_end":204,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65599,"byte_end":65610,"line_start":29,"line_end":29,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68820,"byte_end":68832,"line_start":115,"line_end":115,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":70140,"byte_end":70153,"line_start":152,"line_end":152,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72181,"byte_end":72194,"line_start":217,"line_end":217,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13761,"byte_end":13769,"line_start":170,"line_end":170,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":16060,"byte_end":16068,"line_start":242,"line_end":242,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":16299,"byte_end":16307,"line_start":250,"line_end":250,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":89573,"byte_end":89582,"line_start":69,"line_end":69,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91925,"byte_end":91934,"line_start":58,"line_end":58,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95304,"byte_end":95305,"line_start":137,"line_end":137,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":96133,"byte_end":96135,"line_start":161,"line_end":161,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98166,"byte_end":98175,"line_start":209,"line_end":209,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":99455,"byte_end":99469,"line_start":244,"line_end":244,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135570,"byte_end":135580,"line_start":40,"line_end":40,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138321,"byte_end":138340,"line_start":99,"line_end":99,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138585,"byte_end":138604,"line_start":108,"line_end":108,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140123,"byte_end":140138,"line_start":160,"line_end":160,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145172,"byte_end":145185,"line_start":276,"line_end":276,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145780,"byte_end":145793,"line_start":297,"line_end":297,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":154498,"byte_end":154515,"line_start":38,"line_end":38,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":154977,"byte_end":154994,"line_start":49,"line_end":49,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161762,"byte_end":161771,"line_start":62,"line_end":62,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163559,"byte_end":163577,"line_start":102,"line_end":102,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164323,"byte_end":164344,"line_start":121,"line_end":121,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164536,"byte_end":164557,"line_start":127,"line_end":127,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164857,"byte_end":164878,"line_start":139,"line_end":139,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":165039,"byte_end":165060,"line_start":144,"line_end":144,"column_start":27,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":165090,"byte_end":165108,"line_start":146,"line_end":146,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166896,"byte_end":166912,"line_start":186,"line_end":186,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170923,"byte_end":170936,"line_start":284,"line_end":284,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":171224,"byte_end":171237,"line_start":294,"line_end":294,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":183660,"byte_end":183673,"line_start":30,"line_end":30,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":183892,"byte_end":183905,"line_start":39,"line_end":39,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":185989,"byte_end":186005,"line_start":93,"line_end":93,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1948,"byte_end":1957,"line_start":53,"line_end":53,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":2066,"byte_end":2075,"line_start":59,"line_end":59,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":2223,"byte_end":2232,"line_start":65,"line_end":65,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4490,"byte_end":4500,"line_start":123,"line_end":123,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5488,"byte_end":5496,"line_start":151,"line_end":151,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195949,"byte_end":195961,"line_start":104,"line_end":104,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":204701,"byte_end":204719,"line_start":55,"line_end":55,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":206677,"byte_end":206701,"line_start":98,"line_end":98,"column_start":20,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":208392,"byte_end":208412,"line_start":131,"line_end":131,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":210201,"byte_end":210227,"line_start":170,"line_end":170,"column_start":23,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":210859,"byte_end":210875,"line_start":189,"line_end":189,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":215274,"byte_end":215287,"line_start":276,"line_end":276,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227969,"byte_end":227975,"line_start":575,"line_end":575,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228157,"byte_end":228163,"line_start":584,"line_end":584,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228261,"byte_end":228267,"line_start":590,"line_end":590,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236631,"byte_end":236643,"line_start":77,"line_end":77,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","byte_start":164,"byte_end":168,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":423,"byte_end":428,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":21}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8526,"byte_end":8530,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":29}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8540,"byte_end":8547,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":69}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":8557,"byte_end":8565,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":114}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":438,"byte_end":447,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":213}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":457,"byte_end":467,"line_start":11,"line_end":11,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":237}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":477,"byte_end":484,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":369}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":494,"byte_end":502,"line_start":13,"line_end":13,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":459}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":513,"byte_end":519,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":506}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":529,"byte_end":535,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":657}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","byte_start":178,"byte_end":184,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":760}},{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/lib.rs","byte_start":194,"byte_end":200,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1011}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28132,"byte_end":28140,"line_start":27,"line_end":27,"column_start":15,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1087},"to":{"krate":0,"index":191}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":28962,"byte_end":28971,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/data.rs","byte_start":31294,"byte_end":31303,"line_start":124,"line_end":124,"column_start":16,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1101},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":44358,"byte_end":44369,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1115},"to":{"krate":0,"index":191}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":45111,"byte_end":45127,"line_start":52,"line_end":52,"column_start":6,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":48210,"byte_end":48222,"line_start":139,"line_end":139,"column_start":6,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/headers.rs","byte_start":50393,"byte_end":50405,"line_start":204,"line_end":204,"column_start":16,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1147},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":65599,"byte_end":65610,"line_start":29,"line_end":29,"column_start":6,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":68820,"byte_end":68832,"line_start":115,"line_end":115,"column_start":15,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1190},"to":{"krate":0,"index":191}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":70140,"byte_end":70153,"line_start":152,"line_end":152,"column_start":6,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs","byte_start":72181,"byte_end":72194,"line_start":217,"line_end":217,"column_start":16,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1201},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":11705,"byte_end":11710,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3173},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":13761,"byte_end":13769,"line_start":170,"line_end":170,"column_start":6,"column_end":14},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":16060,"byte_end":16068,"line_start":242,"line_end":242,"column_start":24,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs","byte_start":16299,"byte_end":16307,"line_start":250,"line_end":250,"column_start":24,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87526,"byte_end":87530,"line_start":21,"line_end":21,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":4509},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87533,"byte_end":87538,"line_start":21,"line_end":21,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":4566},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":87541,"byte_end":87546,"line_start":21,"line_end":21,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":3173},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/transport.rs","byte_start":89573,"byte_end":89582,"line_start":69,"line_end":69,"column_start":26,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":5251},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":91925,"byte_end":91934,"line_start":58,"line_end":58,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":95304,"byte_end":95305,"line_start":137,"line_end":137,"column_start":23,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":317},"to":{"krate":0,"index":312}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":96133,"byte_end":96135,"line_start":161,"line_end":161,"column_start":27,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":324},"to":{"krate":0,"index":321}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":98166,"byte_end":98175,"line_start":209,"line_end":209,"column_start":10,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs","byte_start":99455,"byte_end":99469,"line_start":244,"line_end":244,"column_start":12,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":135570,"byte_end":135580,"line_start":40,"line_end":40,"column_start":26,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":396},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138321,"byte_end":138340,"line_start":99,"line_end":99,"column_start":9,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":138585,"byte_end":138604,"line_start":108,"line_end":108,"column_start":26,"column_end":45},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":416},"to":{"krate":0,"index":406}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":140123,"byte_end":140138,"line_start":160,"line_end":160,"column_start":21,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145172,"byte_end":145185,"line_start":276,"line_end":276,"column_start":6,"column_end":19},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs","byte_start":145780,"byte_end":145793,"line_start":297,"line_end":297,"column_start":17,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1326},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":154498,"byte_end":154515,"line_start":38,"line_end":38,"column_start":21,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs","byte_start":154977,"byte_end":154994,"line_start":49,"line_end":49,"column_start":41,"column_end":58},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":489},"to":{"krate":0,"index":487}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161718,"byte_end":161723,"line_start":60,"line_end":60,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2555},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161726,"byte_end":161730,"line_start":60,"line_end":60,"column_start":44,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":3168},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161733,"byte_end":161737,"line_start":60,"line_end":60,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":3180},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":161762,"byte_end":161771,"line_start":62,"line_end":62,"column_start":21,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1353},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":163559,"byte_end":163577,"line_start":102,"line_end":102,"column_start":10,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164323,"byte_end":164344,"line_start":121,"line_end":121,"column_start":23,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1335},"to":{"krate":2,"index":10016}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164536,"byte_end":164557,"line_start":127,"line_end":127,"column_start":23,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1335},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":164857,"byte_end":164878,"line_start":139,"line_end":139,"column_start":26,"column_end":47},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1335},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":165039,"byte_end":165060,"line_start":144,"line_end":144,"column_start":27,"column_end":48},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1335},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":165090,"byte_end":165108,"line_start":146,"line_end":146,"column_start":26,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":599},"to":{"krate":0,"index":595}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":166896,"byte_end":166912,"line_start":186,"line_end":186,"column_start":19,"column_end":35},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":170923,"byte_end":170936,"line_start":284,"line_end":284,"column_start":17,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/client/mod.rs","byte_start":171224,"byte_end":171237,"line_start":294,"line_end":294,"column_start":29,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":643},"to":{"krate":0,"index":392}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":183660,"byte_end":183673,"line_start":30,"line_end":30,"column_start":17,"column_end":30},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":183892,"byte_end":183905,"line_start":39,"line_end":39,"column_start":29,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":709},"to":{"krate":0,"index":392}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/server.rs","byte_start":185989,"byte_end":186005,"line_start":93,"line_end":93,"column_start":19,"column_end":35},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":1948,"byte_end":1957,"line_start":53,"line_end":53,"column_start":26,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1353},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":2066,"byte_end":2075,"line_start":59,"line_end":59,"column_start":23,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1353},"to":{"krate":2,"index":10016}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":2223,"byte_end":2232,"line_start":65,"line_end":65,"column_start":16,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1353},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":4490,"byte_end":4500,"line_start":123,"line_end":123,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/mod.rs","byte_start":5488,"byte_end":5496,"line_start":151,"line_end":151,"column_start":6,"column_end":14},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/simple.rs","byte_start":195949,"byte_end":195961,"line_start":104,"line_end":104,"column_start":9,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":204701,"byte_end":204719,"line_start":55,"line_end":55,"column_start":9,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":206677,"byte_end":206701,"line_start":98,"line_end":98,"column_start":20,"column_end":44},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":930},"to":{"krate":0,"index":312}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":208392,"byte_end":208412,"line_start":131,"line_end":131,"column_start":9,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":210201,"byte_end":210227,"line_start":170,"line_end":170,"column_start":23,"column_end":49},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":942},"to":{"krate":0,"index":321}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":210859,"byte_end":210875,"line_start":189,"line_end":189,"column_start":26,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":947},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":215274,"byte_end":215287,"line_start":276,"line_end":276,"column_start":6,"column_end":19},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":227969,"byte_end":227975,"line_start":575,"line_end":575,"column_start":16,"column_end":22},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228157,"byte_end":228163,"line_start":584,"line_end":584,"column_start":15,"column_end":21},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs","byte_start":228261,"byte_end":228267,"line_start":590,"line_end":590,"column_start":6,"column_end":12},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/server/mod.rs","byte_start":236631,"byte_end":236643,"line_start":77,"line_end":77,"column_start":13,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1062},"to":{"krate":4294967295,"index":4294967295}}]}