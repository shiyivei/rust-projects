{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4","program":"/Users/qinjianquan/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rusttype","/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=f9050e35ff5aa12f","-C","extra-filename=-f9050e35ff5aa12f","--out-dir","/Users/qinjianquan/rust-projects/snake/target/rls/debug/deps","-L","dependency=/Users/qinjianquan/rust-projects/snake/target/rls/debug/deps","--extern","arrayvec=/Users/qinjianquan/rust-projects/snake/target/rls/debug/deps/libarrayvec-9c00000e6a8fb6fe.rmeta","--extern","linked_hash_map=/Users/qinjianquan/rust-projects/snake/target/rls/debug/deps/liblinked_hash_map-5e0ca1ea7d5be56a.rmeta","--extern","stb_truetype=/Users/qinjianquan/rust-projects/snake/target/rls/debug/deps/libstb_truetype-1242c43ccc3f038c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/qinjianquan/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/qinjianquan/rust-projects/snake/target/rls/debug/deps/librusttype-f9050e35ff5aa12f.rmeta"},"prelude":{"crate_id":{"name":"rusttype","disambiguator":[10328022396936840500,0]},"crate_root":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src","external_crates":[{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12559688530690724281,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[174151012323878463,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10235651058269579681,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12116087461466967610,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[483691506014662373,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15265217745217534414,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10524025089107222904,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[380231209694308790,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[6799936204780222302,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12259298289434686045,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[12106170270815753816,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4360076971198232690,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[9958527644082841145,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17047570305521200150,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[9299774619811639326,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[7916745300923032827,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[12567887698174358418,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[13522633749795580280,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[3127363703815277095,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":20,"id":{"name":"arrayvec","disambiguator":[1637034612264007408,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":21,"id":{"name":"nodrop","disambiguator":[12220188125642818830,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":22,"id":{"name":"stb_truetype","disambiguator":[5448541988189723307,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":23,"id":{"name":"stb_truetype","disambiguator":[18261581040861019972,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":24,"id":{"name":"byteorder","disambiguator":[8263769612188784292,0]}},{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","num":25,"id":{"name":"linked_hash_map","disambiguator":[15790175466201446628,0]}}],"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":0,"byte_end":33041,"line_start":1,"line_end":786,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1718},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5258,"byte_end":5262,"line_start":104,"line_end":104,"column_start":20,"column_end":24},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1622},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5264,"byte_end":5269,"line_start":104,"line_end":104,"column_start":26,"column_end":31},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5271,"byte_end":5276,"line_start":104,"line_end":104,"column_start":33,"column_end":38},"alias_span":null,"name":"point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1655},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5278,"byte_end":5284,"line_start":104,"line_end":104,"column_start":40,"column_end":46},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":12},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5286,"byte_end":5292,"line_start":104,"line_end":104,"column_start":48,"column_end":54},"alias_span":null,"name":"vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1688},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5294,"byte_end":5298,"line_start":104,"line_end":104,"column_start":56,"column_end":60},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1703},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5300,"byte_end":5305,"line_start":104,"line_end":104,"column_start":62,"column_end":67},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":0,"byte_end":33041,"line_start":1,"line_end":786,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":92},{"krate":0,"index":156},{"krate":0,"index":1366},{"krate":0,"index":1469},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1947},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1497},{"krate":0,"index":1501},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1977},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1992},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2100},{"krate":0,"index":2102},{"krate":0,"index":2107},{"krate":0,"index":2110},{"krate":0,"index":2115},{"krate":0,"index":2118},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1530},{"krate":0,"index":1534},{"krate":0,"index":1539},{"krate":0,"index":2132},{"krate":0,"index":2137},{"krate":0,"index":1553},{"krate":0,"index":2141},{"krate":0,"index":2150},{"krate":0,"index":1559},{"krate":0,"index":1565},{"krate":0,"index":2154},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2166},{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":1573},{"krate":0,"index":1597}],"decl_id":null,"docs":" RustType is a pure Rust alternative to libraries like FreeType.","sig":null,"attributes":[{"value":"/ RustType is a pure Rust alternative to libraries like FreeType.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":0,"byte_end":67,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":68,"byte_end":71,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The current capabilities of RustType:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":72,"byte_end":113,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":114,"byte_end":117,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * Reading TrueType formatted fonts and font collections. This includes `*.ttf` as well as a subset","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":118,"byte_end":220,"line_start":5,"line_end":5,"column_start":1,"column_end":103}},{"value":"/   of `*.otf` font files.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":221,"byte_end":249,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/ * Retrieving glyph shapes and commonly used properties for a font and its glyphs.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":250,"byte_end":335,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/ * Laying out glyphs horizontally using horizontal and vertical metrics, and glyph-pair-specific kerning.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":336,"byte_end":444,"line_start":8,"line_end":8,"column_start":1,"column_end":109}},{"value":"/ * Rasterising glyphs with sub-pixel positioning using an accurate analytical algorithm","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":445,"byte_end":535,"line_start":9,"line_end":9,"column_start":1,"column_end":91}},{"value":"/   (not based on sampling).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":536,"byte_end":566,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ * Managing a font cache on the GPU with the `gpu_cache` module. This keeps recently used glyph renderings","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":567,"byte_end":676,"line_start":11,"line_end":11,"column_start":1,"column_end":110}},{"value":"/   in a dynamic cache in GPU memory to minimise texture uploads per-frame. It also allows you keep the draw","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":677,"byte_end":787,"line_start":12,"line_end":12,"column_start":1,"column_end":111}},{"value":"/   call count for text very low, as all glyphs are kept in one GPU texture.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":788,"byte_end":866,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":867,"byte_end":870,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Notable things that RustType does not support *yet*:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":871,"byte_end":927,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":928,"byte_end":931,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * OpenType formatted fonts that are not just TrueType fonts (OpenType is a superset of TrueType). Notably","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":932,"byte_end":1041,"line_start":17,"line_end":17,"column_start":1,"column_end":110}},{"value":"/   there is no support yet for cubic Bezier curves used in glyphs.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1042,"byte_end":1111,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ * Font hinting.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1112,"byte_end":1131,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/ * Ligatures of any kind.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1132,"byte_end":1160,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ * Some less common TrueType sub-formats.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1161,"byte_end":1205,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ * Right-to-left and vertical text layout.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1206,"byte_end":1251,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Getting Started","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1256,"byte_end":1277,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1278,"byte_end":1281,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Add the following to your Cargo.toml:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1282,"byte_end":1323,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1324,"byte_end":1327,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1328,"byte_end":1339,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1340,"byte_end":1358,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ rusttype = \"0.2.1\"","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1359,"byte_end":1381,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1382,"byte_end":1389,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1390,"byte_end":1393,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ To hit the ground running with RustType, look at the `simple.rs` example supplied with the crate. It","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1394,"byte_end":1498,"line_start":33,"line_end":33,"column_start":1,"column_end":105}},{"value":"/ demonstrates loading a font file, rasterising an arbitrary string, and displaying the result as ASCII art.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1499,"byte_end":1609,"line_start":34,"line_end":34,"column_start":1,"column_end":111}},{"value":"/ If you prefer to just look at the documentation, the entry point for loading fonts is `FontCollection`,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1610,"byte_end":1717,"line_start":35,"line_end":35,"column_start":1,"column_end":108}},{"value":"/ from which you can access individual fonts, then their glyphs.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1718,"byte_end":1784,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1785,"byte_end":1788,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Glyphs","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1789,"byte_end":1801,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1802,"byte_end":1805,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The glyph API uses wrapper structs to augment a glyph with","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1806,"byte_end":1868,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ information such as scaling and positioning, making relevant methods that make use of this information","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1869,"byte_end":1975,"line_start":41,"line_end":41,"column_start":1,"column_end":107}},{"value":"/ available as appropriate. For example, given a `Glyph` `glyph` obtained directly from a `Font`:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":1976,"byte_end":2075,"line_start":42,"line_end":42,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2076,"byte_end":2079,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2080,"byte_end":2093,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/ # use rusttype::*;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2094,"byte_end":2116,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/ # let glyph: Glyph<'static> = unimplemented!();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2117,"byte_end":2168,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ // One of the few things you can do with an unsized, positionless glyph is get its id.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2169,"byte_end":2259,"line_start":47,"line_end":47,"column_start":1,"column_end":91}},{"value":"/ let id = glyph.id();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2260,"byte_end":2284,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ let glyph = glyph.scaled(Scale::uniform(10.0));","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2285,"byte_end":2336,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/ // Now glyph is a ScaledGlyph, you can do more with it, as well as what you can do with Glyph.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2337,"byte_end":2435,"line_start":50,"line_end":50,"column_start":1,"column_end":99}},{"value":"/ // For example, you can access the correctly scaled horizontal metrics for the glyph.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2436,"byte_end":2525,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ let h_metrics = glyph.h_metrics();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2526,"byte_end":2564,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ let glyph = glyph.positioned(point(5.0, 3.0));","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2565,"byte_end":2615,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"/ // Now glyph is a PositionedGlyph, and you can do even more with it, e.g. drawing.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2616,"byte_end":2702,"line_start":54,"line_end":54,"column_start":1,"column_end":87}},{"value":"/ glyph.draw(|x, y, v| {}); // In this case the pixel values are not used.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2703,"byte_end":2779,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2780,"byte_end":2787,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2788,"byte_end":2791,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Unicode terminology","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2792,"byte_end":2817,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2818,"byte_end":2821,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This crate uses terminology for computerised typography as specified by the Unicode standard. If you are","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2822,"byte_end":2930,"line_start":60,"line_end":60,"column_start":1,"column_end":109}},{"value":"/ not sure of the differences between a code point, a character, and a glyph, you may want to check the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":2931,"byte_end":3036,"line_start":61,"line_end":61,"column_start":1,"column_end":106}},{"value":"/ [official Unicode glossary](http://unicode.org/glossary/), or alternatively, here's my take on it from a","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3037,"byte_end":3145,"line_start":62,"line_end":62,"column_start":1,"column_end":109}},{"value":"/ practical perspective:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3146,"byte_end":3172,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3173,"byte_end":3176,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ * A character is what you would conventionally call a single symbol, independent of its appearance or","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3177,"byte_end":3282,"line_start":65,"line_end":65,"column_start":1,"column_end":106}},{"value":"/   representation in a particular font. Examples include `a`, `A`, `ä`, `å`, `1`, `*`, `Ω`, etc.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3283,"byte_end":3385,"line_start":66,"line_end":66,"column_start":1,"column_end":100}},{"value":"/ * A Unicode code point is the particular number that the Unicode standard associates with a particular","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3386,"byte_end":3492,"line_start":67,"line_end":67,"column_start":1,"column_end":107}},{"value":"/   character.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3493,"byte_end":3509,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/   Note however that code points also exist for things not conventionally thought of as characters by","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3510,"byte_end":3614,"line_start":69,"line_end":69,"column_start":1,"column_end":105}},{"value":"/   themselves, but can be combined to form characters, such as diacritics like accents. These","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3615,"byte_end":3711,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/   \"characters\" are known in Unicode as \"combining characters\".","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3712,"byte_end":3778,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/   E.g., a diaeresis (`¨`) has the code point U+0308. If this code point follows the code point U+0055","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3779,"byte_end":3885,"line_start":72,"line_end":72,"column_start":1,"column_end":106}},{"value":"/   (the letter `u`), this sequence represents the character `ü`. Note that there is also a","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3886,"byte_end":3980,"line_start":73,"line_end":73,"column_start":1,"column_end":94}},{"value":"/   single codepoint for `ü`, U+00FC. This means that what visually looks like the same string can have","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":3981,"byte_end":4087,"line_start":74,"line_end":74,"column_start":1,"column_end":106}},{"value":"/   multiple different Unicode representations. Some fonts will have glyphs (see below) for one sequence of","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":4088,"byte_end":4197,"line_start":75,"line_end":75,"column_start":1,"column_end":110}},{"value":"/   codepoints, but not another that has the same meaning. To deal with this problem it is recommended to use","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":4198,"byte_end":4309,"line_start":76,"line_end":76,"column_start":1,"column_end":112}},{"value":"/   Unicode normalisation, as provided by, for example, the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":4310,"byte_end":4371,"line_start":77,"line_end":77,"column_start":1,"column_end":62}},{"value":"/   [unicode-normalization](http://crates.io/crates/unicode-normalization) crate, to convert to code point","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":4372,"byte_end":4480,"line_start":78,"line_end":78,"column_start":1,"column_end":109}},{"value":"/   sequences that work with the font in question. Typically a font is more likely to support a single code","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":4481,"byte_end":4590,"line_start":79,"line_end":79,"column_start":1,"column_end":110}},{"value":"/   point vs. a sequence with the same meaning, so the best normalisation to use is \"canonical recomposition\",","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":4591,"byte_end":4703,"line_start":80,"line_end":80,"column_start":1,"column_end":113}},{"value":"/   known as NFC in the normalisation crate.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":4704,"byte_end":4750,"line_start":81,"line_end":81,"column_start":1,"column_end":47}},{"value":"/ * A glyph is a particular font's shape to draw the character for a particular Unicode code point. This will","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":4751,"byte_end":4862,"line_start":82,"line_end":82,"column_start":1,"column_end":112}},{"value":"/   have its own identifying number unique to the font, its ID.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":4863,"byte_end":4928,"line_start":83,"line_end":83,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33734,"byte_end":33739,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":1624},{"krate":0,"index":1625}],"decl_id":null,"docs":" A point in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"/ A point in 2-dimensional space, with each dimension of type `N`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33058,"byte_end":33126,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33127,"byte_end":33130,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Legal operations on points are addition and subtraction by vectors, and subtraction between points, to give","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33131,"byte_end":33242,"line_start":5,"line_end":5,"column_start":1,"column_end":112}},{"value":"/ a vector representing the offset between the two points. Combined with the legal operations on vectors,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33243,"byte_end":33350,"line_start":6,"line_end":6,"column_start":1,"column_end":108}},{"value":"/ meaningful manipulations of vectors and points can be performed.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33351,"byte_end":33419,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33420,"byte_end":33423,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For example, to interpolate between two points by a factor `t`:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33424,"byte_end":33491,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33492,"byte_end":33495,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33496,"byte_end":33503,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # use rusttype::*;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33504,"byte_end":33526,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/ # let t = 0.5; let p0 = point(0.0, 0.0); let p1 = point(0.0, 0.0);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33527,"byte_end":33597,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ let interpolated_point = p0 + (p1 - p0) * t;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33598,"byte_end":33646,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33647,"byte_end":33654,"line_start":15,"line_end":15,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33753,"byte_end":33754,"line_start":18,"line_end":18,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Point::x","value":"N","parent":{"krate":0,"index":1622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33767,"byte_end":33768,"line_start":19,"line_end":19,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Point::y","value":"N","parent":{"krate":0,"index":1622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1655},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34086,"byte_end":34092,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Vector","qualname":"::geometry::Vector","value":"Vector { x, y }","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1658}],"decl_id":null,"docs":" A vector in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"/ A vector in 2-dimensional space, with each dimension of type `N`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33775,"byte_end":33844,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33845,"byte_end":33848,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Legal operations on vectors are addition and subtraction by vectors, addition by points (to give points),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33849,"byte_end":33958,"line_start":24,"line_end":24,"column_start":1,"column_end":110}},{"value":"/ and multiplication and division by scalars.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":33959,"byte_end":34006,"line_start":25,"line_end":25,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1657},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34106,"byte_end":34107,"line_start":28,"line_end":28,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Vector::x","value":"N","parent":{"krate":0,"index":1655},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34120,"byte_end":34121,"line_start":29,"line_end":29,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Vector::y","value":"N","parent":{"krate":0,"index":1655},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34186,"byte_end":34191,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"point","qualname":"::geometry::point","value":"fn point<N>(N, N) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Point`s.\n","sig":null,"attributes":[{"value":"/ A convenience function for generating `Point`s.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34127,"byte_end":34178,"line_start":31,"line_end":31,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34308,"byte_end":34314,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"vector","qualname":"::geometry::vector","value":"fn vector<N>(N, N) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Vector`s.\n","sig":null,"attributes":[{"value":"/ A convenience function for generating `Vector`s.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34248,"byte_end":34300,"line_start":35,"line_end":35,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34462,"byte_end":34465,"line_start":42,"line_end":42,"column_start":8,"column_end":11},"name":"sub","qualname":"<Point<N> as std::ops::Sub>::sub","value":"fn sub(Self, Point<N>) -> Vector<N>","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3244},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34647,"byte_end":34650,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"add","qualname":"<Vector<N> as std::ops::Add>::add","value":"fn add(Self, Vector<N>) -> Vector<N>","parent":{"krate":2,"index":3236},"children":[],"decl_id":{"krate":2,"index":3239},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34833,"byte_end":34836,"line_start":56,"line_end":56,"column_start":8,"column_end":11},"name":"sub","qualname":"<Vector<N> as std::ops::Sub>::sub","value":"fn sub(Self, Vector<N>) -> Vector<N>","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3244},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":35005,"byte_end":35008,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"mul","qualname":"<Vector<f32> as std::ops::Mul>::mul","value":"fn mul(Self, f32) -> Vector<f32>","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3249},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":35169,"byte_end":35172,"line_start":70,"line_end":70,"column_start":8,"column_end":11},"name":"mul","qualname":"<f32 as std::ops::Mul>::mul","value":"fn mul(Self, Vector<f32>) -> Vector<f32>","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3249},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":35341,"byte_end":35344,"line_start":77,"line_end":77,"column_start":8,"column_end":11},"name":"mul","qualname":"<Vector<f64> as std::ops::Mul>::mul","value":"fn mul(Self, f64) -> Vector<f64>","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3249},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":35505,"byte_end":35508,"line_start":84,"line_end":84,"column_start":8,"column_end":11},"name":"mul","qualname":"<f64 as std::ops::Mul>::mul","value":"fn mul(Self, Vector<f64>) -> Vector<f64>","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3249},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":35677,"byte_end":35680,"line_start":91,"line_end":91,"column_start":8,"column_end":11},"name":"div","qualname":"<Vector<f32> as std::ops::Div>::div","value":"fn div(Self, f32) -> Vector<f32>","parent":{"krate":2,"index":3251},"children":[],"decl_id":{"krate":2,"index":3254},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":35841,"byte_end":35844,"line_start":98,"line_end":98,"column_start":8,"column_end":11},"name":"div","qualname":"<f32 as std::ops::Div>::div","value":"fn div(Self, Vector<f32>) -> Vector<f32>","parent":{"krate":2,"index":3251},"children":[],"decl_id":{"krate":2,"index":3254},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36013,"byte_end":36016,"line_start":105,"line_end":105,"column_start":8,"column_end":11},"name":"div","qualname":"<Vector<f64> as std::ops::Div>::div","value":"fn div(Self, f64) -> Vector<f64>","parent":{"krate":2,"index":3251},"children":[],"decl_id":{"krate":2,"index":3254},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36177,"byte_end":36180,"line_start":112,"line_end":112,"column_start":8,"column_end":11},"name":"div","qualname":"<f64 as std::ops::Div>::div","value":"fn div(Self, Vector<f64>) -> Vector<f64>","parent":{"krate":2,"index":3251},"children":[],"decl_id":{"krate":2,"index":3254},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36372,"byte_end":36375,"line_start":119,"line_end":119,"column_start":8,"column_end":11},"name":"add","qualname":"<Point<N> as std::ops::Add>::add","value":"fn add(Self, Vector<N>) -> Point<N>","parent":{"krate":2,"index":3236},"children":[],"decl_id":{"krate":2,"index":3239},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36565,"byte_end":36568,"line_start":126,"line_end":126,"column_start":8,"column_end":11},"name":"sub","qualname":"<Point<N> as std::ops::Sub>::sub","value":"fn sub(Self, Vector<N>) -> Point<N>","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3244},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36758,"byte_end":36761,"line_start":133,"line_end":133,"column_start":8,"column_end":11},"name":"add","qualname":"<Vector<N> as std::ops::Add>::add","value":"fn add(Self, Point<N>) -> Point<N>","parent":{"krate":2,"index":3236},"children":[],"decl_id":{"krate":2,"index":3239},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1688},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36974,"byte_end":36978,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"Line","qualname":"::geometry::Line","value":"Line { p }","parent":null,"children":[{"krate":0,"index":1689}],"decl_id":null,"docs":" A straight line between two points, `p[0]` and `p[1]`\n","sig":null,"attributes":[{"value":"/ A straight line between two points, `p[0]` and `p[1]`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36852,"byte_end":36909,"line_start":138,"line_end":138,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36989,"byte_end":36990,"line_start":141,"line_end":141,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Line::p","value":"[geometry::Point<f32>; 2]","parent":{"krate":0,"index":1688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37169,"byte_end":37174,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"Curve","qualname":"::geometry::Curve","value":"Curve { p }","parent":null,"children":[{"krate":0,"index":1704}],"decl_id":null,"docs":" A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control point `p[1]`.\n","sig":null,"attributes":[{"value":"/ A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control point `p[1]`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37010,"byte_end":37104,"line_start":143,"line_end":143,"column_start":1,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37185,"byte_end":37186,"line_start":146,"line_end":146,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Curve::p","value":"[geometry::Point<f32>; 3]","parent":{"krate":0,"index":1703},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37367,"byte_end":37371,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"Rect","qualname":"::geometry::Rect","value":"Rect { min, max }","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1721}],"decl_id":null,"docs":" A rectangle, with top-left corner at `min`, and bottom-right corner at `max`.\n","sig":null,"attributes":[{"value":"/ A rectangle, with top-left corner at `min`, and bottom-right corner at `max`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37206,"byte_end":37287,"line_start":148,"line_end":148,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37385,"byte_end":37388,"line_start":151,"line_end":151,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Rect::min","value":"geometry::Point<N>","parent":{"krate":0,"index":1718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37408,"byte_end":37411,"line_start":152,"line_end":152,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Rect::max","value":"geometry::Point<N>","parent":{"krate":0,"index":1718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37480,"byte_end":37485,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<N>>::width","value":"fn width(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37549,"byte_end":37555,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<N>>::height","value":"fn height(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":98},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/rasterizer.rs","byte_start":42825,"byte_end":42833,"line_start":4,"line_end":4,"column_start":10,"column_end":18},"name":"PerSlice","qualname":"::rasterizer::SliceUp::PerSlice","value":"type PerSlice: Iterator<Item=Self>;","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/rasterizer.rs","byte_start":42865,"byte_end":42868,"line_start":5,"line_end":5,"column_start":10,"column_end":13},"name":"Out","qualname":"::rasterizer::SliceUp::Out","value":"type Out: Iterator<Item=Self::PerSlice>;","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":658},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100940,"byte_end":100948,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"BTreeMap","qualname":"::support::bst::map::BTreeMap","value":"BTreeMap {  }","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"decl_id":null,"docs":" A map based on a B-Tree.","sig":null,"attributes":[{"value":"/ A map based on a B-Tree.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":98616,"byte_end":98644,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":98645,"byte_end":98648,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ B-Trees represent a fundamental compromise between cache-efficiency and actually minimizing","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":98649,"byte_end":98744,"line_start":33,"line_end":33,"column_start":1,"column_end":96}},{"value":"/ the amount of work performed in a search. In theory, a binary search tree (BST) is the optimal","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":98745,"byte_end":98843,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/ choice for a sorted map, as a perfectly balanced BST performs the theoretical minimum amount of","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":98844,"byte_end":98943,"line_start":35,"line_end":35,"column_start":1,"column_end":100}},{"value":"/ comparisons necessary to find an element (log<sub>2</sub>n). However, in practice the way this","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":98944,"byte_end":99042,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ is done is *very* inefficient for modern computer architectures. In particular, every element","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":99043,"byte_end":99140,"line_start":37,"line_end":37,"column_start":1,"column_end":98}},{"value":"/ is stored in its own individually heap-allocated node. This means that every single insertion","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":99141,"byte_end":99238,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ triggers a heap-allocation, and every single comparison should be a cache-miss. Since these","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":99239,"byte_end":99334,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ are both notably expensive things to do in practice, we are forced to at very least reconsider","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":99335,"byte_end":99433,"line_start":40,"line_end":40,"column_start":1,"column_end":99}},{"value":"/ the BST strategy.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":99434,"byte_end":99455,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":99456,"byte_end":99459,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ A B-Tree instead makes each node contain B-1 to 2B-1 elements in a contiguous array. By doing","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":99460,"byte_end":99557,"line_start":43,"line_end":43,"column_start":1,"column_end":98}},{"value":"/ this, we reduce the number of allocations by a factor of B, and improve cache efficiency in","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":99558,"byte_end":99653,"line_start":44,"line_end":44,"column_start":1,"column_end":96}},{"value":"/ searches. However, this does mean that searches will have to do *more* comparisons on average.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":99654,"byte_end":99752,"line_start":45,"line_end":45,"column_start":1,"column_end":99}},{"value":"/ The precise number of comparisons depends on the node search strategy used. For optimal cache","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":99753,"byte_end":99850,"line_start":46,"line_end":46,"column_start":1,"column_end":98}},{"value":"/ efficiency, one could search the nodes linearly. For optimal comparisons, one could search","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":99851,"byte_end":99945,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/ the node using binary search. As a compromise, one could also perform a linear search","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":99946,"byte_end":100035,"line_start":48,"line_end":48,"column_start":1,"column_end":90}},{"value":"/ that initially only checks every i<sup>th</sup> element for some choice of i.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100036,"byte_end":100117,"line_start":49,"line_end":49,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100118,"byte_end":100121,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Currently, our implementation simply performs naive linear search. This provides excellent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100122,"byte_end":100216,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/ performance on *small* nodes of elements which are cheap to compare. However in the future we","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100217,"byte_end":100314,"line_start":52,"line_end":52,"column_start":1,"column_end":98}},{"value":"/ would like to further explore choosing the optimal search strategy based on the choice of B,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100315,"byte_end":100411,"line_start":53,"line_end":53,"column_start":1,"column_end":97}},{"value":"/ and possibly other factors. Using linear search, searching for a random element is expected","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100412,"byte_end":100507,"line_start":54,"line_end":54,"column_start":1,"column_end":96}},{"value":"/ to take O(B log<sub>B</sub>n) comparisons, which is generally worse than a BST. In practice,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100508,"byte_end":100604,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/ however, performance is excellent.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100605,"byte_end":100643,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100644,"byte_end":100647,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for a key to be modified in such a way that the key's ordering relative to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100648,"byte_end":100746,"line_start":58,"line_end":58,"column_start":1,"column_end":99}},{"value":"/ any other key, as determined by the `Ord` trait, changes while it is in the map. This is","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100747,"byte_end":100839,"line_start":59,"line_end":59,"column_start":1,"column_end":93}},{"value":"/ normally only possible through `Cell`, `RefCell`, global state, I/O, or unsafe code.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":100840,"byte_end":100928,"line_start":60,"line_end":60,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":101093,"byte_end":101097,"line_start":68,"line_end":68,"column_start":8,"column_end":12},"name":"drop","qualname":"<BTreeMap<K, V> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":101259,"byte_end":101264,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"clone","qualname":"<BTreeMap<K, V> as std::clone::Clone>::clone","value":"fn clone(&Self) -> BTreeMap<K, V>","parent":{"krate":2,"index":2790},"children":[],"decl_id":{"krate":2,"index":2791},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":682},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":105061,"byte_end":105065,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"Iter","qualname":"::support::bst::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687}],"decl_id":null,"docs":" An iterator over a BTreeMap's entries.\n","sig":null,"attributes":[{"value":"/ An iterator over a BTreeMap's entries.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":105007,"byte_end":105049,"line_start":185,"line_end":185,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":688},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":105196,"byte_end":105203,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::support::bst::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693}],"decl_id":null,"docs":" A mutable iterator over a BTreeMap's entries.\n","sig":null,"attributes":[{"value":"/ A mutable iterator over a BTreeMap's entries.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":105135,"byte_end":105184,"line_start":191,"line_end":191,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":694},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":105337,"byte_end":105345,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::support::bst::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":" An owning iterator over a BTreeMap's entries.\n","sig":null,"attributes":[{"value":"/ An owning iterator over a BTreeMap's entries.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":105276,"byte_end":105325,"line_start":197,"line_end":197,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":105579,"byte_end":105583,"line_start":205,"line_end":205,"column_start":12,"column_end":16},"name":"Keys","qualname":"::support::bst::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":704}],"decl_id":null,"docs":" An iterator over a BTreeMap's keys.\n","sig":null,"attributes":[{"value":"/ An iterator over a BTreeMap's keys.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":105528,"byte_end":105567,"line_start":204,"line_end":204,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":105687,"byte_end":105693,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"name":"Values","qualname":"::support::bst::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":709}],"decl_id":null,"docs":" An iterator over a BTreeMap's values.\n","sig":null,"attributes":[{"value":"/ An iterator over a BTreeMap's values.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":105634,"byte_end":105675,"line_start":209,"line_end":209,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":105811,"byte_end":105816,"line_start":215,"line_end":215,"column_start":12,"column_end":17},"name":"Range","qualname":"::support::bst::map::Range","value":"Range {  }","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715}],"decl_id":null,"docs":" An iterator over a sub-range of BTreeMap's entries.\n","sig":null,"attributes":[{"value":"/ An iterator over a sub-range of BTreeMap's entries.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":105744,"byte_end":105799,"line_start":214,"line_end":214,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106074,"byte_end":106082,"line_start":221,"line_end":221,"column_start":12,"column_end":20},"name":"RangeMut","qualname":"::support::bst::map::RangeMut","value":"RangeMut {  }","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"decl_id":null,"docs":" A mutable iterator over a sub-range of BTreeMap's entries.\n","sig":null,"attributes":[{"value":"/ A mutable iterator over a sub-range of BTreeMap's entries.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106000,"byte_end":106062,"line_start":220,"line_end":220,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":727},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106488,"byte_end":106494,"line_start":232,"line_end":232,"column_start":9,"column_end":15},"name":"Vacant","qualname":"::support::bst::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" A vacant Entry\n","sig":null,"attributes":[{"value":"/ A vacant Entry","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106461,"byte_end":106479,"line_start":231,"line_end":231,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":729},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106495,"byte_end":106516,"line_start":232,"line_end":232,"column_start":16,"column_end":37},"name":"0","qualname":"::support::bst::map::Entry::Vacant::0","value":"support::bst::map::VacantEntry<'a, K, V>","parent":{"krate":0,"index":727},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":730},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106554,"byte_end":106562,"line_start":235,"line_end":235,"column_start":9,"column_end":17},"name":"Occupied","qualname":"::support::bst::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" An occupied Entry\n","sig":null,"attributes":[{"value":"/ An occupied Entry","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106524,"byte_end":106545,"line_start":234,"line_end":234,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":732},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106563,"byte_end":106586,"line_start":235,"line_end":235,"column_start":18,"column_end":41},"name":"0","qualname":"::support::bst::map::Entry::Occupied::0","value":"support::bst::map::OccupiedEntry<'a, K, V>","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":723},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106431,"byte_end":106436,"line_start":230,"line_end":230,"column_start":10,"column_end":15},"name":"Entry","qualname":"::support::bst::map::Entry","value":"enum Entry<'a, K, V> where K: 'a, V: 'a {\n    Vacant(VacantEntry),\n    Occupied(OccupiedEntry),\n}","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":730}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106341,"byte_end":106421,"line_start":229,"line_end":229,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":733},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106623,"byte_end":106634,"line_start":239,"line_end":239,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::support::bst::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740}],"decl_id":null,"docs":" A vacant Entry.\n","sig":null,"attributes":[{"value":"/ A vacant Entry.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106592,"byte_end":106611,"line_start":238,"line_end":238,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":741},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106889,"byte_end":106902,"line_start":249,"line_end":249,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::support::bst::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747}],"decl_id":null,"docs":" An occupied Entry.\n","sig":null,"attributes":[{"value":"/ An occupied Entry.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":106855,"byte_end":106877,"line_start":248,"line_end":248,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107261,"byte_end":107264,"line_start":264,"line_end":264,"column_start":12,"column_end":15},"name":"new","qualname":"<BTreeMap<K, V>>::new","value":"fn new() -> BTreeMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new empty BTreeMap with a reasonable choice for B.\n","sig":null,"attributes":[{"value":"/ Makes a new empty BTreeMap with a reasonable choice for B.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107187,"byte_end":107249,"line_start":263,"line_end":263,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107667,"byte_end":107672,"line_start":283,"line_end":283,"column_start":12,"column_end":17},"name":"clear","qualname":"<BTreeMap<K, V>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all values.","sig":null,"attributes":[{"value":"/ Clears the map, removing all values.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107391,"byte_end":107431,"line_start":271,"line_end":271,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107436,"byte_end":107439,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107444,"byte_end":107458,"line_start":273,"line_end":273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107463,"byte_end":107466,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107471,"byte_end":107482,"line_start":275,"line_end":275,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107487,"byte_end":107522,"line_start":276,"line_end":276,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107527,"byte_end":107530,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let mut a = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107535,"byte_end":107567,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107572,"byte_end":107593,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ a.clear();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107598,"byte_end":107612,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107617,"byte_end":107643,"line_start":281,"line_end":281,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107648,"byte_end":107655,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108273,"byte_end":108276,"line_start":303,"line_end":303,"column_start":12,"column_end":15},"name":"get","qualname":"<BTreeMap<K, V>>::get","value":"fn get<Q>(&Self, &Q) -> Option<&V> where Q: ?Sized, K: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107776,"byte_end":107838,"line_start":288,"line_end":288,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107843,"byte_end":107846,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107851,"byte_end":107927,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107932,"byte_end":107999,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108004,"byte_end":108007,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108012,"byte_end":108026,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108031,"byte_end":108034,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108039,"byte_end":108050,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108055,"byte_end":108090,"line_start":296,"line_end":296,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108095,"byte_end":108098,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let mut map = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108103,"byte_end":108137,"line_start":298,"line_end":298,"column_start":5,"column_end":39}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108142,"byte_end":108165,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108170,"byte_end":108210,"line_start":300,"line_end":300,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108215,"byte_end":108249,"line_start":301,"line_end":301,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108254,"byte_end":108261,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109029,"byte_end":109041,"line_start":325,"line_end":325,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<BTreeMap<K, V>>::contains_key","value":"fn contains_key<Q>(&Self, &Q) -> bool where Q: ?Sized, K: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108514,"byte_end":108581,"line_start":310,"line_end":310,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108586,"byte_end":108589,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108594,"byte_end":108670,"line_start":312,"line_end":312,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108675,"byte_end":108742,"line_start":313,"line_end":313,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108747,"byte_end":108750,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108755,"byte_end":108769,"line_start":315,"line_end":315,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108774,"byte_end":108777,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108782,"byte_end":108793,"line_start":317,"line_end":317,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108798,"byte_end":108833,"line_start":318,"line_end":318,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108838,"byte_end":108841,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ let mut map = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108846,"byte_end":108880,"line_start":320,"line_end":320,"column_start":5,"column_end":39}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108885,"byte_end":108908,"line_start":321,"line_end":321,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108913,"byte_end":108956,"line_start":322,"line_end":322,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":108961,"byte_end":109005,"line_start":323,"line_end":323,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109010,"byte_end":109017,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109770,"byte_end":109777,"line_start":347,"line_end":347,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BTreeMap<K, V>>::get_mut","value":"fn get_mut<Q>(&mut Self, &Q) -> Option<&mut V> where Q: ?Sized, K: Borrow<Q>,\nQ: Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109149,"byte_end":109219,"line_start":329,"line_end":329,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109224,"byte_end":109227,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109232,"byte_end":109308,"line_start":331,"line_end":331,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109313,"byte_end":109380,"line_start":332,"line_end":332,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109385,"byte_end":109388,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109393,"byte_end":109407,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109412,"byte_end":109415,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109420,"byte_end":109431,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109436,"byte_end":109471,"line_start":337,"line_end":337,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109476,"byte_end":109479,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut map = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109484,"byte_end":109518,"line_start":339,"line_end":339,"column_start":5,"column_end":39}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109523,"byte_end":109546,"line_start":340,"line_end":340,"column_start":5,"column_end":28}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109551,"byte_end":109589,"line_start":341,"line_end":341,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109594,"byte_end":109611,"line_start":342,"line_end":342,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109616,"byte_end":109621,"line_start":343,"line_end":343,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109626,"byte_end":109655,"line_start":344,"line_end":344,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":109660,"byte_end":109667,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110797,"byte_end":110803,"line_start":377,"line_end":377,"column_start":12,"column_end":18},"name":"insert","qualname":"<BTreeMap<K, V>>::insert","value":"fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110027,"byte_end":110069,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110074,"byte_end":110077,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110082,"byte_end":110147,"line_start":356,"line_end":356,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110152,"byte_end":110155,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the key is not updated, the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110160,"byte_end":110229,"line_start":358,"line_end":358,"column_start":5,"column_end":74}},{"value":"/ value is updated and the old value is returned.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110234,"byte_end":110285,"line_start":359,"line_end":359,"column_start":5,"column_end":56}},{"value":"/ See the [module-level documentation] for more.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110290,"byte_end":110340,"line_start":360,"line_end":360,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110345,"byte_end":110348,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [module-level documentation]: index.html#insert-and-complex-keys","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110353,"byte_end":110421,"line_start":362,"line_end":362,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110426,"byte_end":110429,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110434,"byte_end":110448,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110453,"byte_end":110456,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110461,"byte_end":110472,"line_start":366,"line_end":366,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110477,"byte_end":110512,"line_start":367,"line_end":367,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110517,"byte_end":110520,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ let mut map = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110525,"byte_end":110559,"line_start":369,"line_end":369,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(map.insert(37, \"a\"), None);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110564,"byte_end":110606,"line_start":370,"line_end":370,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110611,"byte_end":110649,"line_start":371,"line_end":371,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110654,"byte_end":110657,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110662,"byte_end":110686,"line_start":373,"line_end":373,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Some(\"b\"));","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110691,"byte_end":110738,"line_start":374,"line_end":374,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110743,"byte_end":110773,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":110778,"byte_end":110785,"line_start":376,"line_end":376,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111614,"byte_end":111620,"line_start":403,"line_end":403,"column_start":12,"column_end":18},"name":"remove","qualname":"<BTreeMap<K, V>>::remove","value":"fn remove<Q>(&mut Self, &Q) -> Option<V> where Q: ?Sized, K: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111066,"byte_end":111139,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111144,"byte_end":111174,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111179,"byte_end":111182,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111187,"byte_end":111263,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111268,"byte_end":111335,"line_start":391,"line_end":391,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111340,"byte_end":111343,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111348,"byte_end":111362,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111367,"byte_end":111370,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111375,"byte_end":111386,"line_start":395,"line_end":395,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111391,"byte_end":111426,"line_start":396,"line_end":396,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111431,"byte_end":111434,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ let mut map = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111439,"byte_end":111473,"line_start":398,"line_end":398,"column_start":5,"column_end":39}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111478,"byte_end":111501,"line_start":399,"line_end":399,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111506,"byte_end":111548,"line_start":400,"line_end":400,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111553,"byte_end":111590,"line_start":401,"line_end":401,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":111595,"byte_end":111602,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112911,"byte_end":112916,"line_start":437,"line_end":437,"column_start":12,"column_end":17},"name":"range","qualname":"<BTreeMap<K, V>>::range","value":"fn range<Min, Max>(&Self, Bound<&Min>, Bound<&Max>) -> Range<, K, V> where\nMin: ?Sized + Ord, Max: ?Sized + Ord, K: Borrow<Min> + Borrow<Max>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a double-ended iterator over a sub-range of elements in the map, starting\n at min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\n infinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\n Thus range(Unbounded, Unbounded) will yield the whole collection.","sig":null,"attributes":[{"value":"/ Constructs a double-ended iterator over a sub-range of elements in the map, starting","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112041,"byte_end":112129,"line_start":416,"line_end":416,"column_start":5,"column_end":93}},{"value":"/ at min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112134,"byte_end":112224,"line_start":417,"line_end":417,"column_start":5,"column_end":95}},{"value":"/ infinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112229,"byte_end":112318,"line_start":418,"line_end":418,"column_start":5,"column_end":94}},{"value":"/ Thus range(Unbounded, Unbounded) will yield the whole collection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112323,"byte_end":112392,"line_start":419,"line_end":419,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112397,"byte_end":112400,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112405,"byte_end":112419,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112424,"byte_end":112427,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112432,"byte_end":112443,"line_start":423,"line_end":423,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112448,"byte_end":112451,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112456,"byte_end":112491,"line_start":425,"line_end":425,"column_start":5,"column_end":40}},{"value":"/ use std::collections::Bound::{Included, Unbounded};","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112496,"byte_end":112551,"line_start":426,"line_end":426,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112556,"byte_end":112559,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ let mut map = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112564,"byte_end":112598,"line_start":428,"line_end":428,"column_start":5,"column_end":39}},{"value":"/ map.insert(3, \"a\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112603,"byte_end":112626,"line_start":429,"line_end":429,"column_start":5,"column_end":28}},{"value":"/ map.insert(5, \"b\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112631,"byte_end":112654,"line_start":430,"line_end":430,"column_start":5,"column_end":28}},{"value":"/ map.insert(8, \"c\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112659,"byte_end":112682,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/ for (&key, &value) in map.range(Included(&4), Included(&8)) {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112687,"byte_end":112752,"line_start":432,"line_end":432,"column_start":5,"column_end":70}},{"value":"/     println!(\"{}: {}\", key, value);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112757,"byte_end":112796,"line_start":433,"line_end":433,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112801,"byte_end":112806,"line_start":434,"line_end":434,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(Some((&5, &\"b\")), map.range(Included(&4), Unbounded).next());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112811,"byte_end":112887,"line_start":435,"line_end":435,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":112892,"byte_end":112899,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115970,"byte_end":115979,"line_start":507,"line_end":507,"column_start":12,"column_end":21},"name":"range_mut","qualname":"<BTreeMap<K, V>>::range_mut","value":"fn range_mut<Min, Max>(&mut Self, Bound<&Min>, Bound<&Max>)\n-> RangeMut<, K, V> where Min: ?Sized + Ord, Max: ?Sized + Ord,\nK: Borrow<Min> + Borrow<Max>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\n at min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\n infinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\n Thus range(Unbounded, Unbounded) will yield the whole collection.","sig":null,"attributes":[{"value":"/ Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":114934,"byte_end":115030,"line_start":485,"line_end":485,"column_start":5,"column_end":101}},{"value":"/ at min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115035,"byte_end":115125,"line_start":486,"line_end":486,"column_start":5,"column_end":95}},{"value":"/ infinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115130,"byte_end":115219,"line_start":487,"line_end":487,"column_start":5,"column_end":94}},{"value":"/ Thus range(Unbounded, Unbounded) will yield the whole collection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115224,"byte_end":115293,"line_start":488,"line_end":488,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115298,"byte_end":115301,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115306,"byte_end":115320,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115325,"byte_end":115328,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115333,"byte_end":115344,"line_start":492,"line_end":492,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115349,"byte_end":115352,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115357,"byte_end":115392,"line_start":494,"line_end":494,"column_start":5,"column_end":40}},{"value":"/ use std::collections::Bound::{Included, Excluded};","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115397,"byte_end":115451,"line_start":495,"line_end":495,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115456,"byte_end":115459,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ let mut map: BTreeMap<&str, i32> = [\"Alice\", \"Bob\", \"Carol\", \"Cheryl\"].iter()","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115464,"byte_end":115545,"line_start":497,"line_end":497,"column_start":5,"column_end":86}},{"value":"/                                                                       .map(|&s| (s, 0))","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115550,"byte_end":115641,"line_start":498,"line_end":498,"column_start":5,"column_end":96}},{"value":"/                                                                       .collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115646,"byte_end":115731,"line_start":499,"line_end":499,"column_start":5,"column_end":90}},{"value":"/ for (_, balance) in map.range_mut(Included(\"B\"), Excluded(\"Cheryl\")) {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115736,"byte_end":115810,"line_start":500,"line_end":500,"column_start":5,"column_end":79}},{"value":"/     *balance += 100;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115815,"byte_end":115839,"line_start":501,"line_end":501,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115844,"byte_end":115849,"line_start":502,"line_end":502,"column_start":5,"column_end":10}},{"value":"/ for (name, balance) in &map {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115854,"byte_end":115887,"line_start":503,"line_end":503,"column_start":5,"column_end":38}},{"value":"/     println!(\"{} => {}\", name, balance);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115892,"byte_end":115936,"line_start":504,"line_end":504,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115941,"byte_end":115946,"line_start":505,"line_end":505,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":115951,"byte_end":115958,"line_start":506,"line_end":506,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118557,"byte_end":118562,"line_start":575,"line_end":575,"column_start":12,"column_end":17},"name":"entry","qualname":"<BTreeMap<K, V>>::entry","value":"fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118066,"byte_end":118148,"line_start":559,"line_end":559,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118153,"byte_end":118156,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118161,"byte_end":118175,"line_start":561,"line_end":561,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118180,"byte_end":118183,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118188,"byte_end":118199,"line_start":563,"line_end":563,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118204,"byte_end":118239,"line_start":564,"line_end":564,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118244,"byte_end":118247,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ let mut count: BTreeMap<&str, usize> = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118252,"byte_end":118311,"line_start":566,"line_end":566,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118316,"byte_end":118319,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ // count the number of occurrences of letters in the vec","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118324,"byte_end":118384,"line_start":568,"line_end":568,"column_start":5,"column_end":65}},{"value":"/ for x in vec![\"a\",\"b\",\"a\",\"c\",\"a\",\"b\"] {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118389,"byte_end":118433,"line_start":569,"line_end":569,"column_start":5,"column_end":49}},{"value":"/     *count.entry(x).or_insert(0) += 1;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118438,"byte_end":118480,"line_start":570,"line_end":570,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118485,"byte_end":118490,"line_start":571,"line_end":571,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118495,"byte_end":118498,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count[\"a\"], 3);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118503,"byte_end":118533,"line_start":573,"line_end":573,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":118538,"byte_end":118545,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":119203,"byte_end":119212,"line_start":596,"line_end":596,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a BTreeMap<K, V> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Iter","parent":{"krate":2,"index":8098},"children":[],"decl_id":{"krate":2,"index":8101},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":119361,"byte_end":119365,"line_start":604,"line_end":604,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<(&'a K, &'a V)>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":119580,"byte_end":119589,"line_start":613,"line_end":613,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":119746,"byte_end":119755,"line_start":619,"line_end":619,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Iter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<(&'a K, &'a V)>","parent":{"krate":2,"index":8142},"children":[],"decl_id":{"krate":2,"index":8143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120039,"byte_end":120042,"line_start":630,"line_end":630,"column_start":8,"column_end":11},"name":"len","qualname":"<Iter as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8167},"children":[],"decl_id":{"krate":2,"index":8168},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120127,"byte_end":120132,"line_start":634,"line_end":634,"column_start":8,"column_end":13},"name":"clone","qualname":"<Iter as std::clone::Clone>::clone","value":"fn clone(&Self) -> Iter","parent":{"krate":2,"index":2790},"children":[],"decl_id":{"krate":2,"index":2791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120413,"byte_end":120422,"line_start":646,"line_end":646,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut BTreeMap<K, V> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> IterMut","parent":{"krate":2,"index":8098},"children":[],"decl_id":{"krate":2,"index":8101},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120585,"byte_end":120589,"line_start":654,"line_end":654,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<(&'a K, &'a mut V)>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120808,"byte_end":120817,"line_start":663,"line_end":663,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120977,"byte_end":120986,"line_start":669,"line_end":669,"column_start":8,"column_end":17},"name":"next_back","qualname":"<IterMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<(&'a K, &'a mut V)>","parent":{"krate":2,"index":8142},"children":[],"decl_id":{"krate":2,"index":8143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":121277,"byte_end":121280,"line_start":680,"line_end":680,"column_start":8,"column_end":11},"name":"len","qualname":"<IterMut as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8167},"children":[],"decl_id":{"krate":2,"index":8168},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":121429,"byte_end":121438,"line_start":687,"line_end":687,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<BTreeMap<K, V> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> IntoIter<K, V>","parent":{"krate":2,"index":8098},"children":[],"decl_id":{"krate":2,"index":8101},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":121844,"byte_end":121848,"line_start":702,"line_end":702,"column_start":8,"column_end":12},"name":"drop","qualname":"<IntoIter<K, V> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":122362,"byte_end":122366,"line_start":719,"line_end":719,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<K, V> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<(K, V)>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":123609,"byte_end":123618,"line_start":755,"line_end":755,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<K, V> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":123763,"byte_end":123772,"line_start":761,"line_end":761,"column_start":8,"column_end":17},"name":"next_back","qualname":"<IntoIter<K, V> as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<(K, V)>","parent":{"krate":2,"index":8142},"children":[],"decl_id":{"krate":2,"index":8143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125059,"byte_end":125062,"line_start":799,"line_end":799,"column_start":8,"column_end":11},"name":"len","qualname":"<IntoIter<K, V> as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8167},"children":[],"decl_id":{"krate":2,"index":8168},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125174,"byte_end":125178,"line_start":805,"line_end":805,"column_start":8,"column_end":12},"name":"next","qualname":"<Keys as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<&'a K>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125265,"byte_end":125274,"line_start":809,"line_end":809,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Keys as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125413,"byte_end":125422,"line_start":815,"line_end":815,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Keys as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<&'a K>","parent":{"krate":2,"index":8142},"children":[],"decl_id":{"krate":2,"index":8143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125570,"byte_end":125573,"line_start":821,"line_end":821,"column_start":8,"column_end":11},"name":"len","qualname":"<Keys as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8167},"children":[],"decl_id":{"krate":2,"index":8168},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125675,"byte_end":125680,"line_start":827,"line_end":827,"column_start":8,"column_end":13},"name":"clone","qualname":"<Keys as std::clone::Clone>::clone","value":"fn clone(&Self) -> Keys","parent":{"krate":2,"index":2790},"children":[],"decl_id":{"krate":2,"index":2791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125858,"byte_end":125862,"line_start":837,"line_end":837,"column_start":8,"column_end":12},"name":"next","qualname":"<Values as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<&'a V>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125949,"byte_end":125958,"line_start":841,"line_end":841,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Values as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126099,"byte_end":126108,"line_start":847,"line_end":847,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Values as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<&'a V>","parent":{"krate":2,"index":8142},"children":[],"decl_id":{"krate":2,"index":8143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126258,"byte_end":126261,"line_start":853,"line_end":853,"column_start":8,"column_end":11},"name":"len","qualname":"<Values as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8167},"children":[],"decl_id":{"krate":2,"index":8168},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126365,"byte_end":126370,"line_start":859,"line_end":859,"column_start":8,"column_end":13},"name":"clone","qualname":"<Values as std::clone::Clone>::clone","value":"fn clone(&Self) -> Values","parent":{"krate":2,"index":2790},"children":[],"decl_id":{"krate":2,"index":2791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126560,"byte_end":126564,"line_start":869,"line_end":869,"column_start":8,"column_end":12},"name":"next","qualname":"<Range as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<(&'a K, &'a V)>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":127798,"byte_end":127807,"line_start":911,"line_end":911,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Range as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<(&'a K, &'a V)>","parent":{"krate":2,"index":8142},"children":[],"decl_id":{"krate":2,"index":8143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":129029,"byte_end":129034,"line_start":953,"line_end":953,"column_start":8,"column_end":13},"name":"clone","qualname":"<Range as std::clone::Clone>::clone","value":"fn clone(&Self) -> Range","parent":{"krate":2,"index":2790},"children":[],"decl_id":{"krate":2,"index":2791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":129250,"byte_end":129254,"line_start":964,"line_end":964,"column_start":8,"column_end":12},"name":"next","qualname":"<RangeMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<(&'a K, &'a mut V)>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":130559,"byte_end":130568,"line_start":1006,"line_end":1006,"column_start":8,"column_end":17},"name":"next_back","qualname":"<RangeMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<(&'a K, &'a mut V)>","parent":{"krate":2,"index":8142},"children":[],"decl_id":{"krate":2,"index":8143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":131872,"byte_end":131881,"line_start":1048,"line_end":1048,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<BTreeMap<K, V> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> BTreeMap<K, V> where T: IntoIterator<Item = (K, V)>","parent":{"krate":2,"index":8094},"children":[],"decl_id":{"krate":2,"index":8096},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132100,"byte_end":132106,"line_start":1057,"line_end":1057,"column_start":8,"column_end":14},"name":"extend","qualname":"<BTreeMap<K, V> as std::iter::Extend>::extend","value":"fn extend<T>(&mut Self, T) where T: IntoIterator<Item = (K, V)>","parent":{"krate":2,"index":8107},"children":[],"decl_id":{"krate":2,"index":8109},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132083,"byte_end":132092,"line_start":1056,"line_end":1056,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132322,"byte_end":132328,"line_start":1065,"line_end":1065,"column_start":8,"column_end":14},"name":"extend","qualname":"<BTreeMap<K, V> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = (&'a K, &'a V)>","parent":{"krate":2,"index":8107},"children":[],"decl_id":{"krate":2,"index":8109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132528,"byte_end":132532,"line_start":1071,"line_end":1071,"column_start":8,"column_end":12},"name":"hash","qualname":"<BTreeMap<K, V> as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10222},"children":[],"decl_id":{"krate":2,"index":10223},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132694,"byte_end":132701,"line_start":1079,"line_end":1079,"column_start":8,"column_end":15},"name":"default","qualname":"<BTreeMap<K, V> as std::default::Default>::default","value":"fn default() -> BTreeMap<K, V>","parent":{"krate":2,"index":3146},"children":[],"decl_id":{"krate":2,"index":3147},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132828,"byte_end":132830,"line_start":1085,"line_end":1085,"column_start":8,"column_end":10},"name":"eq","qualname":"<BTreeMap<K, V> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &BTreeMap<K, V>) -> bool","parent":{"krate":2,"index":2820},"children":[],"decl_id":{"krate":2,"index":2822},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133107,"byte_end":133118,"line_start":1095,"line_end":1095,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<BTreeMap<K, V> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &BTreeMap<K, V>) -> Option<Ordering>","parent":{"krate":2,"index":2866},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133090,"byte_end":133099,"line_start":1094,"line_end":1094,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133294,"byte_end":133297,"line_start":1102,"line_end":1102,"column_start":8,"column_end":11},"name":"cmp","qualname":"<BTreeMap<K, V> as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &BTreeMap<K, V>) -> Ordering","parent":{"krate":2,"index":2856},"children":[],"decl_id":{"krate":2,"index":2857},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133277,"byte_end":133286,"line_start":1101,"line_end":1101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133449,"byte_end":133452,"line_start":1108,"line_end":1108,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BTreeMap<K, V> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10009},"children":[],"decl_id":{"krate":2,"index":10010},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133701,"byte_end":133706,"line_start":1119,"line_end":1119,"column_start":8,"column_end":13},"name":"index","qualname":"<BTreeMap<K, V> as std::ops::Index>::index","value":"fn index(&Self, &Q) -> &V","parent":{"krate":2,"index":3472},"children":[],"decl_id":{"krate":2,"index":3475},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133684,"byte_end":133693,"line_start":1118,"line_end":1118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135535,"byte_end":135539,"line_start":1185,"line_end":1185,"column_start":12,"column_end":16},"name":"iter","qualname":"<BTreeMap<K, V>>::iter","value":"fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the entries of the map, sorted by key.","sig":null,"attributes":[{"value":"/ Gets an iterator over the entries of the map, sorted by key.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":134989,"byte_end":135053,"line_start":1166,"line_end":1166,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135058,"byte_end":135061,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135066,"byte_end":135080,"line_start":1168,"line_end":1168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135085,"byte_end":135088,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135093,"byte_end":135104,"line_start":1170,"line_end":1170,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135109,"byte_end":135144,"line_start":1171,"line_end":1171,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135149,"byte_end":135152,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ let mut map = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135157,"byte_end":135191,"line_start":1173,"line_end":1173,"column_start":5,"column_end":39}},{"value":"/ map.insert(3, \"c\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135196,"byte_end":135219,"line_start":1174,"line_end":1174,"column_start":5,"column_end":28}},{"value":"/ map.insert(2, \"b\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135224,"byte_end":135247,"line_start":1175,"line_end":1175,"column_start":5,"column_end":28}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135252,"byte_end":135275,"line_start":1176,"line_end":1176,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135280,"byte_end":135283,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ for (key, value) in map.iter() {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135288,"byte_end":135324,"line_start":1178,"line_end":1178,"column_start":5,"column_end":41}},{"value":"/     println!(\"{}: {}\", key, value);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135329,"byte_end":135368,"line_start":1179,"line_end":1179,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135373,"byte_end":135378,"line_start":1180,"line_end":1180,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135383,"byte_end":135386,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ let (first_key, first_value) = map.iter().next().unwrap();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135391,"byte_end":135453,"line_start":1182,"line_end":1182,"column_start":5,"column_end":67}},{"value":"/ assert_eq!((*first_key, *first_value), (1, \"a\"));","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135458,"byte_end":135511,"line_start":1183,"line_end":1183,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135516,"byte_end":135523,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136295,"byte_end":136303,"line_start":1214,"line_end":1214,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<BTreeMap<K, V>>::iter_mut","value":"fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable iterator over the entries of the map, sorted by key.","sig":null,"attributes":[{"value":"/ Gets a mutable iterator over the entries of the map, sorted by key.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135790,"byte_end":135861,"line_start":1195,"line_end":1195,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135866,"byte_end":135869,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135874,"byte_end":135888,"line_start":1197,"line_end":1197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135893,"byte_end":135896,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135901,"byte_end":135912,"line_start":1199,"line_end":1199,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135917,"byte_end":135952,"line_start":1200,"line_end":1200,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135957,"byte_end":135960,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ let mut map = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":135965,"byte_end":135999,"line_start":1202,"line_end":1202,"column_start":5,"column_end":39}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136004,"byte_end":136027,"line_start":1203,"line_end":1203,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136032,"byte_end":136055,"line_start":1204,"line_end":1204,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136060,"byte_end":136083,"line_start":1205,"line_end":1205,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136088,"byte_end":136091,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ // add 10 to the value if the key isn't \"a\"","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136096,"byte_end":136143,"line_start":1207,"line_end":1207,"column_start":5,"column_end":52}},{"value":"/ for (key, value) in map.iter_mut() {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136148,"byte_end":136188,"line_start":1208,"line_end":1208,"column_start":5,"column_end":45}},{"value":"/     if key != &\"a\" {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136193,"byte_end":136217,"line_start":1209,"line_end":1209,"column_start":5,"column_end":29}},{"value":"/         *value += 10;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136222,"byte_end":136247,"line_start":1210,"line_end":1210,"column_start":5,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136252,"byte_end":136261,"line_start":1211,"line_end":1211,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136266,"byte_end":136271,"line_start":1212,"line_end":1212,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136276,"byte_end":136283,"line_start":1213,"line_end":1213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137043,"byte_end":137047,"line_start":1241,"line_end":1241,"column_start":12,"column_end":16},"name":"keys","qualname":"<BTreeMap<K, V>>::keys","value":"fn keys<'a>(&'a Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys of the map, in sorted order.","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys of the map, in sorted order.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136670,"byte_end":136733,"line_start":1227,"line_end":1227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136738,"byte_end":136741,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136746,"byte_end":136760,"line_start":1229,"line_end":1229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136765,"byte_end":136768,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136773,"byte_end":136784,"line_start":1231,"line_end":1231,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136789,"byte_end":136824,"line_start":1232,"line_end":1232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136829,"byte_end":136832,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ let mut a = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136837,"byte_end":136869,"line_start":1234,"line_end":1234,"column_start":5,"column_end":37}},{"value":"/ a.insert(2, \"b\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136874,"byte_end":136895,"line_start":1235,"line_end":1235,"column_start":5,"column_end":26}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136900,"byte_end":136921,"line_start":1236,"line_end":1236,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136926,"byte_end":136929,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ let keys: Vec<_> = a.keys().cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136934,"byte_end":136985,"line_start":1238,"line_end":1238,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(keys, [1, 2]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":136990,"byte_end":137019,"line_start":1239,"line_end":1239,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137024,"byte_end":137031,"line_start":1240,"line_end":1240,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137537,"byte_end":137543,"line_start":1259,"line_end":1259,"column_start":12,"column_end":18},"name":"values","qualname":"<BTreeMap<K, V>>::values","value":"fn values<'a>(&'a Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the values of the map, in order by key.","sig":null,"attributes":[{"value":"/ Gets an iterator over the values of the map, in order by key.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137129,"byte_end":137194,"line_start":1245,"line_end":1245,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137199,"byte_end":137202,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137207,"byte_end":137221,"line_start":1247,"line_end":1247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137226,"byte_end":137229,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137234,"byte_end":137245,"line_start":1249,"line_end":1249,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137250,"byte_end":137285,"line_start":1250,"line_end":1250,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137290,"byte_end":137293,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ let mut a = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137298,"byte_end":137330,"line_start":1252,"line_end":1252,"column_start":5,"column_end":37}},{"value":"/ a.insert(1, \"hello\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137335,"byte_end":137360,"line_start":1253,"line_end":1253,"column_start":5,"column_end":30}},{"value":"/ a.insert(2, \"goodbye\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137365,"byte_end":137392,"line_start":1254,"line_end":1254,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137397,"byte_end":137400,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ let values: Vec<&str> = a.values().cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137405,"byte_end":137463,"line_start":1256,"line_end":1256,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(values, [\"hello\", \"goodbye\"]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137468,"byte_end":137513,"line_start":1257,"line_end":1257,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137518,"byte_end":137525,"line_start":1258,"line_end":1258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137925,"byte_end":137928,"line_start":1275,"line_end":1275,"column_start":12,"column_end":15},"name":"len","qualname":"<BTreeMap<K, V>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137629,"byte_end":137675,"line_start":1263,"line_end":1263,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137680,"byte_end":137683,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137688,"byte_end":137702,"line_start":1265,"line_end":1265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137707,"byte_end":137710,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137715,"byte_end":137726,"line_start":1267,"line_end":1267,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137731,"byte_end":137766,"line_start":1268,"line_end":1268,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137771,"byte_end":137774,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ let mut a = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137779,"byte_end":137811,"line_start":1270,"line_end":1270,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137816,"byte_end":137843,"line_start":1271,"line_end":1271,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137848,"byte_end":137869,"line_start":1272,"line_end":1272,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137874,"byte_end":137901,"line_start":1273,"line_end":1273,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137906,"byte_end":137913,"line_start":1274,"line_end":1274,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138276,"byte_end":138284,"line_start":1291,"line_end":1291,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BTreeMap<K, V>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":137978,"byte_end":138027,"line_start":1279,"line_end":1279,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138032,"byte_end":138035,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138040,"byte_end":138054,"line_start":1281,"line_end":1281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138059,"byte_end":138062,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138067,"byte_end":138078,"line_start":1283,"line_end":1283,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138083,"byte_end":138118,"line_start":1284,"line_end":1284,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138123,"byte_end":138126,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ let mut a = BTreeMap::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138131,"byte_end":138163,"line_start":1286,"line_end":1286,"column_start":5,"column_end":37}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138168,"byte_end":138194,"line_start":1287,"line_end":1287,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138199,"byte_end":138220,"line_start":1288,"line_end":1288,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138225,"byte_end":138252,"line_start":1289,"line_end":1289,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138257,"byte_end":138264,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138526,"byte_end":138535,"line_start":1299,"line_end":1299,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138377,"byte_end":138459,"line_start":1297,"line_end":1297,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138464,"byte_end":138514,"line_start":1298,"line_end":1298,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138884,"byte_end":138898,"line_start":1308,"line_end":1308,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138712,"byte_end":138805,"line_start":1306,"line_end":1306,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138810,"byte_end":138872,"line_start":1307,"line_end":1307,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":139259,"byte_end":139265,"line_start":1319,"line_end":1319,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":139141,"byte_end":139200,"line_start":1317,"line_end":1317,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":139205,"byte_end":139247,"line_start":1318,"line_end":1318,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":140594,"byte_end":140597,"line_start":1361,"line_end":1361,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":140535,"byte_end":140582,"line_start":1360,"line_end":1360,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":140734,"byte_end":140741,"line_start":1366,"line_end":1366,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":140667,"byte_end":140722,"line_start":1365,"line_end":1365,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":140880,"byte_end":140888,"line_start":1371,"line_end":1371,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to its value.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to its value.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":140807,"byte_end":140868,"line_start":1370,"line_end":1370,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":141073,"byte_end":141079,"line_start":1377,"line_end":1377,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the OccupiedEntry's key,\n and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the OccupiedEntry's key,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":140957,"byte_end":141018,"line_start":1375,"line_end":1375,"column_start":5,"column_end":66}},{"value":"/ and returns the entry's old value.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":141023,"byte_end":141061,"line_start":1376,"line_end":1376,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":141239,"byte_end":141245,"line_start":1382,"line_end":1382,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the entry out of the map, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value of the entry out of the map, and returns it.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":141163,"byte_end":141227,"line_start":1381,"line_end":1381,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1785},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146613,"byte_end":146621,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"BTreeSet","qualname":"::support::bst::set::BTreeSet","value":"BTreeSet {  }","parent":null,"children":[{"krate":0,"index":1787}],"decl_id":null,"docs":" A set based on a B-Tree.","sig":null,"attributes":[{"value":"/ A set based on a B-Tree.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":145908,"byte_end":145936,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":145937,"byte_end":145940,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ See [`BTreeMap`]'s documentation for a detailed discussion of this collection's performance","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":145941,"byte_end":146036,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/ benefits and drawbacks.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146037,"byte_end":146064,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146065,"byte_end":146068,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for an item to be modified in such a way that the item's ordering relative","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146069,"byte_end":146167,"line_start":33,"line_end":33,"column_start":1,"column_end":99}},{"value":"/ to any other item, as determined by the [`Ord`] trait, changes while it is in the set. This is","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146168,"byte_end":146266,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/ normally only possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146267,"byte_end":146359,"line_start":35,"line_end":35,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146360,"byte_end":146363,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`BTreeMap`]: ../struct.BTreeMap.html","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146364,"byte_end":146405,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/ [`Ord`]: ../../core/cmp/trait.Ord.html","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146406,"byte_end":146448,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/ [`Cell`]: ../../std/cell/struct.Cell.html","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146449,"byte_end":146494,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/ [`RefCell`]: ../../std/cell/struct.RefCell.html","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146495,"byte_end":146546,"line_start":40,"line_end":40,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146708,"byte_end":146712,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"Iter","qualname":"::support::bst::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1125}],"decl_id":null,"docs":" An iterator over a BTreeSet's items.\n","sig":null,"attributes":[{"value":"/ An iterator over a BTreeSet's items.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146656,"byte_end":146696,"line_start":46,"line_end":46,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146815,"byte_end":146823,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::support::bst::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1128}],"decl_id":null,"docs":" An owning iterator over a BTreeSet's items.\n","sig":null,"attributes":[{"value":"/ An owning iterator over a BTreeSet's items.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146756,"byte_end":146803,"line_start":51,"line_end":51,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146936,"byte_end":146941,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"Range","qualname":"::support::bst::set::Range","value":"Range {  }","parent":null,"children":[{"krate":0,"index":1132}],"decl_id":null,"docs":" An iterator over a sub-range of BTreeSet's items.\n","sig":null,"attributes":[{"value":"/ An iterator over a sub-range of BTreeSet's items.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146871,"byte_end":146924,"line_start":56,"line_end":56,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147082,"byte_end":147092,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"Difference","qualname":"::support::bst::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137}],"decl_id":null,"docs":" A lazy iterator producing elements in the set difference (in-order).\n","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the set difference (in-order).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":146998,"byte_end":147070,"line_start":61,"line_end":61,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147263,"byte_end":147282,"line_start":68,"line_end":68,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::support::bst::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142}],"decl_id":null,"docs":" A lazy iterator producing elements in the set symmetric difference (in-order).\n","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the set symmetric difference (in-order).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147169,"byte_end":147251,"line_start":67,"line_end":67,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147445,"byte_end":147457,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::support::bst::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1147}],"decl_id":null,"docs":" A lazy iterator producing elements in the set intersection (in-order).\n","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the set intersection (in-order).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147359,"byte_end":147433,"line_start":73,"line_end":73,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147613,"byte_end":147618,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"Union","qualname":"::support::bst::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152}],"decl_id":null,"docs":" A lazy iterator producing elements in the set union (in-order).\n","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the set union (in-order).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147534,"byte_end":147601,"line_start":79,"line_end":79,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147990,"byte_end":147993,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<BTreeSet<T>>::new","value":"fn new() -> BTreeSet<T>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new BTreeSet with a reasonable choice of B.","sig":null,"attributes":[{"value":"/ Makes a new BTreeSet with a reasonable choice of B.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147726,"byte_end":147781,"line_start":86,"line_end":86,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147786,"byte_end":147789,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147794,"byte_end":147808,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147813,"byte_end":147816,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147821,"byte_end":147832,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147837,"byte_end":147864,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147869,"byte_end":147904,"line_start":92,"line_end":92,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147909,"byte_end":147912,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let mut set: BTreeSet<i32> = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147917,"byte_end":147966,"line_start":94,"line_end":94,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147971,"byte_end":147978,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148517,"byte_end":148521,"line_start":118,"line_end":118,"column_start":12,"column_end":16},"name":"iter","qualname":"<BTreeSet<T>>::iter","value":"fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the BTreeSet's contents.","sig":null,"attributes":[{"value":"/ Gets an iterator over the BTreeSet's contents.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148090,"byte_end":148140,"line_start":102,"line_end":102,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148145,"byte_end":148148,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148153,"byte_end":148167,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148172,"byte_end":148175,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148180,"byte_end":148191,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148196,"byte_end":148231,"line_start":107,"line_end":107,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148236,"byte_end":148239,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let set: BTreeSet<usize> = [1, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148244,"byte_end":148314,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148319,"byte_end":148322,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ for x in set.iter() {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148327,"byte_end":148352,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148357,"byte_end":148383,"line_start":112,"line_end":112,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148388,"byte_end":148393,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148398,"byte_end":148401,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = set.iter().cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148406,"byte_end":148456,"line_start":115,"line_end":115,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(v, [1, 2, 3, 4]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148461,"byte_end":148493,"line_start":116,"line_end":116,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148498,"byte_end":148505,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149501,"byte_end":149506,"line_start":146,"line_end":146,"column_start":12,"column_end":17},"name":"range","qualname":"<BTreeSet<T>>::range","value":"fn range<'a, Min, Max>(&'a Self, Bound<&Min>, Bound<&Max>) -> Range where\nMin: ?Sized + Ord, Max: ?Sized + Ord, T: Borrow<Min> + Borrow<Max>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a double-ended iterator over a sub-range of elements in the set, starting\n at min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\n infinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\n Thus range(Unbounded, Unbounded) will yield the whole collection.","sig":null,"attributes":[{"value":"/ Constructs a double-ended iterator over a sub-range of elements in the set, starting","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148621,"byte_end":148709,"line_start":124,"line_end":124,"column_start":5,"column_end":93}},{"value":"/ at min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148714,"byte_end":148804,"line_start":125,"line_end":125,"column_start":5,"column_end":95}},{"value":"/ infinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148809,"byte_end":148898,"line_start":126,"line_end":126,"column_start":5,"column_end":94}},{"value":"/ Thus range(Unbounded, Unbounded) will yield the whole collection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148903,"byte_end":148972,"line_start":127,"line_end":127,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148977,"byte_end":148980,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148985,"byte_end":148999,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149004,"byte_end":149007,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149012,"byte_end":149023,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ #![feature(btree_range, collections_bound)]","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149028,"byte_end":149075,"line_start":132,"line_end":132,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149080,"byte_end":149083,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149088,"byte_end":149123,"line_start":134,"line_end":134,"column_start":5,"column_end":40}},{"value":"/ use std::collections::Bound::{Included, Unbounded};","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149128,"byte_end":149183,"line_start":135,"line_end":135,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149188,"byte_end":149191,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let mut set = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149196,"byte_end":149230,"line_start":137,"line_end":137,"column_start":5,"column_end":39}},{"value":"/ set.insert(3);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149235,"byte_end":149253,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ set.insert(5);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149258,"byte_end":149276,"line_start":139,"line_end":139,"column_start":5,"column_end":23}},{"value":"/ set.insert(8);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149281,"byte_end":149299,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ for &elem in set.range(Included(&4), Included(&8)) {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149304,"byte_end":149360,"line_start":141,"line_end":141,"column_start":5,"column_end":61}},{"value":"/     println!(\"{}\", elem);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149365,"byte_end":149394,"line_start":142,"line_end":142,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149399,"byte_end":149404,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(Some(&5), set.range(Included(&4), Unbounded).next());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149409,"byte_end":149477,"line_start":144,"line_end":144,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149482,"byte_end":149489,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150388,"byte_end":150398,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"difference","qualname":"<BTreeSet<T>>::difference","value":"fn difference<'a>(&'a Self, &'a BTreeSet<T>) -> Difference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference, in ascending order.","sig":null,"attributes":[{"value":"/ Visits the values representing the difference, in ascending order.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149926,"byte_end":149996,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150001,"byte_end":150004,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150009,"byte_end":150023,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150028,"byte_end":150031,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150036,"byte_end":150047,"line_start":161,"line_end":161,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150052,"byte_end":150087,"line_start":162,"line_end":162,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150092,"byte_end":150095,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let mut a = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150100,"byte_end":150132,"line_start":164,"line_end":164,"column_start":5,"column_end":37}},{"value":"/ a.insert(1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150137,"byte_end":150153,"line_start":165,"line_end":165,"column_start":5,"column_end":21}},{"value":"/ a.insert(2);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150158,"byte_end":150174,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150179,"byte_end":150182,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let mut b = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150187,"byte_end":150219,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/ b.insert(2);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150224,"byte_end":150240,"line_start":169,"line_end":169,"column_start":5,"column_end":21}},{"value":"/ b.insert(3);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150245,"byte_end":150261,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150266,"byte_end":150269,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let diff: Vec<_> = a.difference(&b).cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150274,"byte_end":150333,"line_start":172,"line_end":172,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(diff, [1]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150338,"byte_end":150364,"line_start":173,"line_end":173,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150369,"byte_end":150376,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151074,"byte_end":151094,"line_start":200,"line_end":200,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<BTreeSet<T>>::symmetric_difference","value":"fn symmetric_difference<'a>(&'a Self, &'a BTreeSet<T>) -> SymmetricDifference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference, in ascending order.","sig":null,"attributes":[{"value":"/ Visits the values representing the symmetric difference, in ascending order.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150581,"byte_end":150661,"line_start":182,"line_end":182,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150666,"byte_end":150669,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150674,"byte_end":150688,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150693,"byte_end":150696,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150701,"byte_end":150712,"line_start":186,"line_end":186,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150717,"byte_end":150752,"line_start":187,"line_end":187,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150757,"byte_end":150760,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let mut a = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150765,"byte_end":150797,"line_start":189,"line_end":189,"column_start":5,"column_end":37}},{"value":"/ a.insert(1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150802,"byte_end":150818,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/ a.insert(2);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150823,"byte_end":150839,"line_start":191,"line_end":191,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150844,"byte_end":150847,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let mut b = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150852,"byte_end":150884,"line_start":193,"line_end":193,"column_start":5,"column_end":37}},{"value":"/ b.insert(2);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150889,"byte_end":150905,"line_start":194,"line_end":194,"column_start":5,"column_end":21}},{"value":"/ b.insert(3);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150910,"byte_end":150926,"line_start":195,"line_end":195,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150931,"byte_end":150934,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let sym_diff: Vec<_> = a.symmetric_difference(&b).cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":150939,"byte_end":151012,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(sym_diff, [1, 3]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151017,"byte_end":151050,"line_start":198,"line_end":198,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151055,"byte_end":151062,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151849,"byte_end":151861,"line_start":227,"line_end":227,"column_start":12,"column_end":24},"name":"intersection","qualname":"<BTreeSet<T>>::intersection","value":"fn intersection<'a>(&'a Self, &'a BTreeSet<T>) -> Intersection","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection, in ascending order.","sig":null,"attributes":[{"value":"/ Visits the values representing the intersection, in ascending order.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151367,"byte_end":151439,"line_start":209,"line_end":209,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151444,"byte_end":151447,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151452,"byte_end":151466,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151471,"byte_end":151474,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151479,"byte_end":151490,"line_start":213,"line_end":213,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151495,"byte_end":151530,"line_start":214,"line_end":214,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151535,"byte_end":151538,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let mut a = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151543,"byte_end":151575,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/ a.insert(1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151580,"byte_end":151596,"line_start":217,"line_end":217,"column_start":5,"column_end":21}},{"value":"/ a.insert(2);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151601,"byte_end":151617,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151622,"byte_end":151625,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut b = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151630,"byte_end":151662,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ b.insert(2);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151667,"byte_end":151683,"line_start":221,"line_end":221,"column_start":5,"column_end":21}},{"value":"/ b.insert(3);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151688,"byte_end":151704,"line_start":222,"line_end":222,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151709,"byte_end":151712,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ let intersection: Vec<_> = a.intersection(&b).cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151717,"byte_end":151786,"line_start":224,"line_end":224,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(intersection, [2]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151791,"byte_end":151825,"line_start":225,"line_end":225,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":151830,"byte_end":151837,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152463,"byte_end":152468,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"union","qualname":"<BTreeSet<T>>::union","value":"fn union<'a>(&'a Self, &'a BTreeSet<T>) -> Union","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union, in ascending order.","sig":null,"attributes":[{"value":"/ Visits the values representing the union, in ascending order.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152048,"byte_end":152113,"line_start":234,"line_end":234,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152118,"byte_end":152121,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152126,"byte_end":152140,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152145,"byte_end":152148,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152153,"byte_end":152164,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152169,"byte_end":152204,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152209,"byte_end":152212,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let mut a = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152217,"byte_end":152249,"line_start":241,"line_end":241,"column_start":5,"column_end":37}},{"value":"/ a.insert(1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152254,"byte_end":152270,"line_start":242,"line_end":242,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152275,"byte_end":152278,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let mut b = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152283,"byte_end":152315,"line_start":244,"line_end":244,"column_start":5,"column_end":37}},{"value":"/ b.insert(2);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152320,"byte_end":152336,"line_start":245,"line_end":245,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152341,"byte_end":152344,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let union: Vec<_> = a.union(&b).cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152349,"byte_end":152404,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(union, [1, 2]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152409,"byte_end":152439,"line_start":248,"line_end":248,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152444,"byte_end":152451,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152932,"byte_end":152935,"line_start":269,"line_end":269,"column_start":12,"column_end":15},"name":"len","qualname":"<BTreeSet<T>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the set.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152641,"byte_end":152687,"line_start":257,"line_end":257,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152692,"byte_end":152695,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152700,"byte_end":152714,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152719,"byte_end":152722,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152727,"byte_end":152738,"line_start":261,"line_end":261,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152743,"byte_end":152778,"line_start":262,"line_end":262,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152783,"byte_end":152786,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let mut v = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152791,"byte_end":152823,"line_start":264,"line_end":264,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(v.len(), 0);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152828,"byte_end":152855,"line_start":265,"line_end":265,"column_start":5,"column_end":32}},{"value":"/ v.insert(1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152860,"byte_end":152876,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(v.len(), 1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152881,"byte_end":152908,"line_start":267,"line_end":267,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152913,"byte_end":152920,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153281,"byte_end":153289,"line_start":285,"line_end":285,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BTreeSet<T>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the set contains no elements.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":152988,"byte_end":153037,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153042,"byte_end":153045,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153050,"byte_end":153064,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153069,"byte_end":153072,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153077,"byte_end":153088,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153093,"byte_end":153128,"line_start":278,"line_end":278,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153133,"byte_end":153136,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let mut v = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153141,"byte_end":153173,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153178,"byte_end":153204,"line_start":281,"line_end":281,"column_start":5,"column_end":31}},{"value":"/ v.insert(1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153209,"byte_end":153225,"line_start":282,"line_end":282,"column_start":5,"column_end":21}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153230,"byte_end":153257,"line_start":283,"line_end":283,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153262,"byte_end":153269,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153613,"byte_end":153618,"line_start":301,"line_end":301,"column_start":12,"column_end":17},"name":"clear","qualname":"<BTreeSet<T>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"/ Clears the set, removing all values.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153342,"byte_end":153382,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153387,"byte_end":153390,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153395,"byte_end":153409,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153414,"byte_end":153417,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153422,"byte_end":153433,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153438,"byte_end":153473,"line_start":294,"line_end":294,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153478,"byte_end":153481,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let mut v = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153486,"byte_end":153518,"line_start":296,"line_end":296,"column_start":5,"column_end":37}},{"value":"/ v.insert(1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153523,"byte_end":153539,"line_start":297,"line_end":297,"column_start":5,"column_end":21}},{"value":"/ v.clear();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153544,"byte_end":153558,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153563,"byte_end":153589,"line_start":299,"line_end":299,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153594,"byte_end":153601,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154170,"byte_end":154178,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"contains","qualname":"<BTreeSet<T>>::contains","value":"fn contains<Q>(&Self, &Q) -> bool where Q: ?Sized, T: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153668,"byte_end":153715,"line_start":305,"line_end":305,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153720,"byte_end":153723,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153728,"byte_end":153791,"line_start":307,"line_end":307,"column_start":5,"column_end":68}},{"value":"/ but the ordering on the borrowed form *must* match the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153796,"byte_end":153854,"line_start":308,"line_end":308,"column_start":5,"column_end":63}},{"value":"/ ordering on the value type.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153859,"byte_end":153890,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153895,"byte_end":153898,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153903,"byte_end":153917,"line_start":311,"line_end":311,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153922,"byte_end":153925,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153930,"byte_end":153941,"line_start":313,"line_end":313,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153946,"byte_end":153981,"line_start":314,"line_end":314,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153986,"byte_end":153989,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let set: BTreeSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":153994,"byte_end":154057,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(set.contains(&1), true);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154062,"byte_end":154101,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.contains(&4), false);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154106,"byte_end":154146,"line_start":318,"line_end":318,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154151,"byte_end":154158,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154596,"byte_end":154599,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"get","qualname":"<BTreeSet<T>>::get","value":"fn get<Q>(&Self, &Q) -> Option<&T> where Q: ?Sized, T: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value in the set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"/ Returns a reference to the value in the set, if any, that is equal to the given value.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154319,"byte_end":154409,"line_start":327,"line_end":327,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154414,"byte_end":154417,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154422,"byte_end":154485,"line_start":329,"line_end":329,"column_start":5,"column_end":68}},{"value":"/ but the ordering on the borrowed form *must* match the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154490,"byte_end":154548,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/ ordering on the value type.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154553,"byte_end":154584,"line_start":331,"line_end":331,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155295,"byte_end":155306,"line_start":356,"line_end":356,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<BTreeSet<T>>::is_disjoint","value":"fn is_disjoint(&Self, &BTreeSet<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.","sig":null,"attributes":[{"value":"/ Returns `true` if the set has no elements in common with `other`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154748,"byte_end":154817,"line_start":339,"line_end":339,"column_start":5,"column_end":74}},{"value":"/ This is equivalent to checking for an empty intersection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154822,"byte_end":154883,"line_start":340,"line_end":340,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154888,"byte_end":154891,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154896,"byte_end":154910,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154915,"byte_end":154918,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154923,"byte_end":154934,"line_start":344,"line_end":344,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154939,"byte_end":154974,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154979,"byte_end":154982,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let a: BTreeSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":154987,"byte_end":155048,"line_start":347,"line_end":347,"column_start":5,"column_end":66}},{"value":"/ let mut b = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155053,"byte_end":155085,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155090,"byte_end":155093,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155098,"byte_end":155138,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/ b.insert(4);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155143,"byte_end":155159,"line_start":351,"line_end":351,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155164,"byte_end":155204,"line_start":352,"line_end":352,"column_start":5,"column_end":45}},{"value":"/ b.insert(1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155209,"byte_end":155225,"line_start":353,"line_end":353,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), false);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155230,"byte_end":155271,"line_start":354,"line_end":354,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155276,"byte_end":155283,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155885,"byte_end":155894,"line_start":376,"line_end":376,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<BTreeSet<T>>::is_subset","value":"fn is_subset(&Self, &BTreeSet<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155406,"byte_end":155459,"line_start":360,"line_end":360,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155464,"byte_end":155467,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155472,"byte_end":155486,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155491,"byte_end":155494,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155499,"byte_end":155510,"line_start":364,"line_end":364,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155515,"byte_end":155550,"line_start":365,"line_end":365,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155555,"byte_end":155558,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let sup: BTreeSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155563,"byte_end":155626,"line_start":367,"line_end":367,"column_start":5,"column_end":68}},{"value":"/ let mut set = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155631,"byte_end":155665,"line_start":368,"line_end":368,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155670,"byte_end":155673,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155678,"byte_end":155720,"line_start":370,"line_end":370,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155725,"byte_end":155743,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155748,"byte_end":155790,"line_start":372,"line_end":372,"column_start":5,"column_end":47}},{"value":"/ set.insert(4);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155795,"byte_end":155813,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), false);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155818,"byte_end":155861,"line_start":374,"line_end":374,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":155866,"byte_end":155873,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156998,"byte_end":157009,"line_start":420,"line_end":420,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<BTreeSet<T>>::is_superset","value":"fn is_superset(&Self, &BTreeSet<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156474,"byte_end":156529,"line_start":401,"line_end":401,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156534,"byte_end":156537,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156542,"byte_end":156556,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156561,"byte_end":156564,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156569,"byte_end":156580,"line_start":405,"line_end":405,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156585,"byte_end":156620,"line_start":406,"line_end":406,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156625,"byte_end":156628,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let sub: BTreeSet<_> = [1, 2].iter().cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156633,"byte_end":156693,"line_start":408,"line_end":408,"column_start":5,"column_end":65}},{"value":"/ let mut set = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156698,"byte_end":156732,"line_start":409,"line_end":409,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156737,"byte_end":156740,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156745,"byte_end":156790,"line_start":411,"line_end":411,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156795,"byte_end":156798,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ set.insert(0);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156803,"byte_end":156821,"line_start":413,"line_end":413,"column_start":5,"column_end":23}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156826,"byte_end":156844,"line_start":414,"line_end":414,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156849,"byte_end":156894,"line_start":415,"line_end":415,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156899,"byte_end":156902,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156907,"byte_end":156925,"line_start":417,"line_end":417,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), true);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156930,"byte_end":156974,"line_start":418,"line_end":418,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":156979,"byte_end":156986,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157722,"byte_end":157728,"line_start":444,"line_end":444,"column_start":12,"column_end":18},"name":"insert","qualname":"<BTreeSet<T>>::insert","value":"fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"/ Adds a value to the set.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157089,"byte_end":157117,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157122,"byte_end":157125,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ If the set did not have a value present, `true` is returned.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157130,"byte_end":157194,"line_start":426,"line_end":426,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157199,"byte_end":157202,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ If the set did have this key present, `false` is returned, and the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157207,"byte_end":157277,"line_start":428,"line_end":428,"column_start":5,"column_end":75}},{"value":"/ entry is not updated. See the [module-level documentation] for more.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157282,"byte_end":157354,"line_start":429,"line_end":429,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157359,"byte_end":157362,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [module-level documentation]: index.html#insert-and-complex-keys","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157367,"byte_end":157435,"line_start":431,"line_end":431,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157440,"byte_end":157443,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157448,"byte_end":157462,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157467,"byte_end":157470,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157475,"byte_end":157486,"line_start":435,"line_end":435,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157491,"byte_end":157526,"line_start":436,"line_end":436,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157531,"byte_end":157534,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let mut set = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157539,"byte_end":157573,"line_start":438,"line_end":438,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157578,"byte_end":157581,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.insert(2), true);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157586,"byte_end":157622,"line_start":440,"line_end":440,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(set.insert(2), false);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157627,"byte_end":157664,"line_start":441,"line_end":441,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157669,"byte_end":157698,"line_start":442,"line_end":442,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157703,"byte_end":157710,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157962,"byte_end":157969,"line_start":450,"line_end":450,"column_start":12,"column_end":19},"name":"replace","qualname":"<BTreeSet<T>>::replace","value":"fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is equal to the given\n one. Returns the replaced value.\n","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is equal to the given","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157816,"byte_end":157909,"line_start":448,"line_end":448,"column_start":5,"column_end":98}},{"value":"/ one. Returns the replaced value.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":157914,"byte_end":157950,"line_start":449,"line_end":449,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158610,"byte_end":158616,"line_start":472,"line_end":472,"column_start":12,"column_end":18},"name":"remove","qualname":"<BTreeSet<T>>::remove","value":"fn remove<Q>(&mut Self, &Q) -> bool where Q: ?Sized, T: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns `true` if the value was\n present in the set.","sig":null,"attributes":[{"value":"/ Removes a value from the set. Returns `true` if the value was","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158064,"byte_end":158129,"line_start":454,"line_end":454,"column_start":5,"column_end":70}},{"value":"/ present in the set.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158134,"byte_end":158157,"line_start":455,"line_end":455,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158162,"byte_end":158165,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158170,"byte_end":158233,"line_start":457,"line_end":457,"column_start":5,"column_end":68}},{"value":"/ but the ordering on the borrowed form *must* match the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158238,"byte_end":158296,"line_start":458,"line_end":458,"column_start":5,"column_end":63}},{"value":"/ ordering on the value type.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158301,"byte_end":158332,"line_start":459,"line_end":459,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158337,"byte_end":158340,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158345,"byte_end":158359,"line_start":461,"line_end":461,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158364,"byte_end":158367,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158372,"byte_end":158383,"line_start":463,"line_end":463,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158388,"byte_end":158423,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158428,"byte_end":158431,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ let mut set = BTreeSet::new();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158436,"byte_end":158470,"line_start":466,"line_end":466,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158475,"byte_end":158478,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158483,"byte_end":158501,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.remove(&2), true);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158506,"byte_end":158543,"line_start":469,"line_end":469,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.remove(&2), false);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158548,"byte_end":158586,"line_start":470,"line_end":470,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158591,"byte_end":158598,"line_start":471,"line_end":471,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159037,"byte_end":159041,"line_start":484,"line_end":484,"column_start":12,"column_end":16},"name":"take","qualname":"<BTreeSet<T>>::take","value":"fn take<Q>(&mut Self, &Q) -> Option<T> where Q: ?Sized, T: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the given one.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158765,"byte_end":158850,"line_start":479,"line_end":479,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158855,"byte_end":158858,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158863,"byte_end":158926,"line_start":481,"line_end":481,"column_start":5,"column_end":68}},{"value":"/ but the ordering on the borrowed form *must* match the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158931,"byte_end":158989,"line_start":482,"line_end":482,"column_start":5,"column_end":63}},{"value":"/ ordering on the value type.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":158994,"byte_end":159025,"line_start":483,"line_end":483,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159250,"byte_end":159259,"line_start":493,"line_end":493,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<BTreeSet<T> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> BTreeSet<T> where I: IntoIterator<Item = T>","parent":{"krate":2,"index":8094},"children":[],"decl_id":{"krate":2,"index":8096},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159845,"byte_end":159854,"line_start":516,"line_end":516,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<BTreeSet<T> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> IntoIter<T>","parent":{"krate":2,"index":8098},"children":[],"decl_id":{"krate":2,"index":8101},"docs":" Gets an iterator for moving out the BtreeSet's contents.","sig":null,"attributes":[{"value":"/ Gets an iterator for moving out the BtreeSet's contents.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159495,"byte_end":159555,"line_start":504,"line_end":504,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159560,"byte_end":159563,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159568,"byte_end":159582,"line_start":506,"line_end":506,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159587,"byte_end":159590,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159595,"byte_end":159606,"line_start":508,"line_end":508,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159611,"byte_end":159646,"line_start":509,"line_end":509,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159651,"byte_end":159654,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let set: BTreeSet<usize> = [1, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159659,"byte_end":159729,"line_start":511,"line_end":511,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159734,"byte_end":159737,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = set.into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159742,"byte_end":159788,"line_start":513,"line_end":513,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(v, [1, 2, 3, 4]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159793,"byte_end":159825,"line_start":514,"line_end":514,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159830,"byte_end":159837,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160046,"byte_end":160055,"line_start":525,"line_end":525,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a BTreeSet<T> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Iter","parent":{"krate":2,"index":8098},"children":[],"decl_id":{"krate":2,"index":8101},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160170,"byte_end":160176,"line_start":532,"line_end":532,"column_start":8,"column_end":14},"name":"extend","qualname":"<BTreeSet<T> as std::iter::Extend>::extend","value":"fn extend<Iter>(&mut Self, Iter) where Iter: IntoIterator<Item = T>","parent":{"krate":2,"index":8107},"children":[],"decl_id":{"krate":2,"index":8109},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160153,"byte_end":160162,"line_start":531,"line_end":531,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160377,"byte_end":160383,"line_start":540,"line_end":540,"column_start":8,"column_end":14},"name":"extend","qualname":"<BTreeSet<T> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = &'a T>","parent":{"krate":2,"index":8107},"children":[],"decl_id":{"krate":2,"index":8109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160540,"byte_end":160547,"line_start":546,"line_end":546,"column_start":8,"column_end":15},"name":"default","qualname":"<BTreeSet<T> as std::default::Default>::default","value":"fn default() -> BTreeSet<T>","parent":{"krate":2,"index":3146},"children":[],"decl_id":{"krate":2,"index":3147},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161170,"byte_end":161173,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"sub","qualname":"<&'a BTreeSet<T> as std::ops::Sub>::sub","value":"fn sub(Self, &BTreeSet<T>) -> BTreeSet<T>","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3244},"docs":" Returns the difference of `self` and `rhs` as a new `BTreeSet<T>`.","sig":null,"attributes":[{"value":"/ Returns the difference of `self` and `rhs` as a new `BTreeSet<T>`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160708,"byte_end":160778,"line_start":554,"line_end":554,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160783,"byte_end":160786,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160791,"byte_end":160805,"line_start":556,"line_end":556,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160810,"byte_end":160813,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160818,"byte_end":160829,"line_start":558,"line_end":558,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160834,"byte_end":160869,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160874,"byte_end":160877,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let a: BTreeSet<_> = vec![1, 2, 3].into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160882,"byte_end":160943,"line_start":561,"line_end":561,"column_start":5,"column_end":66}},{"value":"/ let b: BTreeSet<_> = vec![3, 4, 5].into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160948,"byte_end":161009,"line_start":562,"line_end":562,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161014,"byte_end":161017,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ let result = &a - &b;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161022,"byte_end":161047,"line_start":564,"line_end":564,"column_start":5,"column_end":30}},{"value":"/ let result_vec: Vec<_> = result.into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161052,"byte_end":161110,"line_start":565,"line_end":565,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(result_vec, [1, 2]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161115,"byte_end":161150,"line_start":566,"line_end":566,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161155,"byte_end":161162,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161856,"byte_end":161862,"line_start":590,"line_end":590,"column_start":8,"column_end":14},"name":"bitxor","qualname":"<&'a BTreeSet<T> as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, &BTreeSet<T>) -> BTreeSet<T>","parent":{"krate":2,"index":3305},"children":[],"decl_id":{"krate":2,"index":3308},"docs":" Returns the symmetric difference of `self` and `rhs` as a new `BTreeSet<T>`.","sig":null,"attributes":[{"value":"/ Returns the symmetric difference of `self` and `rhs` as a new `BTreeSet<T>`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161384,"byte_end":161464,"line_start":576,"line_end":576,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161469,"byte_end":161472,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161477,"byte_end":161491,"line_start":578,"line_end":578,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161496,"byte_end":161499,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161504,"byte_end":161515,"line_start":580,"line_end":580,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161520,"byte_end":161555,"line_start":581,"line_end":581,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161560,"byte_end":161563,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ let a: BTreeSet<_> = vec![1, 2, 3].into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161568,"byte_end":161629,"line_start":583,"line_end":583,"column_start":5,"column_end":66}},{"value":"/ let b: BTreeSet<_> = vec![2, 3, 4].into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161634,"byte_end":161695,"line_start":584,"line_end":584,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161700,"byte_end":161703,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ let result = &a ^ &b;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161708,"byte_end":161733,"line_start":586,"line_end":586,"column_start":5,"column_end":30}},{"value":"/ let result_vec: Vec<_> = result.into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161738,"byte_end":161796,"line_start":587,"line_end":587,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(result_vec, [1, 4]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161801,"byte_end":161836,"line_start":588,"line_end":588,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":161841,"byte_end":161848,"line_start":589,"line_end":589,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162547,"byte_end":162553,"line_start":612,"line_end":612,"column_start":8,"column_end":14},"name":"bitand","qualname":"<&'a BTreeSet<T> as std::ops::BitAnd>::bitand","value":"fn bitand(Self, &BTreeSet<T>) -> BTreeSet<T>","parent":{"krate":2,"index":3295},"children":[],"decl_id":{"krate":2,"index":3298},"docs":" Returns the intersection of `self` and `rhs` as a new `BTreeSet<T>`.","sig":null,"attributes":[{"value":"/ Returns the intersection of `self` and `rhs` as a new `BTreeSet<T>`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162083,"byte_end":162155,"line_start":598,"line_end":598,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162160,"byte_end":162163,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162168,"byte_end":162182,"line_start":600,"line_end":600,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162187,"byte_end":162190,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162195,"byte_end":162206,"line_start":602,"line_end":602,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162211,"byte_end":162246,"line_start":603,"line_end":603,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162251,"byte_end":162254,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let a: BTreeSet<_> = vec![1, 2, 3].into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162259,"byte_end":162320,"line_start":605,"line_end":605,"column_start":5,"column_end":66}},{"value":"/ let b: BTreeSet<_> = vec![2, 3, 4].into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162325,"byte_end":162386,"line_start":606,"line_end":606,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162391,"byte_end":162394,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ let result = &a & &b;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162399,"byte_end":162424,"line_start":608,"line_end":608,"column_start":5,"column_end":30}},{"value":"/ let result_vec: Vec<_> = result.into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162429,"byte_end":162487,"line_start":609,"line_end":609,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(result_vec, [2, 3]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162492,"byte_end":162527,"line_start":610,"line_end":610,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162532,"byte_end":162539,"line_start":611,"line_end":611,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163231,"byte_end":163236,"line_start":634,"line_end":634,"column_start":8,"column_end":13},"name":"bitor","qualname":"<&'a BTreeSet<T> as std::ops::BitOr>::bitor","value":"fn bitor(Self, &BTreeSet<T>) -> BTreeSet<T>","parent":{"krate":2,"index":3300},"children":[],"decl_id":{"krate":2,"index":3303},"docs":" Returns the union of `self` and `rhs` as a new `BTreeSet<T>`.","sig":null,"attributes":[{"value":"/ Returns the union of `self` and `rhs` as a new `BTreeSet<T>`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162765,"byte_end":162830,"line_start":620,"line_end":620,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162835,"byte_end":162838,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162843,"byte_end":162857,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162862,"byte_end":162865,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162870,"byte_end":162881,"line_start":624,"line_end":624,"column_start":5,"column_end":16}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162886,"byte_end":162921,"line_start":625,"line_end":625,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162926,"byte_end":162929,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ let a: BTreeSet<_> = vec![1, 2, 3].into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":162934,"byte_end":162995,"line_start":627,"line_end":627,"column_start":5,"column_end":66}},{"value":"/ let b: BTreeSet<_> = vec![3, 4, 5].into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163000,"byte_end":163061,"line_start":628,"line_end":628,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163066,"byte_end":163069,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let result = &a | &b;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163074,"byte_end":163099,"line_start":630,"line_end":630,"column_start":5,"column_end":30}},{"value":"/ let result_vec: Vec<_> = result.into_iter().collect();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163104,"byte_end":163162,"line_start":631,"line_end":631,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(result_vec, [1, 2, 3, 4, 5]);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163167,"byte_end":163211,"line_start":632,"line_end":632,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163216,"byte_end":163223,"line_start":633,"line_end":633,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163377,"byte_end":163380,"line_start":640,"line_end":640,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BTreeSet<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10009},"children":[],"decl_id":{"krate":2,"index":10010},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163533,"byte_end":163538,"line_start":646,"line_end":646,"column_start":8,"column_end":13},"name":"clone","qualname":"<Iter as std::clone::Clone>::clone","value":"fn clone(&Self) -> Iter","parent":{"krate":2,"index":2790},"children":[],"decl_id":{"krate":2,"index":2791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163682,"byte_end":163686,"line_start":653,"line_end":653,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<&'a T>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163755,"byte_end":163764,"line_start":656,"line_end":656,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163895,"byte_end":163904,"line_start":661,"line_end":661,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Iter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<&'a T>","parent":{"krate":2,"index":8142},"children":[],"decl_id":{"krate":2,"index":8143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164028,"byte_end":164031,"line_start":666,"line_end":666,"column_start":8,"column_end":11},"name":"len","qualname":"<Iter as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8167},"children":[],"decl_id":{"krate":2,"index":8168},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164134,"byte_end":164138,"line_start":673,"line_end":673,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<T> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<T>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164219,"byte_end":164228,"line_start":676,"line_end":676,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<T> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164355,"byte_end":164364,"line_start":681,"line_end":681,"column_start":8,"column_end":17},"name":"next_back","qualname":"<IntoIter<T> as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<T>","parent":{"krate":2,"index":8142},"children":[],"decl_id":{"krate":2,"index":8143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164496,"byte_end":164499,"line_start":686,"line_end":686,"column_start":8,"column_end":11},"name":"len","qualname":"<IntoIter<T> as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8167},"children":[],"decl_id":{"krate":2,"index":8168},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164584,"byte_end":164589,"line_start":691,"line_end":691,"column_start":8,"column_end":13},"name":"clone","qualname":"<Range as std::clone::Clone>::clone","value":"fn clone(&Self) -> Range","parent":{"krate":2,"index":2790},"children":[],"decl_id":{"krate":2,"index":2791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164736,"byte_end":164740,"line_start":698,"line_end":698,"column_start":8,"column_end":12},"name":"next","qualname":"<Range as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<&'a T>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164878,"byte_end":164887,"line_start":703,"line_end":703,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Range as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<&'a T>","parent":{"krate":2,"index":8142},"children":[],"decl_id":{"krate":2,"index":8143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":165326,"byte_end":165331,"line_start":718,"line_end":718,"column_start":8,"column_end":13},"name":"clone","qualname":"<Difference as std::clone::Clone>::clone","value":"fn clone(&Self) -> Difference","parent":{"krate":2,"index":2790},"children":[],"decl_id":{"krate":2,"index":2791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":165544,"byte_end":165548,"line_start":728,"line_end":728,"column_start":8,"column_end":12},"name":"next","qualname":"<Difference as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<&'a T>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":165945,"byte_end":165954,"line_start":743,"line_end":743,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Difference as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":166176,"byte_end":166181,"line_start":751,"line_end":751,"column_start":8,"column_end":13},"name":"clone","qualname":"<SymmetricDifference as std::clone::Clone>::clone","value":"fn clone(&Self) -> SymmetricDifference","parent":{"krate":2,"index":2790},"children":[],"decl_id":{"krate":2,"index":2791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":166421,"byte_end":166425,"line_start":761,"line_end":761,"column_start":8,"column_end":12},"name":"next","qualname":"<SymmetricDifference as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<&'a T>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":166792,"byte_end":166801,"line_start":774,"line_end":774,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<SymmetricDifference as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":166944,"byte_end":166949,"line_start":780,"line_end":780,"column_start":8,"column_end":13},"name":"clone","qualname":"<Intersection as std::clone::Clone>::clone","value":"fn clone(&Self) -> Intersection","parent":{"krate":2,"index":2790},"children":[],"decl_id":{"krate":2,"index":2791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":167168,"byte_end":167172,"line_start":790,"line_end":790,"column_start":8,"column_end":12},"name":"next","qualname":"<Intersection as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<&'a T>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":167826,"byte_end":167835,"line_start":813,"line_end":813,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Intersection as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":167975,"byte_end":167980,"line_start":819,"line_end":819,"column_start":8,"column_end":13},"name":"clone","qualname":"<Union as std::clone::Clone>::clone","value":"fn clone(&Self) -> Union","parent":{"krate":2,"index":2790},"children":[],"decl_id":{"krate":2,"index":2791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":168178,"byte_end":168182,"line_start":829,"line_end":829,"column_start":8,"column_end":12},"name":"next","qualname":"<Union as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<&'a T>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":168556,"byte_end":168565,"line_start":842,"line_end":842,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Union as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8296},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58774,"byte_end":58782,"line_start":88,"line_end":88,"column_start":5,"column_end":13},"name":"Included","qualname":"::support::bst::Bound::Included","value":"Bound::Included(T)","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" An inclusive bound.\n","sig":null,"attributes":[{"value":"/ An inclusive bound.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58746,"byte_end":58769,"line_start":87,"line_end":87,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58783,"byte_end":58784,"line_start":88,"line_end":88,"column_start":14,"column_end":15},"name":"0","qualname":"::support::bst::Bound::Included::0","value":"T","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1817},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58819,"byte_end":58827,"line_start":90,"line_end":90,"column_start":5,"column_end":13},"name":"Excluded","qualname":"::support::bst::Bound::Excluded","value":"Bound::Excluded(T)","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" An exclusive bound.\n","sig":null,"attributes":[{"value":"/ An exclusive bound.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58791,"byte_end":58814,"line_start":89,"line_end":89,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1819},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58828,"byte_end":58829,"line_start":90,"line_end":90,"column_start":14,"column_end":15},"name":"0","qualname":"::support::bst::Bound::Excluded::0","value":"T","parent":{"krate":0,"index":1817},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58918,"byte_end":58927,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"Unbounded","qualname":"::support::bst::Bound::Unbounded","value":"Bound::Unbounded","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" An infinite endpoint. Indicates that there is no bound in this direction.\n","sig":null,"attributes":[{"value":"/ An infinite endpoint. Indicates that there is no bound in this direction.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58836,"byte_end":58913,"line_start":91,"line_end":91,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58731,"byte_end":58736,"line_start":86,"line_end":86,"column_start":10,"column_end":15},"name":"Bound","qualname":"::support::bst::Bound","value":"enum Bound<T> { Included(T), Excluded(T), Unbounded, }","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1817},{"krate":0,"index":1820}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":59341,"byte_end":59344,"line_start":116,"line_end":116,"column_start":10,"column_end":13},"name":"Key","qualname":"::support::bst::Recover::Key","value":"type Key;","parent":{"krate":0,"index":1360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gpu_cache","qualname":"::gpu_cache","value":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1878},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1887},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1894},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1408},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1421},{"krate":0,"index":1909},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1432},{"krate":0,"index":1433}],"decl_id":null,"docs":" This module provides capabilities for managing a cache of rendered glyphs in GPU memory, with the goal of\n minimisng the size and frequency of glyph uploads to GPU memory from the CPU.","sig":null,"attributes":[{"value":"/ This module provides capabilities for managing a cache of rendered glyphs in GPU memory, with the goal of","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":168727,"byte_end":168836,"line_start":1,"line_end":1,"column_start":1,"column_end":110}},{"value":"/ minimisng the size and frequency of glyph uploads to GPU memory from the CPU.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":168837,"byte_end":168918,"line_start":2,"line_end":2,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":168919,"byte_end":168922,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Typical applications that render directly with hardware graphics APIs (e.g. games) need text rendering.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":168923,"byte_end":169030,"line_start":4,"line_end":4,"column_start":1,"column_end":108}},{"value":"/ There is not yet a performant solution for high quality text rendering directly on the GPU that isn't","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":169031,"byte_end":169136,"line_start":5,"line_end":5,"column_start":1,"column_end":106}},{"value":"/ experimental research work. Quality is often critical for legibility, so many applications use text or","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":169137,"byte_end":169243,"line_start":6,"line_end":6,"column_start":1,"column_end":107}},{"value":"/ individual characters that have been rendered on the CPU. This is done either ahead-of-time, giving a","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":169244,"byte_end":169349,"line_start":7,"line_end":7,"column_start":1,"column_end":106}},{"value":"/ fixed set of fonts, characters, and sizes that can be used at runtime, or dynamically as text is required.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":169350,"byte_end":169460,"line_start":8,"line_end":8,"column_start":1,"column_end":111}},{"value":"/ This latter scenario is more flexible and the focus of this module.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":169461,"byte_end":169532,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ To minimise the CPU load and texture upload bandwidth saturation, recently used glyphs should be cached","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":169534,"byte_end":169641,"line_start":11,"line_end":11,"column_start":1,"column_end":108}},{"value":"/ on the GPU for use by future frames. This module provides a mechanism for maintaining such a cache in the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":169642,"byte_end":169751,"line_start":12,"line_end":12,"column_start":1,"column_end":110}},{"value":"/ form of a single packed 2D GPU texture. When a rendered glyph is requested, it is either retrieved from its","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":169752,"byte_end":169863,"line_start":13,"line_end":13,"column_start":1,"column_end":112}},{"value":"/ location in the texture if it is present or room is made in the cache (if necessary),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":169864,"byte_end":169953,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/ the CPU renders the glyph then it is uploaded into a gap in the texture to be available for GPU rendering.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":169954,"byte_end":170064,"line_start":15,"line_end":15,"column_start":1,"column_end":111}},{"value":"/ This cache uses a Least Recently Used (LRU) cache eviction scheme - glyphs in the cache that have not been","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":170065,"byte_end":170175,"line_start":16,"line_end":16,"column_start":1,"column_end":111}},{"value":"/ used recently are as a rule of thumb not likely to be used again soon, so they are the best candidates for","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":170176,"byte_end":170286,"line_start":17,"line_end":17,"column_start":1,"column_end":111}},{"value":"/ eviction to make room for required glyphs.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":170287,"byte_end":170333,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":170334,"byte_end":170337,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The API for the cache does not assume a particular graphics API. The intended usage is to queue up glyphs","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":170338,"byte_end":170447,"line_start":20,"line_end":20,"column_start":1,"column_end":110}},{"value":"/ that need to be present for the current frame using `Cache::queue_glyph`, update the cache to ensure that","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":170448,"byte_end":170557,"line_start":21,"line_end":21,"column_start":1,"column_end":110}},{"value":"/ the queued glyphs are present using `Cache::cache_queued` (providing a function for uploading pixel data),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":170558,"byte_end":170668,"line_start":22,"line_end":22,"column_start":1,"column_end":111}},{"value":"/ then when it's time to render call `Cache::rect_for` to get the UV coordinates in the cache texture for","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":170669,"byte_end":170776,"line_start":23,"line_end":23,"column_start":1,"column_end":108}},{"value":"/ each glyph. For a concrete use case see the `gpu_cache` example.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":170777,"byte_end":170845,"line_start":24,"line_end":24,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":173406,"byte_end":173411,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"Cache","qualname":"::gpu_cache::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"decl_id":null,"docs":" An implementation of a dynamic GPU glyph cache. See the module documentation for more information.\n","sig":null,"attributes":[{"value":"/ An implementation of a dynamic GPU glyph cache. See the module documentation for more information.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":173292,"byte_end":173394,"line_start":114,"line_end":114,"column_start":1,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":173949,"byte_end":173963,"line_start":132,"line_end":132,"column_start":5,"column_end":19},"name":"GlyphNotCached","qualname":"::gpu_cache::CacheReadErr::GlyphNotCached","value":"CacheReadErr::GlyphNotCached","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Indicates that the requested glyph is not present in the cache\n","sig":null,"attributes":[{"value":"/ Indicates that the requested glyph is not present in the cache","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":173878,"byte_end":173944,"line_start":131,"line_end":131,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":1909},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":173859,"byte_end":173871,"line_start":130,"line_end":130,"column_start":10,"column_end":22},"name":"CacheReadErr","qualname":"::gpu_cache::CacheReadErr","value":"enum CacheReadErr { GlyphNotCached, }","parent":null,"children":[{"krate":0,"index":1910}],"decl_id":null,"docs":" Returned from `Cache::rect_for`.\n","sig":null,"attributes":[{"value":"/ Returned from `Cache::rect_for`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":173751,"byte_end":173787,"line_start":128,"line_end":128,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1928},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174212,"byte_end":174225,"line_start":138,"line_end":138,"column_start":5,"column_end":18},"name":"GlyphTooLarge","qualname":"::gpu_cache::CacheWriteErr::GlyphTooLarge","value":"CacheWriteErr::GlyphTooLarge","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" At least one of the queued glyphs is too big to fit into the cache, even if all other glyphs are removed.\n","sig":null,"attributes":[{"value":"/ At least one of the queued glyphs is too big to fit into the cache, even if all other glyphs are removed.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174098,"byte_end":174207,"line_start":137,"line_end":137,"column_start":5,"column_end":114}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1930},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174363,"byte_end":174382,"line_start":141,"line_end":141,"column_start":5,"column_end":24},"name":"NoRoomForWholeQueue","qualname":"::gpu_cache::CacheWriteErr::NoRoomForWholeQueue","value":"CacheWriteErr::NoRoomForWholeQueue","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" Not all of the requested glyphs can fit into the cache, even if the cache is completely cleared before\n the attempt.\n","sig":null,"attributes":[{"value":"/ Not all of the requested glyphs can fit into the cache, even if the cache is completely cleared before","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174231,"byte_end":174337,"line_start":139,"line_end":139,"column_start":5,"column_end":111}},{"value":"/ the attempt.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174342,"byte_end":174358,"line_start":140,"line_end":140,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":1927},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174078,"byte_end":174091,"line_start":136,"line_end":136,"column_start":10,"column_end":23},"name":"CacheWriteErr","qualname":"::gpu_cache::CacheWriteErr","value":"enum CacheWriteErr { GlyphTooLarge, NoRoomForWholeQueue, }","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1930}],"decl_id":null,"docs":" Returned from `Cache::cache_queued`.\n","sig":null,"attributes":[{"value":"/ Returned from `Cache::cache_queued`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":173966,"byte_end":174006,"line_start":134,"line_end":134,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":176326,"byte_end":176329,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache>::new","value":"fn new(u32, u32, f32, f32) -> Cache","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new cache. Note that this is just the CPU side of the cache. The GPU texture is managed\n by the user.","sig":null,"attributes":[{"value":"/ Constructs a new cache. Note that this is just the CPU side of the cache. The GPU texture is managed","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174708,"byte_end":174812,"line_start":158,"line_end":158,"column_start":5,"column_end":109}},{"value":"/ by the user.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174817,"byte_end":174833,"line_start":159,"line_end":159,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174838,"byte_end":174841,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ `width` and `height` specify the dimensions of the 2D texture that will hold the cache contents on the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174846,"byte_end":174952,"line_start":161,"line_end":161,"column_start":5,"column_end":111}},{"value":"/ GPU. This must match the dimensions of the actual texture used, otherwise `cache_queued` will try to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174957,"byte_end":175061,"line_start":162,"line_end":162,"column_start":5,"column_end":109}},{"value":"/ cache into coordinates outside the bounds of the texture. If you need to change the dimensions of the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":175066,"byte_end":175171,"line_start":163,"line_end":163,"column_start":5,"column_end":110}},{"value":"/ cache texture (e.g. due to high cache pressure), construct a new `Cache` and discard the old one.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":175176,"byte_end":175277,"line_start":164,"line_end":164,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":175282,"byte_end":175285,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ `scale_tolerance` and `position_tolerance` specify the tolerances (maximum allowed difference)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":175290,"byte_end":175388,"line_start":166,"line_end":166,"column_start":5,"column_end":103}},{"value":"/ for judging whether an existing glyph","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":175393,"byte_end":175434,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/ in the cache is close enough to the requested glyph in scale and subpixel offset to be used in its","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":175439,"byte_end":175541,"line_start":168,"line_end":168,"column_start":5,"column_end":107}},{"value":"/ place. Due to floating point inaccuracies that can affect user code it is not recommended to set these","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":175546,"byte_end":175652,"line_start":169,"line_end":169,"column_start":5,"column_end":111}},{"value":"/ parameters too close to zero as effectively identical glyphs could end up duplicated in the cache.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":175657,"byte_end":175759,"line_start":170,"line_end":170,"column_start":5,"column_end":107}},{"value":"/ Both `scale_tolerance` and `position_tolerance` are measured in pixels. Note that since `pixel_tolerance`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":175764,"byte_end":175873,"line_start":171,"line_end":171,"column_start":5,"column_end":114}},{"value":"/ is a tolerance of subpixel offsets, setting it to 1.0 or higher is effectively a \"don't care\" option.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":175878,"byte_end":175983,"line_start":172,"line_end":172,"column_start":5,"column_end":110}},{"value":"/ A typical application will produce results with no perceptible inaccuracies with `scale_tolerance`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":175988,"byte_end":176090,"line_start":173,"line_end":173,"column_start":5,"column_end":107}},{"value":"/ and `position_tolerance` set to 0.1. Depending on the target DPI higher tolerance may be acceptable.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":176095,"byte_end":176199,"line_start":174,"line_end":174,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":176204,"byte_end":176207,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":176212,"byte_end":176224,"line_start":176,"line_end":176,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":176229,"byte_end":176232,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ `scale_tolerance` or `position_tolerance` are less than or equal to zero.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":176237,"byte_end":176314,"line_start":178,"line_end":178,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177340,"byte_end":177359,"line_start":203,"line_end":203,"column_start":12,"column_end":31},"name":"set_scale_tolerance","qualname":"<Cache>::set_scale_tolerance","value":"fn set_scale_tolerance(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the scale tolerance for the cache. See the documentation for `Cache::new` for more information.","sig":null,"attributes":[{"value":"/ Sets the scale tolerance for the cache. See the documentation for `Cache::new` for more information.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177140,"byte_end":177244,"line_start":198,"line_end":198,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177249,"byte_end":177252,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177257,"byte_end":177269,"line_start":200,"line_end":200,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177274,"byte_end":177277,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ `tolerance` is less than or equal to zero.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177282,"byte_end":177328,"line_start":202,"line_end":202,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177588,"byte_end":177603,"line_start":209,"line_end":209,"column_start":12,"column_end":27},"name":"scale_tolerance","qualname":"<Cache>::scale_tolerance","value":"fn scale_tolerance(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current scale tolerance for the cache.\n","sig":null,"attributes":[{"value":"/ Returns the current scale tolerance for the cache.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177522,"byte_end":177576,"line_start":208,"line_end":208,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177879,"byte_end":177901,"line_start":218,"line_end":218,"column_start":12,"column_end":34},"name":"set_position_tolerance","qualname":"<Cache>::set_position_tolerance","value":"fn set_position_tolerance(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the subpixel position tolerance for the cache. See the documentation for `Cache::new` for more\n information.","sig":null,"attributes":[{"value":"/ Sets the subpixel position tolerance for the cache. See the documentation for `Cache::new` for more","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177659,"byte_end":177762,"line_start":212,"line_end":212,"column_start":5,"column_end":108}},{"value":"/ information.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177767,"byte_end":177783,"line_start":213,"line_end":213,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177788,"byte_end":177791,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177796,"byte_end":177808,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177813,"byte_end":177816,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ `tolerance` is less than or equal to zero.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":177821,"byte_end":177867,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":178145,"byte_end":178163,"line_start":224,"line_end":224,"column_start":12,"column_end":30},"name":"position_tolerance","qualname":"<Cache>::position_tolerance","value":"fn position_tolerance(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current subpixel position tolerance for the cache.\n","sig":null,"attributes":[{"value":"/ Returns the current subpixel position tolerance for the cache.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":178067,"byte_end":178133,"line_start":223,"line_end":223,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":178383,"byte_end":178393,"line_start":229,"line_end":229,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<Cache>::dimensions","value":"fn dimensions(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the cache texture dimensions assumed by the cache. For proper operation this should\n match the dimensions of the used GPU texture.\n","sig":null,"attributes":[{"value":"/ Returns the cache texture dimensions assumed by the cache. For proper operation this should","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":178222,"byte_end":178317,"line_start":227,"line_end":227,"column_start":5,"column_end":100}},{"value":"/ match the dimensions of the used GPU texture.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":178322,"byte_end":178371,"line_start":228,"line_end":228,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":178696,"byte_end":178707,"line_start":235,"line_end":235,"column_start":12,"column_end":23},"name":"queue_glyph","qualname":"<Cache>::queue_glyph","value":"fn queue_glyph(&mut Self, usize, PositionedGlyph)","parent":null,"children":[],"decl_id":null,"docs":" Queue a glyph for caching by the next call to `cache_queued`. `font_id` is used to\n disambiguate glyphs from different fonts. The user should ensure that `font_id` is unique to the\n font the glyph is from.\n","sig":null,"attributes":[{"value":"/ Queue a glyph for caching by the next call to `cache_queued`. `font_id` is used to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":178461,"byte_end":178547,"line_start":232,"line_end":232,"column_start":5,"column_end":91}},{"value":"/ disambiguate glyphs from different fonts. The user should ensure that `font_id` is unique to the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":178552,"byte_end":178652,"line_start":233,"line_end":233,"column_start":5,"column_end":105}},{"value":"/ font the glyph is from.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":178657,"byte_end":178684,"line_start":234,"line_end":234,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":178957,"byte_end":178962,"line_start":241,"line_end":241,"column_start":12,"column_end":17},"name":"clear","qualname":"<Cache>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the cache. Does not affect the glyph queue.\n","sig":null,"attributes":[{"value":"/ Clears the cache. Does not affect the glyph queue.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":178891,"byte_end":178945,"line_start":240,"line_end":240,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":179283,"byte_end":179294,"line_start":250,"line_end":250,"column_start":12,"column_end":23},"name":"clear_queue","qualname":"<Cache>::clear_queue","value":"fn clear_queue(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the glyph queue.\n","sig":null,"attributes":[{"value":"/ Clears the glyph queue.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":179244,"byte_end":179271,"line_start":249,"line_end":249,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":180054,"byte_end":180066,"line_start":262,"line_end":262,"column_start":12,"column_end":24},"name":"cache_queued","qualname":"<Cache>::cache_queued","value":"fn cache_queued<F>(&mut Self, F) -> Result<(), CacheWriteErr> where\nF: FnMut(Rect<u32>, &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Caches the queued glyphs. If this is unsuccessful, the queue is untouched.\n Any glyphs cached by previous calls to this function may be removed from the cache to make\n room for the newly queued glyphs. Thus if you want to ensure that a glyph is in the cache,\n the most recently cached queue must have contained that glyph.","sig":null,"attributes":[{"value":"/ Caches the queued glyphs. If this is unsuccessful, the queue is untouched.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":179346,"byte_end":179424,"line_start":253,"line_end":253,"column_start":5,"column_end":83}},{"value":"/ Any glyphs cached by previous calls to this function may be removed from the cache to make","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":179429,"byte_end":179523,"line_start":254,"line_end":254,"column_start":5,"column_end":99}},{"value":"/ room for the newly queued glyphs. Thus if you want to ensure that a glyph is in the cache,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":179528,"byte_end":179622,"line_start":255,"line_end":255,"column_start":5,"column_end":99}},{"value":"/ the most recently cached queue must have contained that glyph.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":179627,"byte_end":179693,"line_start":256,"line_end":256,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":179698,"byte_end":179701,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ `uploader` is the user-provided function that should perform the texture uploads to the GPU.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":179706,"byte_end":179802,"line_start":258,"line_end":258,"column_start":5,"column_end":101}},{"value":"/ The information provided is the rectangular region to insert the pixel data into, and the pixel data","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":179807,"byte_end":179911,"line_start":259,"line_end":259,"column_start":5,"column_end":109}},{"value":"/ itself. This data is provided in horizontal scanline format (row major), with stride equal to the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":179916,"byte_end":180017,"line_start":260,"line_end":260,"column_start":5,"column_end":106}},{"value":"/ rectangle width.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":180022,"byte_end":180042,"line_start":261,"line_end":261,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":190524,"byte_end":190532,"line_start":472,"line_end":472,"column_start":12,"column_end":20},"name":"rect_for","qualname":"<Cache>::rect_for","value":"fn rect_for<'a>(&'a Self, usize, &PositionedGlyph)\n-> Result<Option<(Rect<f32>, Rect<i32>)>, CacheReadErr>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the (floating point) texture coordinates of the quad for a glyph in the cache,\n as well as the pixel-space (integer) coordinates that this region should be drawn at.\n In the majority of cases these pixel-space coordinates should be identical to the bounding box of the\n input glyph. They only differ if the cache has returned a substitute glyph that is deemed close enough\n to the requested glyph as specified by the cache tolerance parameters.","sig":null,"attributes":[{"value":"/ Retrieves the (floating point) texture coordinates of the quad for a glyph in the cache,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":189794,"byte_end":189886,"line_start":463,"line_end":463,"column_start":5,"column_end":97}},{"value":"/ as well as the pixel-space (integer) coordinates that this region should be drawn at.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":189891,"byte_end":189980,"line_start":464,"line_end":464,"column_start":5,"column_end":94}},{"value":"/ In the majority of cases these pixel-space coordinates should be identical to the bounding box of the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":189985,"byte_end":190090,"line_start":465,"line_end":465,"column_start":5,"column_end":110}},{"value":"/ input glyph. They only differ if the cache has returned a substitute glyph that is deemed close enough","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":190095,"byte_end":190201,"line_start":466,"line_end":466,"column_start":5,"column_end":111}},{"value":"/ to the requested glyph as specified by the cache tolerance parameters.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":190206,"byte_end":190280,"line_start":467,"line_end":467,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":190285,"byte_end":190288,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ A sucessful result is `Some` if the glyph is not an empty glyph (no shape, and thus no rect to return).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":190293,"byte_end":190400,"line_start":469,"line_end":469,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":190405,"byte_end":190408,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Ensure that `font_id` matches the `font_id` that was passed to `queue_glyph` with this `glyph`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":190413,"byte_end":190512,"line_start":471,"line_end":471,"column_start":5,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1947},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5531,"byte_end":5545,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"FontCollection","qualname":"::FontCollection","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of fonts read straight from a font file's data. The data in the collection is not validated.\n This structure may or may not own the font data.\n","sig":null,"attributes":[{"value":"/ A collection of fonts read straight from a font file's data. The data in the collection is not validated.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5333,"byte_end":5442,"line_start":107,"line_end":107,"column_start":1,"column_end":110}},{"value":"/ This structure may or may not own the font data.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5443,"byte_end":5495,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5654,"byte_end":5658,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"Font","qualname":"::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":1959}],"decl_id":null,"docs":" A single font. This may or may not own the font data.\n","sig":null,"attributes":[{"value":"/ A single font. This may or may not own the font data.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5568,"byte_end":5625,"line_start":111,"line_end":111,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1965},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6043,"byte_end":6048,"line_start":122,"line_end":122,"column_start":5,"column_end":10},"name":"ByRef","qualname":"::SharedBytes::ByRef","value":"SharedBytes::ByRef(&'a [u8])","parent":{"krate":0,"index":1963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6049,"byte_end":6057,"line_start":122,"line_end":122,"column_start":11,"column_end":19},"name":"0","qualname":"::SharedBytes::ByRef::0","value":"&'a [u8]","parent":{"krate":0,"index":1965},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6064,"byte_end":6069,"line_start":123,"line_end":123,"column_start":5,"column_end":10},"name":"ByArc","qualname":"::SharedBytes::ByArc","value":"SharedBytes::ByArc(Arc<Box<[u8]>>)","parent":{"krate":0,"index":1963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1970},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6070,"byte_end":6084,"line_start":123,"line_end":123,"column_start":11,"column_end":25},"name":"0","qualname":"::SharedBytes::ByArc::0","value":"std::sync::Arc<std::boxed::Box<[u8]>>","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1963},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6021,"byte_end":6032,"line_start":121,"line_end":121,"column_start":10,"column_end":21},"name":"SharedBytes","qualname":"::SharedBytes","value":"enum SharedBytes<'a> { ByRef(&'a [u8]), ByArc(Arc<Box<[u8]>>), }","parent":null,"children":[{"krate":0,"index":1965},{"krate":0,"index":1968}],"decl_id":null,"docs":" `SharedBytes` handles the lifetime of font data used in RustType. The data is either a shared\n reference to externally owned data, or managed by reference counting. `SharedBytes` can be\n conveniently used with `From` and `Into`, and dereferences to the contained bytes.\n","sig":null,"attributes":[{"value":"/ `SharedBytes` handles the lifetime of font data used in RustType. The data is either a shared","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5708,"byte_end":5805,"line_start":117,"line_end":117,"column_start":1,"column_end":98}},{"value":"/ reference to externally owned data, or managed by reference counting. `SharedBytes` can be","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5806,"byte_end":5900,"line_start":118,"line_end":118,"column_start":1,"column_end":95}},{"value":"/ conveniently used with `From` and `Into`, and dereferences to the contained bytes.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5901,"byte_end":5987,"line_start":119,"line_end":119,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6168,"byte_end":6173,"line_start":127,"line_end":127,"column_start":8,"column_end":13},"name":"deref","qualname":"<SharedBytes as std::ops::Deref>::deref","value":"fn deref(&Self) -> &[u8]","parent":{"krate":2,"index":3387},"children":[],"decl_id":{"krate":2,"index":3389},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6388,"byte_end":6392,"line_start":135,"line_end":135,"column_start":8,"column_end":12},"name":"from","qualname":"<SharedBytes as std::convert::From>::from","value":"fn from(&'a [u8]) -> SharedBytes","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6533,"byte_end":6537,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"from","qualname":"<SharedBytes as std::convert::From>::from","value":"fn from(Arc<Box<[u8]>>) -> SharedBytes","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6684,"byte_end":6688,"line_start":145,"line_end":145,"column_start":8,"column_end":12},"name":"from","qualname":"<SharedBytes as std::convert::From>::from","value":"fn from(Box<[u8]>) -> SharedBytes","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6838,"byte_end":6842,"line_start":150,"line_end":150,"column_start":8,"column_end":12},"name":"from","qualname":"<SharedBytes as std::convert::From>::from","value":"fn from(Vec<u8>) -> SharedBytes","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1977},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7072,"byte_end":7081,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"Codepoint","qualname":"::Codepoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Unicode code point.\n","sig":null,"attributes":[{"value":"/ Represents a Unicode code point.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6956,"byte_end":6992,"line_start":154,"line_end":154,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7082,"byte_end":7089,"line_start":156,"line_end":156,"column_start":22,"column_end":29},"name":"0","qualname":"::Codepoint::0","value":"u32","parent":{"krate":0,"index":1977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7462,"byte_end":7471,"line_start":164,"line_end":164,"column_start":5,"column_end":14},"name":"Codepoint","qualname":"::CodepointOrGlyphId::Codepoint","value":"CodepointOrGlyphId::Codepoint(Codepoint)","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2002},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7472,"byte_end":7481,"line_start":164,"line_end":164,"column_start":15,"column_end":24},"name":"0","qualname":"::CodepointOrGlyphId::Codepoint::0","value":"Codepoint","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7488,"byte_end":7495,"line_start":165,"line_end":165,"column_start":5,"column_end":12},"name":"GlyphId","qualname":"::CodepointOrGlyphId::GlyphId","value":"CodepointOrGlyphId::GlyphId(GlyphId)","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7496,"byte_end":7503,"line_start":165,"line_end":165,"column_start":13,"column_end":20},"name":"0","qualname":"::CodepointOrGlyphId::GlyphId::0","value":"GlyphId","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1999},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7437,"byte_end":7455,"line_start":163,"line_end":163,"column_start":10,"column_end":28},"name":"CodepointOrGlyphId","qualname":"::CodepointOrGlyphId","value":"enum CodepointOrGlyphId { Codepoint(Codepoint), GlyphId(GlyphId), }","parent":null,"children":[{"krate":0,"index":2000},{"krate":0,"index":2003}],"decl_id":null,"docs":" Represents either a Unicode code point, or a glyph identifier for a font.","sig":null,"attributes":[{"value":"/ Represents either a Unicode code point, or a glyph identifier for a font.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7092,"byte_end":7169,"line_start":157,"line_end":157,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7170,"byte_end":7173,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ This is used as input for functions that can accept code points or glyph identifiers.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7174,"byte_end":7263,"line_start":159,"line_end":159,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7264,"byte_end":7267,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ You typically won't construct this type directly, instead relying on `From` and `Into`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7268,"byte_end":7359,"line_start":161,"line_end":161,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":2025},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7772,"byte_end":7779,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"GlyphId","qualname":"::GlyphId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a glyph identifier for a particular font. This identifier will not necessarily correspond to\n the correct glyph in a font other than the one that it was obtained from.\n","sig":null,"attributes":[{"value":"/ Represents a glyph identifier for a particular font. This identifier will not necessarily correspond to","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7507,"byte_end":7614,"line_start":167,"line_end":167,"column_start":1,"column_end":108}},{"value":"/ the correct glyph in a font other than the one that it was obtained from.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7615,"byte_end":7692,"line_start":168,"line_end":168,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7780,"byte_end":7787,"line_start":170,"line_end":170,"column_start":20,"column_end":27},"name":"0","qualname":"::GlyphId::0","value":"u32","parent":{"krate":0,"index":2025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2047},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":8186,"byte_end":8191,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::Glyph","value":"Glyph {  }","parent":null,"children":[{"krate":0,"index":2049}],"decl_id":null,"docs":" A single glyph of a font. this may either be a thin wrapper referring to the font and the glyph id, or\n it may be a standalone glyph that owns the data needed by it.","sig":null,"attributes":[{"value":"/ A single glyph of a font. this may either be a thin wrapper referring to the font and the glyph id, or","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7790,"byte_end":7896,"line_start":171,"line_end":171,"column_start":1,"column_end":107}},{"value":"/ it may be a standalone glyph that owns the data needed by it.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7897,"byte_end":7962,"line_start":172,"line_end":172,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7963,"byte_end":7966,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ A `Glyph` does not have an inherent scale or position associated with it. To augment a glyph with a","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":7967,"byte_end":8070,"line_start":174,"line_end":174,"column_start":1,"column_end":104}},{"value":"/ size, give it a scale using `scaled`. You can then position it using `positioned`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":8071,"byte_end":8157,"line_start":175,"line_end":175,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":2073},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":8760,"byte_end":8768,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"HMetrics","qualname":"::HMetrics","value":"HMetrics { advance_width, left_side_bearing }","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"decl_id":null,"docs":" The \"horizontal metrics\" of a glyph. This is useful for calculating the horizontal offset of a glyph\n from the previous one in a string when laying a string out horizontally.\n","sig":null,"attributes":[{"value":"/ The \"horizontal metrics\" of a glyph. This is useful for calculating the horizontal offset of a glyph","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":8514,"byte_end":8618,"line_start":195,"line_end":195,"column_start":1,"column_end":105}},{"value":"/ from the previous one in a string when laying a string out horizontally.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":8619,"byte_end":8695,"line_start":196,"line_end":196,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":8884,"byte_end":8897,"line_start":200,"line_end":200,"column_start":9,"column_end":22},"name":"advance_width","qualname":"::HMetrics::advance_width","value":"f32","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":" The horizontal offset that the origin of the next glyph should be from the origin of this glyph.\n","sig":null,"attributes":[{"value":"/ The horizontal offset that the origin of the next glyph should be from the origin of this glyph.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":8775,"byte_end":8875,"line_start":199,"line_end":199,"column_start":5,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9017,"byte_end":9034,"line_start":202,"line_end":202,"column_start":9,"column_end":26},"name":"left_side_bearing","qualname":"::HMetrics::left_side_bearing","value":"f32","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":" The horizontal offset between the origin of this glyph and the leftmost edge/point of the glyph.\n","sig":null,"attributes":[{"value":"/ The horizontal offset between the origin of this glyph and the leftmost edge/point of the glyph.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":8908,"byte_end":9008,"line_start":201,"line_end":201,"column_start":5,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9318,"byte_end":9326,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"VMetrics","qualname":"::VMetrics","value":"VMetrics { ascent, descent, line_gap }","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090}],"decl_id":null,"docs":" The \"vertical metrics\" of a font at a particular scale. This is useful for calculating the amount of\n vertical space to give a line of text, and for computing the vertical offset between successive lines.\n","sig":null,"attributes":[{"value":"/ The \"vertical metrics\" of a font at a particular scale. This is useful for calculating the amount of","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9095,"byte_end":9199,"line_start":205,"line_end":205,"column_start":1,"column_end":105}},{"value":"/ vertical space to give a line of text, and for computing the vertical offset between successive lines.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9200,"byte_end":9306,"line_start":206,"line_end":206,"column_start":1,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9441,"byte_end":9447,"line_start":209,"line_end":209,"column_start":9,"column_end":15},"name":"ascent","qualname":"::VMetrics::ascent","value":"f32","parent":{"krate":0,"index":2087},"children":[],"decl_id":null,"docs":" The highest point that any glyph in the font extends to above the baseline. Typically positive.\n","sig":null,"attributes":[{"value":"/ The highest point that any glyph in the font extends to above the baseline. Typically positive.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9333,"byte_end":9432,"line_start":208,"line_end":208,"column_start":5,"column_end":104}}]},{"kind":"Field","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9565,"byte_end":9572,"line_start":211,"line_end":211,"column_start":9,"column_end":16},"name":"descent","qualname":"::VMetrics::descent","value":"f32","parent":{"krate":0,"index":2087},"children":[],"decl_id":null,"docs":" The lowest point that any glyph in the font extends to below the baseline. Typically negative.\n","sig":null,"attributes":[{"value":"/ The lowest point that any glyph in the font extends to below the baseline. Typically negative.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9458,"byte_end":9556,"line_start":210,"line_end":210,"column_start":5,"column_end":103}}]},{"kind":"Field","id":{"krate":0,"index":2090},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9746,"byte_end":9754,"line_start":214,"line_end":214,"column_start":9,"column_end":17},"name":"line_gap","qualname":"::VMetrics::line_gap","value":"f32","parent":{"krate":0,"index":2087},"children":[],"decl_id":null,"docs":" The gap to leave between the descent of one line and the ascent of the next. This is of\n course only a guideline given by the font's designers.\n","sig":null,"attributes":[{"value":"/ The gap to leave between the descent of one line and the ascent of the next. This is of","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9583,"byte_end":9674,"line_start":212,"line_end":212,"column_start":5,"column_end":96}},{"value":"/ course only a guideline given by the font's designers.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9679,"byte_end":9737,"line_start":213,"line_end":213,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9925,"byte_end":9936,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"ScaledGlyph","qualname":"::ScaledGlyph","value":"ScaledGlyph {  }","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106}],"decl_id":null,"docs":" A glyph augmented with scaling information. You can query such a glyph for information that depends\n on the scale of the glyph.\n","sig":null,"attributes":[{"value":"/ A glyph augmented with scaling information. You can query such a glyph for information that depends","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9762,"byte_end":9865,"line_start":216,"line_end":216,"column_start":1,"column_end":104}},{"value":"/ on the scale of the glyph.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":9866,"byte_end":9896,"line_start":217,"line_end":217,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10200,"byte_end":10215,"line_start":227,"line_end":227,"column_start":12,"column_end":27},"name":"PositionedGlyph","qualname":"::PositionedGlyph","value":"PositionedGlyph {  }","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114}],"decl_id":null,"docs":" A glyph augmented with positioning and scaling information. You can query such a glyph for information\n that depends on the scale and position of the glyph.\n","sig":null,"attributes":[{"value":"/ A glyph augmented with positioning and scaling information. You can query such a glyph for information","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10008,"byte_end":10114,"line_start":224,"line_end":224,"column_start":1,"column_end":107}},{"value":"/ that depends on the scale and position of the glyph.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10115,"byte_end":10171,"line_start":225,"line_end":225,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10772,"byte_end":10777,"line_start":237,"line_end":237,"column_start":12,"column_end":17},"name":"Scale","qualname":"::Scale","value":"Scale { x, y }","parent":null,"children":[{"krate":0,"index":2119},{"krate":0,"index":2120}],"decl_id":null,"docs":" Defines the size of a rendered face of a font, in pixels, horizontally and vertically. A vertical\n scale of `y` pixels means that the distance betwen the ascent and descent lines (see `VMetrics`) of the\n face will be `y` pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling by a factor\n *f* in the horizontal direction is achieved by setting `x` equal to *f* times `y`.\n","sig":null,"attributes":[{"value":"/ Defines the size of a rendered face of a font, in pixels, horizontally and vertically. A vertical","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10301,"byte_end":10402,"line_start":232,"line_end":232,"column_start":1,"column_end":102}},{"value":"/ scale of `y` pixels means that the distance betwen the ascent and descent lines (see `VMetrics`) of the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10403,"byte_end":10510,"line_start":233,"line_end":233,"column_start":1,"column_end":108}},{"value":"/ face will be `y` pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling by a factor","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10511,"byte_end":10620,"line_start":234,"line_end":234,"column_start":1,"column_end":110}},{"value":"/ *f* in the horizontal direction is achieved by setting `x` equal to *f* times `y`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10621,"byte_end":10707,"line_start":235,"line_end":235,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10825,"byte_end":10826,"line_start":239,"line_end":239,"column_start":9,"column_end":10},"name":"x","qualname":"::Scale::x","value":"f32","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":" Horizontal scale, in pixels.\n","sig":null,"attributes":[{"value":"/ Horizontal scale, in pixels.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10784,"byte_end":10816,"line_start":238,"line_end":238,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10876,"byte_end":10877,"line_start":241,"line_end":241,"column_start":9,"column_end":10},"name":"y","qualname":"::Scale::y","value":"f32","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":" Vertical scale, in pixels.\n","sig":null,"attributes":[{"value":"/ Vertical scale, in pixels.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10837,"byte_end":10867,"line_start":240,"line_end":240,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10973,"byte_end":10980,"line_start":246,"line_end":246,"column_start":12,"column_end":19},"name":"uniform","qualname":"<Scale>::uniform","value":"fn uniform(f32) -> Scale","parent":null,"children":[],"decl_id":null,"docs":" Uniform scaling, equivalent to `Scale { x: s, y: s }`.\n","sig":null,"attributes":[{"value":"/ Uniform scaling, equivalent to `Scale { x: s, y: s }`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10903,"byte_end":10961,"line_start":245,"line_end":245,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11076,"byte_end":11080,"line_start":251,"line_end":251,"column_start":8,"column_end":12},"name":"from","qualname":"<Codepoint as std::convert::From>::from","value":"fn from(char) -> Codepoint","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11194,"byte_end":11198,"line_start":256,"line_end":256,"column_start":8,"column_end":12},"name":"from","qualname":"<CodepointOrGlyphId as std::convert::From>::from","value":"fn from(Codepoint) -> CodepointOrGlyphId","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11337,"byte_end":11341,"line_start":261,"line_end":261,"column_start":8,"column_end":12},"name":"from","qualname":"<CodepointOrGlyphId as std::convert::From>::from","value":"fn from(GlyphId) -> CodepointOrGlyphId","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11473,"byte_end":11477,"line_start":266,"line_end":266,"column_start":8,"column_end":12},"name":"from","qualname":"<CodepointOrGlyphId as std::convert::From>::from","value":"fn from(char) -> CodepointOrGlyphId","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11865,"byte_end":11875,"line_start":274,"line_end":274,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FontCollection>::from_bytes","value":"fn from_bytes<B>(B) -> FontCollection where B: Into<SharedBytes>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font collection from an array of bytes, typically loaded from a font file.\n This array may be owned (e.g. `Vec<u8>`), or borrowed (`&[u8]`).\n As long as `From<T>` is implemented for `Bytes` for some type `T`, `T` can be used as input.\n","sig":null,"attributes":[{"value":"/ Constructs a font collection from an array of bytes, typically loaded from a font file.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11588,"byte_end":11679,"line_start":271,"line_end":271,"column_start":5,"column_end":96}},{"value":"/ This array may be owned (e.g. `Vec<u8>`), or borrowed (`&[u8]`).","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11684,"byte_end":11752,"line_start":272,"line_end":272,"column_start":5,"column_end":73}},{"value":"/ As long as `From<T>` is implemented for `Bytes` for some type `T`, `T` can be used as input.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11757,"byte_end":11853,"line_start":273,"line_end":273,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":12262,"byte_end":12271,"line_start":280,"line_end":280,"column_start":12,"column_end":21},"name":"into_font","qualname":"<FontCollection>::into_font","value":"fn into_font(Self) -> Option<Font>","parent":null,"children":[],"decl_id":null,"docs":" In the common case that a font collection consists of only one font, this function\n consumes this font collection and turns it into a font. If this is not the case,\n or the font is not valid (read: not supported by this library), `None` is returned.\n","sig":null,"attributes":[{"value":"/ In the common case that a font collection consists of only one font, this function","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11983,"byte_end":12069,"line_start":277,"line_end":277,"column_start":5,"column_end":91}},{"value":"/ consumes this font collection and turns it into a font. If this is not the case,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":12074,"byte_end":12158,"line_start":278,"line_end":278,"column_start":5,"column_end":89}},{"value":"/ or the font is not valid (read: not supported by this library), `None` is returned.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":12163,"byte_end":12250,"line_start":279,"line_end":279,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":12768,"byte_end":12775,"line_start":292,"line_end":292,"column_start":12,"column_end":19},"name":"font_at","qualname":"<FontCollection>::font_at","value":"fn font_at(&Self, usize) -> Option<Font>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font at index `i` in the font collection, if it exists and is valid.\n The produced font borrows the font data that is either borrowed or owned by this font collection.\n","sig":null,"attributes":[{"value":"/ Gets the font at index `i` in the font collection, if it exists and is valid.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":12569,"byte_end":12650,"line_start":290,"line_end":290,"column_start":5,"column_end":86}},{"value":"/ The produced font borrows the font data that is either borrowed or owned by this font collection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":12655,"byte_end":12756,"line_start":291,"line_end":291,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":13106,"byte_end":13116,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"into_fonts","qualname":"<FontCollection>::into_fonts","value":"fn into_fonts(Self) -> IntoFontsIter","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an `Iterator` yielding each `Font` that exists within the collection.\n","sig":null,"attributes":[{"value":"/ Converts `self` into an `Iterator` yielding each `Font` that exists within the collection.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":13000,"byte_end":13094,"line_start":297,"line_end":297,"column_start":5,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":13256,"byte_end":13269,"line_start":305,"line_end":305,"column_start":12,"column_end":25},"name":"IntoFontsIter","qualname":"::IntoFontsIter","value":"IntoFontsIter {  }","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":13412,"byte_end":13416,"line_start":311,"line_end":311,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoFontsIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":13786,"byte_end":13795,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"v_metrics","qualname":"<Font>::v_metrics","value":"fn v_metrics(&Self, Scale) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" The \"vertical metrics\" for this font at a given scale. These metrics are shared by all of the glyphs\n in the font.\n See `VMetrics` for more detail.\n","sig":null,"attributes":[{"value":"/ The \"vertical metrics\" for this font at a given scale. These metrics are shared by all of the glyphs","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":13609,"byte_end":13713,"line_start":320,"line_end":320,"column_start":5,"column_end":109}},{"value":"/ in the font.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":13718,"byte_end":13734,"line_start":321,"line_end":321,"column_start":5,"column_end":21}},{"value":"/ See `VMetrics` for more detail.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":13739,"byte_end":13774,"line_start":322,"line_end":322,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":14271,"byte_end":14282,"line_start":335,"line_end":335,"column_start":12,"column_end":23},"name":"glyph_count","qualname":"<Font>::glyph_count","value":"fn glyph_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of glyphs present in this font. Glyph identifiers for this font will always be in the range\n `0..self.glyph_count()`\n","sig":null,"attributes":[{"value":"/ The number of glyphs present in this font. Glyph identifiers for this font will always be in the range","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":14121,"byte_end":14227,"line_start":333,"line_end":333,"column_start":5,"column_end":111}},{"value":"/ `0..self.glyph_count()`","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":14232,"byte_end":14259,"line_start":334,"line_end":334,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":14725,"byte_end":14730,"line_start":344,"line_end":344,"column_start":12,"column_end":17},"name":"glyph","qualname":"<Font>::glyph","value":"fn glyph<C>(&Self, C) -> Option<Glyph> where C: Into<CodepointOrGlyphId>","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding glyph for a Unicode code point or a glyph id for this font.\n If id corresponds to a glyph identifier, the identifier must be valid (smaller than `self.glyph_count()`),\n otherwise `None` is returned.","sig":null,"attributes":[{"value":"/ Returns the corresponding glyph for a Unicode code point or a glyph id for this font.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":14356,"byte_end":14445,"line_start":339,"line_end":339,"column_start":5,"column_end":94}},{"value":"/ If id corresponds to a glyph identifier, the identifier must be valid (smaller than `self.glyph_count()`),","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":14450,"byte_end":14560,"line_start":340,"line_end":340,"column_start":5,"column_end":115}},{"value":"/ otherwise `None` is returned.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":14565,"byte_end":14598,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":14603,"byte_end":14606,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Note that code points without corresponding glyphs in this font map to the \"undef\" glyph, glyph 0.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":14611,"byte_end":14713,"line_start":343,"line_end":343,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15338,"byte_end":15348,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"name":"glyphs_for","qualname":"<Font>::glyphs_for","value":"fn glyphs_for<I>(&Self, I) -> GlyphIter<, I> where I: Iterator,\nI::Item: Into<CodepointOrGlyphId>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function.","sig":null,"attributes":[{"value":"/ A convenience function.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15056,"byte_end":15083,"line_start":351,"line_end":351,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15088,"byte_end":15091,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator that produces the glyphs corresponding to the code points or glyph ids produced","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15096,"byte_end":15199,"line_start":353,"line_end":353,"column_start":5,"column_end":108}},{"value":"/ by the given iterator `itr`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15204,"byte_end":15236,"line_start":354,"line_end":354,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15241,"byte_end":15244,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This is equivalent in behaviour to `itr.map(|c| font.glyph(c).unwrap())`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15249,"byte_end":15326,"line_start":356,"line_end":356,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17528,"byte_end":17534,"line_start":402,"line_end":402,"column_start":12,"column_end":18},"name":"layout","qualname":"<Font>::layout","value":"fn layout<'b, 'c>(&'b Self, &'c str, Scale, Point<f32>) -> LayoutIter","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for laying out glyphs for a string horizontally. It does not take control\n characters like line breaks into account, as treatment of these is likely to depend on the application.","sig":null,"attributes":[{"value":"/ A convenience function for laying out glyphs for a string horizontally. It does not take control","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15520,"byte_end":15620,"line_start":363,"line_end":363,"column_start":5,"column_end":105}},{"value":"/ characters like line breaks into account, as treatment of these is likely to depend on the application.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15625,"byte_end":15732,"line_start":364,"line_end":364,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15737,"byte_end":15740,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Note that this function does not perform Unicode normalisation. Composite characters (such as ö","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15745,"byte_end":15845,"line_start":366,"line_end":366,"column_start":5,"column_end":104}},{"value":"/ constructed from two code points, ¨ and o), will not be normalised to single code points. So if a font","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15850,"byte_end":15957,"line_start":367,"line_end":367,"column_start":5,"column_end":111}},{"value":"/ does not contain a glyph for each separate code point, but does contain one for the normalised single","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":15962,"byte_end":16067,"line_start":368,"line_end":368,"column_start":5,"column_end":110}},{"value":"/ code point (which is common), the desired glyph will not be produced, despite being present in the font.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16072,"byte_end":16180,"line_start":369,"line_end":369,"column_start":5,"column_end":113}},{"value":"/ Deal with this by performing Unicode normalisation on the input string before passing it to `layout`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16185,"byte_end":16290,"line_start":370,"line_end":370,"column_start":5,"column_end":110}},{"value":"/ The crate [unicode-normalization](http://crates.io/crates/unicode-normalization) is perfect for this","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16295,"byte_end":16399,"line_start":371,"line_end":371,"column_start":5,"column_end":109}},{"value":"/ purpose.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16404,"byte_end":16416,"line_start":372,"line_end":372,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16421,"byte_end":16424,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Calling this function is equivalent to a longer sequence of operations involving `glyphs_for`, e.g.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16429,"byte_end":16532,"line_start":374,"line_end":374,"column_start":5,"column_end":108}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16537,"byte_end":16540,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16545,"byte_end":16558,"line_start":376,"line_end":376,"column_start":5,"column_end":18}},{"value":"/ # use rusttype::*;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16563,"byte_end":16585,"line_start":377,"line_end":377,"column_start":5,"column_end":27}},{"value":"/ # let (scale, start) = (Scale::uniform(0.0), point(0.0, 0.0));","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16590,"byte_end":16656,"line_start":378,"line_end":378,"column_start":5,"column_end":71}},{"value":"/ # let font: Font = unimplemented!();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16661,"byte_end":16701,"line_start":379,"line_end":379,"column_start":5,"column_end":45}},{"value":"/ font.layout(\"Hello World!\", scale, start)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16706,"byte_end":16751,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"/ # ;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16756,"byte_end":16763,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16768,"byte_end":16775,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16780,"byte_end":16783,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ produces an iterator with behaviour equivalent to the following:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16788,"byte_end":16856,"line_start":384,"line_end":384,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16861,"byte_end":16864,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16869,"byte_end":16882,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/ # use rusttype::*;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16887,"byte_end":16909,"line_start":387,"line_end":387,"column_start":5,"column_end":27}},{"value":"/ # let (scale, start) = (Scale::uniform(0.0), point(0.0, 0.0));","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16914,"byte_end":16980,"line_start":388,"line_end":388,"column_start":5,"column_end":71}},{"value":"/ # let font: Font = unimplemented!();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":16985,"byte_end":17025,"line_start":389,"line_end":389,"column_start":5,"column_end":45}},{"value":"/ font.glyphs_for(\"Hello World!\".chars())","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17030,"byte_end":17073,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/     .scan((None, 0.0), |&mut (mut last, mut x), g| {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17078,"byte_end":17134,"line_start":391,"line_end":391,"column_start":5,"column_end":61}},{"value":"/         let g = g.scaled(scale);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17139,"byte_end":17175,"line_start":392,"line_end":392,"column_start":5,"column_end":41}},{"value":"/         let w = g.h_metrics().advance_width","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17180,"byte_end":17227,"line_start":393,"line_end":393,"column_start":5,"column_end":52}},{"value":"/             + last.map(|last| font.pair_kerning(scale, last, g.id())).unwrap_or(0.0);","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17232,"byte_end":17321,"line_start":394,"line_end":394,"column_start":5,"column_end":94}},{"value":"/         let next = g.positioned(start + vector(x, 0.0));","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17326,"byte_end":17386,"line_start":395,"line_end":395,"column_start":5,"column_end":65}},{"value":"/         last = Some(next.id());","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17391,"byte_end":17426,"line_start":396,"line_end":396,"column_start":5,"column_end":40}},{"value":"/         x += w;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17431,"byte_end":17450,"line_start":397,"line_end":397,"column_start":5,"column_end":24}},{"value":"/         Some(next)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17455,"byte_end":17477,"line_start":398,"line_end":398,"column_start":5,"column_end":27}},{"value":"/     })","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17482,"byte_end":17492,"line_start":399,"line_end":399,"column_start":5,"column_end":15}},{"value":"/ # ;","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17497,"byte_end":17504,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17509,"byte_end":17516,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17940,"byte_end":17952,"line_start":413,"line_end":413,"column_start":12,"column_end":24},"name":"pair_kerning","qualname":"<Font>::pair_kerning","value":"fn pair_kerning<A, B>(&Self, Scale, A, B) -> f32 where\nA: Into<CodepointOrGlyphId>, B: Into<CodepointOrGlyphId>","parent":null,"children":[],"decl_id":null,"docs":" Returns additional kerning to apply as well as that given by HMetrics for a particular pair of glyphs.\n","sig":null,"attributes":[{"value":"/ Returns additional kerning to apply as well as that given by HMetrics for a particular pair of glyphs.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":17822,"byte_end":17928,"line_start":412,"line_end":412,"column_start":5,"column_end":111}}]},{"kind":"Struct","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":18407,"byte_end":18416,"line_start":423,"line_end":423,"column_start":12,"column_end":21},"name":"GlyphIter","qualname":"::GlyphIter","value":"GlyphIter {  }","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":18641,"byte_end":18645,"line_start":429,"line_end":429,"column_start":8,"column_end":12},"name":"next","qualname":"<GlyphIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Glyph>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2141},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":18777,"byte_end":18787,"line_start":434,"line_end":434,"column_start":12,"column_end":22},"name":"LayoutIter","qualname":"::LayoutIter","value":"LayoutIter {  }","parent":null,"children":[{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":19038,"byte_end":19042,"line_start":444,"line_end":444,"column_start":8,"column_end":12},"name":"next","qualname":"<LayoutIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<PositionedGlyph>","parent":{"krate":2,"index":8293},"children":[],"decl_id":{"krate":2,"index":8295},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":19930,"byte_end":19934,"line_start":466,"line_end":466,"column_start":12,"column_end":16},"name":"font","qualname":"<Glyph>::font","value":"fn font(&Self) -> Option<&Font>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,\n it no longer has a reference to the font which it was created from (using `standalone()`). In which\n case, `None` is returned.\n","sig":null,"attributes":[{"value":"/ The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":19675,"byte_end":19776,"line_start":463,"line_end":463,"column_start":5,"column_end":106}},{"value":"/ it no longer has a reference to the font which it was created from (using `standalone()`). In which","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":19781,"byte_end":19884,"line_start":464,"line_end":464,"column_start":5,"column_end":108}},{"value":"/ case, `None` is returned.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":19889,"byte_end":19918,"line_start":465,"line_end":465,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":20154,"byte_end":20156,"line_start":473,"line_end":473,"column_start":12,"column_end":14},"name":"id","qualname":"<Glyph>::id","value":"fn id(&Self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[{"value":"/ The glyph identifier for this glyph.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":20102,"byte_end":20142,"line_start":472,"line_end":472,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":20472,"byte_end":20478,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"scaled","qualname":"<Glyph>::scaled","value":"fn scaled(Self, Scale) -> ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with scaling information, making methods that depend on the scale of the glyph\n available.\n","sig":null,"attributes":[{"value":"/ Augments this glyph with scaling information, making methods that depend on the scale of the glyph","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":20339,"byte_end":20441,"line_start":479,"line_end":479,"column_start":5,"column_end":107}},{"value":"/ available.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":20446,"byte_end":20460,"line_start":480,"line_end":480,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":21470,"byte_end":21480,"line_start":504,"line_end":504,"column_start":12,"column_end":22},"name":"standalone","qualname":"<Glyph>::standalone","value":"fn standalone(&Self) -> Glyph","parent":null,"children":[],"decl_id":null,"docs":" Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that owns its resources,\n extracted from the font. This glyph can outlive the font that it comes from.","sig":null,"attributes":[{"value":"/ Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that owns its resources,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":21163,"byte_end":21258,"line_start":500,"line_end":500,"column_start":5,"column_end":100}},{"value":"/ extracted from the font. This glyph can outlive the font that it comes from.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":21263,"byte_end":21343,"line_start":501,"line_end":501,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":21348,"byte_end":21351,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Calling `standalone()` on a standalone glyph shares the resources, and is equivalent to `clone()`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":21356,"byte_end":21458,"line_start":503,"line_end":503,"column_start":5,"column_end":107}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22538,"byte_end":22542,"line_start":529,"line_end":529,"column_start":5,"column_end":9},"name":"Line","qualname":"::Segment::Line","value":"Segment::Line(Line)","parent":{"krate":0,"index":2154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22543,"byte_end":22547,"line_start":529,"line_end":529,"column_start":10,"column_end":14},"name":"0","qualname":"::Segment::Line::0","value":"geometry::Line","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22554,"byte_end":22559,"line_start":530,"line_end":530,"column_start":5,"column_end":10},"name":"Curve","qualname":"::Segment::Curve","value":"Segment::Curve(Curve)","parent":{"krate":0,"index":2154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2160},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22560,"byte_end":22565,"line_start":530,"line_end":530,"column_start":11,"column_end":16},"name":"0","qualname":"::Segment::Curve::0","value":"geometry::Curve","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22524,"byte_end":22531,"line_start":528,"line_end":528,"column_start":10,"column_end":17},"name":"Segment","qualname":"::Segment","value":"enum Segment { Line(Line), Curve(Curve), }","parent":null,"children":[{"krate":0,"index":2155},{"krate":0,"index":2158}],"decl_id":null,"docs":" Part of a `Contour`, either a `Line` or a `Curve`.\n","sig":null,"attributes":[{"value":"/ Part of a `Contour`, either a `Line` or a `Curve`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22430,"byte_end":22484,"line_start":526,"line_end":526,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22662,"byte_end":22669,"line_start":534,"line_end":534,"column_start":12,"column_end":19},"name":"Contour","qualname":"::Contour","value":"Contour { segments }","parent":null,"children":[{"krate":0,"index":2167}],"decl_id":null,"docs":" A closed loop consisting of a sequence of `Segment`s.\n","sig":null,"attributes":[{"value":"/ A closed loop consisting of a sequence of `Segment`s.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22569,"byte_end":22626,"line_start":532,"line_end":532,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2167},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22680,"byte_end":22688,"line_start":535,"line_end":535,"column_start":9,"column_end":17},"name":"segments","qualname":"::Contour::segments","value":"std::vec::Vec<Segment>","parent":{"krate":0,"index":2166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22788,"byte_end":22790,"line_start":539,"line_end":539,"column_start":12,"column_end":14},"name":"id","qualname":"<ScaledGlyph>::id","value":"fn id(&Self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[{"value":"/ The glyph identifier for this glyph.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22736,"byte_end":22776,"line_start":538,"line_end":538,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":23096,"byte_end":23100,"line_start":545,"line_end":545,"column_start":12,"column_end":16},"name":"font","qualname":"<ScaledGlyph>::font","value":"fn font(&Self) -> Option<&Font>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,\n it no longer has a reference to the font which it was created from (using `standalone()`). In which\n case, `None` is returned.\n","sig":null,"attributes":[{"value":"/ The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22841,"byte_end":22942,"line_start":542,"line_end":542,"column_start":5,"column_end":106}},{"value":"/ it no longer has a reference to the font which it was created from (using `standalone()`). In which","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22947,"byte_end":23050,"line_start":543,"line_end":543,"column_start":5,"column_end":108}},{"value":"/ case, `None` is returned.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":23055,"byte_end":23084,"line_start":544,"line_end":544,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":23224,"byte_end":23237,"line_start":549,"line_end":549,"column_start":12,"column_end":25},"name":"into_unscaled","qualname":"<ScaledGlyph>::into_unscaled","value":"fn into_unscaled(Self) -> Glyph","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without the scaling\n","sig":null,"attributes":[{"value":"/ A reference to this glyph without the scaling","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":23163,"byte_end":23212,"line_start":548,"line_end":548,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":23335,"byte_end":23343,"line_start":553,"line_end":553,"column_start":12,"column_end":20},"name":"unscaled","qualname":"<ScaledGlyph>::unscaled","value":"fn unscaled(&Self) -> &Glyph","parent":null,"children":[],"decl_id":null,"docs":" Removes the scaling from this glyph\n","sig":null,"attributes":[{"value":"/ Removes the scaling from this glyph","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":23284,"byte_end":23323,"line_start":552,"line_end":552,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":23533,"byte_end":23543,"line_start":558,"line_end":558,"column_start":12,"column_end":22},"name":"positioned","qualname":"<ScaledGlyph>::positioned","value":"fn positioned(Self, Point<f32>) -> PositionedGlyph","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with positioning information, making methods that depend on the position of the\n glyph available.\n","sig":null,"attributes":[{"value":"/ Augments this glyph with positioning information, making methods that depend on the position of the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":23393,"byte_end":23496,"line_start":556,"line_end":556,"column_start":5,"column_end":108}},{"value":"/ glyph available.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":23501,"byte_end":23521,"line_start":557,"line_end":557,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":24653,"byte_end":24658,"line_start":584,"line_end":584,"column_start":12,"column_end":17},"name":"scale","qualname":"<ScaledGlyph>::scale","value":"fn scale(&Self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":24807,"byte_end":24816,"line_start":588,"line_end":588,"column_start":12,"column_end":21},"name":"h_metrics","qualname":"<ScaledGlyph>::h_metrics","value":"fn h_metrics(&Self) -> HMetrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for more detail.\n","sig":null,"attributes":[{"value":"/ Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for more detail.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":24710,"byte_end":24795,"line_start":587,"line_end":587,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":27567,"byte_end":27572,"line_start":652,"line_end":652,"column_start":12,"column_end":17},"name":"shape","qualname":"<ScaledGlyph>::shape","value":"fn shape(&Self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Produces a list of the contours that make up the shape of this glyph. Each contour consists of\n a sequence of segments. Each segment is either a straight `Line` or a `Curve`.","sig":null,"attributes":[{"value":"/ Produces a list of the contours that make up the shape of this glyph. Each contour consists of","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":27260,"byte_end":27358,"line_start":648,"line_end":648,"column_start":5,"column_end":103}},{"value":"/ a sequence of segments. Each segment is either a straight `Line` or a `Curve`.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":27363,"byte_end":27445,"line_start":649,"line_end":649,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":27450,"byte_end":27453,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ The winding of the produced contours is clockwise for closed shapes, anticlockwise for holes.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":27458,"byte_end":27555,"line_start":651,"line_end":651,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":27876,"byte_end":27894,"line_start":657,"line_end":657,"column_start":12,"column_end":30},"name":"exact_bounding_box","qualname":"<ScaledGlyph>::exact_bounding_box","value":"fn exact_bounding_box(&Self) -> Option<Rect<f32>>","parent":null,"children":[],"decl_id":null,"docs":" The bounding box of the shape of this glyph, not to be confused with `pixel_bounding_box`, the\n conservative pixel-boundary bounding box. The coordinates are relative to the glyph's origin.\n","sig":null,"attributes":[{"value":"/ The bounding box of the shape of this glyph, not to be confused with `pixel_bounding_box`, the","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":27664,"byte_end":27762,"line_start":655,"line_end":655,"column_start":5,"column_end":103}},{"value":"/ conservative pixel-boundary bounding box. The coordinates are relative to the glyph's origin.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":27767,"byte_end":27864,"line_start":656,"line_end":656,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":28719,"byte_end":28729,"line_start":673,"line_end":673,"column_start":12,"column_end":22},"name":"standalone","qualname":"<ScaledGlyph>::standalone","value":"fn standalone(&Self) -> ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See\n that function for more details.\n","sig":null,"attributes":[{"value":"/ Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":28565,"byte_end":28667,"line_start":671,"line_end":671,"column_start":5,"column_end":107}},{"value":"/ that function for more details.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":28672,"byte_end":28707,"line_start":672,"line_end":672,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":28996,"byte_end":28998,"line_start":684,"line_end":684,"column_start":12,"column_end":14},"name":"id","qualname":"<PositionedGlyph>::id","value":"fn id(&Self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[{"value":"/ The glyph identifier for this glyph.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":28944,"byte_end":28984,"line_start":683,"line_end":683,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":29305,"byte_end":29309,"line_start":690,"line_end":690,"column_start":12,"column_end":16},"name":"font","qualname":"<PositionedGlyph>::font","value":"fn font(&Self) -> Option<&Font>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,\n it no longer has a reference to the font which it was created from (using `standalone()`). In which\n case, `None` is returned.\n","sig":null,"attributes":[{"value":"/ The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":29050,"byte_end":29151,"line_start":687,"line_end":687,"column_start":5,"column_end":106}},{"value":"/ it no longer has a reference to the font which it was created from (using `standalone()`). In which","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":29156,"byte_end":29259,"line_start":688,"line_end":688,"column_start":5,"column_end":108}},{"value":"/ case, `None` is returned.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":29264,"byte_end":29293,"line_start":689,"line_end":689,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":29434,"byte_end":29446,"line_start":694,"line_end":694,"column_start":12,"column_end":24},"name":"unpositioned","qualname":"<PositionedGlyph>::unpositioned","value":"fn unpositioned(&Self) -> &ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without positioning\n","sig":null,"attributes":[{"value":"/ A reference to this glyph without positioning","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":29373,"byte_end":29422,"line_start":693,"line_end":693,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":29558,"byte_end":29575,"line_start":698,"line_end":698,"column_start":12,"column_end":29},"name":"into_unpositioned","qualname":"<PositionedGlyph>::into_unpositioned","value":"fn into_unpositioned(Self) -> ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" Removes the positioning from this glyph\n","sig":null,"attributes":[{"value":"/ Removes the positioning from this glyph","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":29503,"byte_end":29546,"line_start":697,"line_end":697,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":29828,"byte_end":29846,"line_start":703,"line_end":703,"column_start":12,"column_end":30},"name":"pixel_bounding_box","qualname":"<PositionedGlyph>::pixel_bounding_box","value":"fn pixel_bounding_box(&Self) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" The conservative pixel-boundary bounding box for this glyph. This is the smallest rectangle\n aligned to pixel boundaries that encloses the shape of this glyph at this position.\n","sig":null,"attributes":[{"value":"/ The conservative pixel-boundary bounding box for this glyph. This is the smallest rectangle","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":29629,"byte_end":29724,"line_start":701,"line_end":701,"column_start":5,"column_end":100}},{"value":"/ aligned to pixel boundaries that encloses the shape of this glyph at this position.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":29729,"byte_end":29816,"line_start":702,"line_end":702,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30008,"byte_end":30013,"line_start":707,"line_end":707,"column_start":12,"column_end":17},"name":"shape","qualname":"<PositionedGlyph>::shape","value":"fn shape(&Self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `ScaledGlyph::shape()`, but with the position of the glyph taken into account.\n","sig":null,"attributes":[{"value":"/ Similar to `ScaledGlyph::shape()`, but with the position of the glyph taken into account.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":29903,"byte_end":29996,"line_start":706,"line_end":706,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30113,"byte_end":30118,"line_start":710,"line_end":710,"column_start":12,"column_end":17},"name":"scale","qualname":"<PositionedGlyph>::scale","value":"fn scale(&Self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30180,"byte_end":30188,"line_start":713,"line_end":713,"column_start":12,"column_end":20},"name":"position","qualname":"<PositionedGlyph>::position","value":"fn position(&Self) -> Point<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30952,"byte_end":30956,"line_start":734,"line_end":734,"column_start":12,"column_end":16},"name":"draw","qualname":"<PositionedGlyph>::draw","value":"fn draw<O>(&Self, O) where O: FnMut(u32, u32, f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rasterises this glyph. For each pixel in the rect given by `pixel_bounding_box()`, `o` is called:","sig":null,"attributes":[{"value":"/ Rasterises this glyph. For each pixel in the rect given by `pixel_bounding_box()`, `o` is called:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30244,"byte_end":30345,"line_start":716,"line_end":716,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30350,"byte_end":30353,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30358,"byte_end":30371,"line_start":718,"line_end":718,"column_start":5,"column_end":18}},{"value":"/ o(x, y, v)","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30376,"byte_end":30390,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30395,"byte_end":30402,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30407,"byte_end":30410,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ where `x` and `y` are the coordinates of the pixel relative to the `min` coordinates of the bounding box,","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30415,"byte_end":30524,"line_start":722,"line_end":722,"column_start":5,"column_end":114}},{"value":"/ and `v` is the analytically calculated coverage of the pixel by the shape of the glyph.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30529,"byte_end":30620,"line_start":723,"line_end":723,"column_start":5,"column_end":96}},{"value":"/ Calls to `o` proceed in horizontal scanline order, similar to this pseudo-code:","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30625,"byte_end":30708,"line_start":724,"line_end":724,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30713,"byte_end":30716,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30721,"byte_end":30734,"line_start":726,"line_end":726,"column_start":5,"column_end":18}},{"value":"/ let bb = glyph.pixel_bounding_box();","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30739,"byte_end":30779,"line_start":727,"line_end":727,"column_start":5,"column_end":45}},{"value":"/ for y in 0..bb.height() {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30784,"byte_end":30813,"line_start":728,"line_end":728,"column_start":5,"column_end":34}},{"value":"/     for x in 0..bb.width() {","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30818,"byte_end":30850,"line_start":729,"line_end":729,"column_start":5,"column_end":37}},{"value":"/         o(x, y, calc_coverage(&glyph, x, y));","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30855,"byte_end":30904,"line_start":730,"line_end":730,"column_start":5,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30909,"byte_end":30918,"line_start":731,"line_end":731,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30923,"byte_end":30928,"line_start":732,"line_end":732,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":30933,"byte_end":30940,"line_start":733,"line_end":733,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":32851,"byte_end":32861,"line_start":779,"line_end":779,"column_start":12,"column_end":22},"name":"standalone","qualname":"<PositionedGlyph>::standalone","value":"fn standalone(&Self) -> PositionedGlyph","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See\n that function for more details.\n","sig":null,"attributes":[{"value":"/ Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":32697,"byte_end":32799,"line_start":777,"line_end":777,"column_start":5,"column_end":107}},{"value":"/ that function for more details.","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":32804,"byte_end":32839,"line_start":778,"line_end":778,"column_start":5,"column_end":40}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34415,"byte_end":34420,"line_start":40,"line_end":40,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34599,"byte_end":34605,"line_start":47,"line_end":47,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34785,"byte_end":34791,"line_start":54,"line_end":54,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34953,"byte_end":34959,"line_start":61,"line_end":61,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":35289,"byte_end":35295,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":35625,"byte_end":35631,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":35961,"byte_end":35967,"line_start":103,"line_end":103,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36326,"byte_end":36331,"line_start":117,"line_end":117,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36519,"byte_end":36524,"line_start":124,"line_end":124,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36711,"byte_end":36717,"line_start":131,"line_end":131,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37459,"byte_end":37463,"line_start":154,"line_end":154,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37973,"byte_end":37977,"line_start":176,"line_end":176,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":38377,"byte_end":38382,"line_start":195,"line_end":195,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":39842,"byte_end":39847,"line_start":241,"line_end":241,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":40344,"byte_end":40348,"line_start":262,"line_end":262,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":41239,"byte_end":41260,"line_start":299,"line_end":299,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/rasterizer.rs","byte_start":43199,"byte_end":43212,"line_start":21,"line_end":21,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/rasterizer.rs","byte_start":44313,"byte_end":44317,"line_start":56,"line_end":56,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/rasterizer.rs","byte_start":45071,"byte_end":45085,"line_start":92,"line_end":92,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/rasterizer.rs","byte_start":47787,"byte_end":47792,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":60967,"byte_end":60975,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":61454,"byte_end":61466,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":61760,"byte_end":61769,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":62643,"byte_end":62647,"line_start":118,"line_end":118,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":62697,"byte_end":62701,"line_start":119,"line_end":119,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":62724,"byte_end":62728,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":66998,"byte_end":67005,"line_start":235,"line_end":235,"column_start":39,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67080,"byte_end":67087,"line_start":236,"line_end":236,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67235,"byte_end":67242,"line_start":243,"line_end":243,"column_start":9,"column_end":16},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67334,"byte_end":67341,"line_start":246,"line_end":246,"column_start":8,"column_end":15},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67439,"byte_end":67446,"line_start":248,"line_end":248,"column_start":8,"column_end":15},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67528,"byte_end":67535,"line_start":250,"line_end":250,"column_start":8,"column_end":15},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67591,"byte_end":67598,"line_start":252,"line_end":252,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67795,"byte_end":67802,"line_start":260,"line_end":260,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":68033,"byte_end":68040,"line_start":269,"line_end":269,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":69903,"byte_end":69910,"line_start":345,"line_end":345,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":70422,"byte_end":70429,"line_start":363,"line_end":363,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":71005,"byte_end":71012,"line_start":384,"line_end":384,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":71937,"byte_end":71944,"line_start":420,"line_end":420,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":72401,"byte_end":72408,"line_start":437,"line_end":437,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":73055,"byte_end":73062,"line_start":460,"line_end":460,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":73862,"byte_end":73869,"line_start":488,"line_end":488,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":75381,"byte_end":75388,"line_start":534,"line_end":534,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":77647,"byte_end":77654,"line_start":597,"line_end":597,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":78437,"byte_end":78443,"line_start":626,"line_end":626,"column_start":33,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":78493,"byte_end":78499,"line_start":627,"line_end":627,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":78584,"byte_end":78590,"line_start":633,"line_end":633,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":78702,"byte_end":78708,"line_start":639,"line_end":639,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":79420,"byte_end":79426,"line_start":661,"line_end":661,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":79649,"byte_end":79655,"line_start":669,"line_end":669,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":80083,"byte_end":80089,"line_start":684,"line_end":684,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":80535,"byte_end":80541,"line_start":699,"line_end":699,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":81429,"byte_end":81435,"line_start":733,"line_end":733,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":82885,"byte_end":82891,"line_start":774,"line_end":774,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":85281,"byte_end":85287,"line_start":842,"line_end":842,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":85710,"byte_end":85716,"line_start":855,"line_end":855,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":86023,"byte_end":86029,"line_start":866,"line_end":866,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":86350,"byte_end":86356,"line_start":876,"line_end":876,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":86679,"byte_end":86685,"line_start":885,"line_end":885,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":88238,"byte_end":88244,"line_start":932,"line_end":932,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":92981,"byte_end":92987,"line_start":1065,"line_end":1065,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":101026,"byte_end":101034,"line_start":66,"line_end":66,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":101235,"byte_end":101243,"line_start":75,"line_end":75,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":103808,"byte_end":103816,"line_start":143,"line_end":143,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107166,"byte_end":107174,"line_start":262,"line_end":262,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":119304,"byte_end":119308,"line_start":601,"line_end":601,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":119722,"byte_end":119726,"line_start":618,"line_end":618,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120015,"byte_end":120019,"line_start":629,"line_end":629,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120103,"byte_end":120107,"line_start":633,"line_end":633,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120521,"byte_end":120528,"line_start":651,"line_end":651,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120950,"byte_end":120957,"line_start":668,"line_end":668,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":121250,"byte_end":121257,"line_start":679,"line_end":679,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":121344,"byte_end":121352,"line_start":683,"line_end":683,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":121820,"byte_end":121828,"line_start":701,"line_end":701,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":122313,"byte_end":122321,"line_start":716,"line_end":716,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":123739,"byte_end":123747,"line_start":760,"line_end":760,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125035,"byte_end":125043,"line_start":798,"line_end":798,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125126,"byte_end":125130,"line_start":802,"line_end":802,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125389,"byte_end":125393,"line_start":814,"line_end":814,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125546,"byte_end":125550,"line_start":820,"line_end":820,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125651,"byte_end":125655,"line_start":826,"line_end":826,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125808,"byte_end":125814,"line_start":834,"line_end":834,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126073,"byte_end":126079,"line_start":846,"line_end":846,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126232,"byte_end":126238,"line_start":852,"line_end":852,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126339,"byte_end":126345,"line_start":858,"line_end":858,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126502,"byte_end":126507,"line_start":866,"line_end":866,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126760,"byte_end":126765,"line_start":878,"line_end":878,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":127773,"byte_end":127778,"line_start":910,"line_end":910,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":128008,"byte_end":128013,"line_start":920,"line_end":920,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":129004,"byte_end":129009,"line_start":952,"line_end":952,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":129185,"byte_end":129193,"line_start":961,"line_end":961,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":129455,"byte_end":129463,"line_start":973,"line_end":973,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":130531,"byte_end":130539,"line_start":1005,"line_end":1005,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":130773,"byte_end":130781,"line_start":1015,"line_end":1015,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":131848,"byte_end":131856,"line_start":1047,"line_end":1047,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132062,"byte_end":132070,"line_start":1055,"line_end":1055,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132298,"byte_end":132306,"line_start":1064,"line_end":1064,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132504,"byte_end":132512,"line_start":1070,"line_end":1070,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132670,"byte_end":132678,"line_start":1078,"line_end":1078,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132804,"byte_end":132812,"line_start":1084,"line_end":1084,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133000,"byte_end":133008,"line_start":1091,"line_end":1091,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133069,"byte_end":133077,"line_start":1093,"line_end":1093,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133256,"byte_end":133264,"line_start":1100,"line_end":1100,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133425,"byte_end":133433,"line_start":1107,"line_end":1107,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133610,"byte_end":133618,"line_start":1113,"line_end":1113,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":134968,"byte_end":134976,"line_start":1165,"line_end":1165,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138355,"byte_end":138360,"line_start":1296,"line_end":1296,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":139113,"byte_end":139124,"line_start":1316,"line_end":1316,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":140505,"byte_end":140518,"line_start":1359,"line_end":1359,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147708,"byte_end":147716,"line_start":85,"line_end":85,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148072,"byte_end":148080,"line_start":101,"line_end":101,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148603,"byte_end":148611,"line_start":123,"line_end":123,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149908,"byte_end":149916,"line_start":156,"line_end":156,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159229,"byte_end":159237,"line_start":492,"line_end":492,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159424,"byte_end":159432,"line_start":500,"line_end":500,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160135,"byte_end":160143,"line_start":530,"line_end":530,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160356,"byte_end":160364,"line_start":539,"line_end":539,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160519,"byte_end":160527,"line_start":545,"line_end":545,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163356,"byte_end":163364,"line_start":639,"line_end":639,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163512,"byte_end":163516,"line_start":645,"line_end":645,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163637,"byte_end":163641,"line_start":650,"line_end":650,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163874,"byte_end":163878,"line_start":660,"line_end":660,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164007,"byte_end":164011,"line_start":665,"line_end":665,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164093,"byte_end":164101,"line_start":670,"line_end":670,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164334,"byte_end":164342,"line_start":680,"line_end":680,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164475,"byte_end":164483,"line_start":685,"line_end":685,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164562,"byte_end":164567,"line_start":690,"line_end":690,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164690,"byte_end":164695,"line_start":695,"line_end":695,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164856,"byte_end":164861,"line_start":702,"line_end":702,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":165299,"byte_end":165309,"line_start":717,"line_end":717,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":165493,"byte_end":165503,"line_start":725,"line_end":725,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":166140,"byte_end":166159,"line_start":750,"line_end":750,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":166361,"byte_end":166380,"line_start":758,"line_end":758,"column_start":31,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":166915,"byte_end":166927,"line_start":779,"line_end":779,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":167115,"byte_end":167127,"line_start":787,"line_end":787,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":167953,"byte_end":167958,"line_start":818,"line_end":818,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":168132,"byte_end":168137,"line_start":826,"line_end":826,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":57646,"byte_end":57652,"line_start":45,"line_end":45,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":57928,"byte_end":57934,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":57959,"byte_end":57965,"line_start":53,"line_end":53,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58376,"byte_end":58382,"line_start":70,"line_end":70,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58546,"byte_end":58552,"line_start":79,"line_end":79,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":59031,"byte_end":59038,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":59150,"byte_end":59157,"line_start":104,"line_end":104,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":171228,"byte_end":171238,"line_start":39,"line_end":39,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":171268,"byte_end":171278,"line_start":41,"line_end":41,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":171400,"byte_end":171410,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":172134,"byte_end":172145,"line_start":69,"line_end":69,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":172797,"byte_end":172808,"line_start":93,"line_end":93,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":173002,"byte_end":173013,"line_start":101,"line_end":101,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174696,"byte_end":174701,"line_start":157,"line_end":157,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6119,"byte_end":6130,"line_start":125,"line_end":125,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6363,"byte_end":6374,"line_start":134,"line_end":134,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6503,"byte_end":6514,"line_start":139,"line_end":139,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6654,"byte_end":6665,"line_start":144,"line_end":144,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6808,"byte_end":6819,"line_start":149,"line_end":149,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10891,"byte_end":10896,"line_start":244,"line_end":244,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11057,"byte_end":11066,"line_start":250,"line_end":250,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11166,"byte_end":11184,"line_start":255,"line_end":255,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11309,"byte_end":11327,"line_start":260,"line_end":260,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11445,"byte_end":11463,"line_start":265,"line_end":265,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11563,"byte_end":11577,"line_start":270,"line_end":270,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":13359,"byte_end":13372,"line_start":309,"line_end":309,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":13593,"byte_end":13597,"line_start":318,"line_end":318,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":18548,"byte_end":18557,"line_start":427,"line_end":427,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":18973,"byte_end":18983,"line_start":442,"line_end":442,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":19561,"byte_end":19566,"line_start":457,"line_end":457,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22714,"byte_end":22725,"line_start":537,"line_end":537,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":28918,"byte_end":28933,"line_start":682,"line_end":682,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":5206,"byte_end":5215,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1366}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34415,"byte_end":34420,"line_start":40,"line_end":40,"column_start":42,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1622},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34599,"byte_end":34605,"line_start":47,"line_end":47,"column_start":42,"column_end":48},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":3236}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34785,"byte_end":34791,"line_start":54,"line_end":54,"column_start":42,"column_end":48},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":34953,"byte_end":34959,"line_start":61,"line_end":61,"column_start":24,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":3246}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":35289,"byte_end":35295,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":3246}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":35625,"byte_end":35631,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":35961,"byte_end":35967,"line_start":103,"line_end":103,"column_start":24,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36326,"byte_end":36331,"line_start":117,"line_end":117,"column_start":53,"column_end":58},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1622},"to":{"krate":2,"index":3236}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36519,"byte_end":36524,"line_start":124,"line_end":124,"column_start":53,"column_end":58},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1622},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":36711,"byte_end":36717,"line_start":131,"line_end":131,"column_start":52,"column_end":58},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":3236}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37459,"byte_end":37463,"line_start":154,"line_end":154,"column_start":36,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":37973,"byte_end":37977,"line_start":176,"line_end":176,"column_start":27,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1688},"to":{"krate":0,"index":66}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":38377,"byte_end":38382,"line_start":195,"line_end":195,"column_start":27,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1703},"to":{"krate":0,"index":66}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":39632,"byte_end":39637,"line_start":233,"line_end":233,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":3173},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":39842,"byte_end":39847,"line_start":241,"line_end":241,"column_start":14,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1703},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":40344,"byte_end":40348,"line_start":262,"line_end":262,"column_start":14,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1688},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/geometry.rs","byte_start":41239,"byte_end":41260,"line_start":299,"line_end":299,"column_start":6,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/rasterizer.rs","byte_start":42808,"byte_end":42813,"line_start":3,"line_end":3,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":3173},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/rasterizer.rs","byte_start":43199,"byte_end":43212,"line_start":21,"line_end":21,"column_start":19,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1771},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/rasterizer.rs","byte_start":44313,"byte_end":44317,"line_start":56,"line_end":56,"column_start":18,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1688},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/rasterizer.rs","byte_start":45071,"byte_end":45085,"line_start":92,"line_end":92,"column_start":19,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/rasterizer.rs","byte_start":47787,"byte_end":47792,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1703},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":60967,"byte_end":60975,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":61454,"byte_end":61466,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":61760,"byte_end":61769,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":62643,"byte_end":62647,"line_start":118,"line_end":118,"column_start":40,"column_end":44},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":235},"to":{"krate":2,"index":3180}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":62697,"byte_end":62701,"line_start":119,"line_end":119,"column_start":40,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":235},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":62724,"byte_end":62728,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":66998,"byte_end":67005,"line_start":235,"line_end":235,"column_start":39,"column_end":46},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":3178}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67080,"byte_end":67087,"line_start":236,"line_end":236,"column_start":40,"column_end":47},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67235,"byte_end":67242,"line_start":243,"line_end":243,"column_start":9,"column_end":16},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":3180}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67334,"byte_end":67341,"line_start":246,"line_end":246,"column_start":8,"column_end":15},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67439,"byte_end":67446,"line_start":248,"line_end":248,"column_start":8,"column_end":15},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67528,"byte_end":67535,"line_start":250,"line_end":250,"column_start":8,"column_end":15},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67591,"byte_end":67598,"line_start":252,"line_end":252,"column_start":24,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":67795,"byte_end":67802,"line_start":260,"line_end":260,"column_start":16,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":68033,"byte_end":68040,"line_start":269,"line_end":269,"column_start":30,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":69903,"byte_end":69910,"line_start":345,"line_end":345,"column_start":12,"column_end":19},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":70422,"byte_end":70429,"line_start":363,"line_end":363,"column_start":12,"column_end":19},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":71005,"byte_end":71012,"line_start":384,"line_end":384,"column_start":22,"column_end":29},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":71937,"byte_end":71944,"line_start":420,"line_end":420,"column_start":30,"column_end":37},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":72401,"byte_end":72408,"line_start":437,"line_end":437,"column_start":30,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":73055,"byte_end":73062,"line_start":460,"line_end":460,"column_start":16,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":73862,"byte_end":73869,"line_start":488,"line_end":488,"column_start":16,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":75381,"byte_end":75388,"line_start":534,"line_end":534,"column_start":16,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":77647,"byte_end":77654,"line_start":597,"line_end":597,"column_start":24,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":78437,"byte_end":78443,"line_start":626,"line_end":626,"column_start":33,"column_end":39},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3178}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":78493,"byte_end":78499,"line_start":627,"line_end":627,"column_start":34,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":78584,"byte_end":78590,"line_start":633,"line_end":633,"column_start":18,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":78702,"byte_end":78708,"line_start":639,"line_end":639,"column_start":34,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":79420,"byte_end":79426,"line_start":661,"line_end":661,"column_start":13,"column_end":19},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2820}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":79649,"byte_end":79655,"line_start":669,"line_end":669,"column_start":9,"column_end":15},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":80083,"byte_end":80089,"line_start":684,"line_end":684,"column_start":9,"column_end":15},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":80535,"byte_end":80541,"line_start":699,"line_end":699,"column_start":9,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":81429,"byte_end":81435,"line_start":733,"line_end":733,"column_start":16,"column_end":22},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":82885,"byte_end":82891,"line_start":774,"line_end":774,"column_start":16,"column_end":22},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":85281,"byte_end":85287,"line_start":842,"line_end":842,"column_start":9,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":85710,"byte_end":85716,"line_start":855,"line_end":855,"column_start":9,"column_end":15},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":86023,"byte_end":86029,"line_start":866,"line_end":866,"column_start":9,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":86350,"byte_end":86356,"line_start":876,"line_end":876,"column_start":26,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":86679,"byte_end":86685,"line_start":885,"line_end":885,"column_start":16,"column_end":22},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":88238,"byte_end":88244,"line_start":932,"line_end":932,"column_start":16,"column_end":22},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/node.rs","byte_start":92981,"byte_end":92987,"line_start":1065,"line_end":1065,"column_start":9,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":101026,"byte_end":101034,"line_start":66,"line_end":66,"column_start":21,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":101235,"byte_end":101243,"line_start":75,"line_end":75,"column_start":36,"column_end":44},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":103808,"byte_end":103816,"line_start":143,"line_end":143,"column_start":42,"column_end":50},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":658},"to":{"krate":0,"index":1360}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":107166,"byte_end":107174,"line_start":262,"line_end":262,"column_start":17,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":119304,"byte_end":119308,"line_start":601,"line_end":601,"column_start":37,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":682},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":119722,"byte_end":119726,"line_start":618,"line_end":618,"column_start":48,"column_end":52},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":682},"to":{"krate":2,"index":8142}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120015,"byte_end":120019,"line_start":629,"line_end":629,"column_start":46,"column_end":50},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":682},"to":{"krate":2,"index":8167}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120103,"byte_end":120107,"line_start":633,"line_end":633,"column_start":26,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":682},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120521,"byte_end":120528,"line_start":651,"line_end":651,"column_start":37,"column_end":44},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":120950,"byte_end":120957,"line_start":668,"line_end":668,"column_start":48,"column_end":55},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":8142}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":121250,"byte_end":121257,"line_start":679,"line_end":679,"column_start":46,"column_end":53},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":8167}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":121344,"byte_end":121352,"line_start":683,"line_end":683,"column_start":29,"column_end":37},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":8098}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":121820,"byte_end":121828,"line_start":701,"line_end":701,"column_start":21,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":694},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":122313,"byte_end":122321,"line_start":716,"line_end":716,"column_start":25,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":694},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":123739,"byte_end":123747,"line_start":760,"line_end":760,"column_start":36,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":694},"to":{"krate":2,"index":8142}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125035,"byte_end":125043,"line_start":798,"line_end":798,"column_start":34,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":694},"to":{"krate":2,"index":8167}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125126,"byte_end":125130,"line_start":802,"line_end":802,"column_start":29,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125389,"byte_end":125393,"line_start":814,"line_end":814,"column_start":40,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":8142}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125546,"byte_end":125550,"line_start":820,"line_end":820,"column_start":38,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":8167}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125651,"byte_end":125655,"line_start":826,"line_end":826,"column_start":26,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":125808,"byte_end":125814,"line_start":834,"line_end":834,"column_start":29,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126073,"byte_end":126079,"line_start":846,"line_end":846,"column_start":40,"column_end":46},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":8142}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126232,"byte_end":126238,"line_start":852,"line_end":852,"column_start":38,"column_end":44},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":8167}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126339,"byte_end":126345,"line_start":858,"line_end":858,"column_start":26,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126502,"byte_end":126507,"line_start":866,"line_end":866,"column_start":29,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":126760,"byte_end":126765,"line_start":878,"line_end":878,"column_start":16,"column_end":21},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":127773,"byte_end":127778,"line_start":910,"line_end":910,"column_start":40,"column_end":45},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":8142}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":128008,"byte_end":128013,"line_start":920,"line_end":920,"column_start":16,"column_end":21},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":129004,"byte_end":129009,"line_start":952,"line_end":952,"column_start":26,"column_end":31},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":129185,"byte_end":129193,"line_start":961,"line_end":961,"column_start":29,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":129455,"byte_end":129463,"line_start":973,"line_end":973,"column_start":16,"column_end":24},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":130531,"byte_end":130539,"line_start":1005,"line_end":1005,"column_start":40,"column_end":48},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":8142}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":130773,"byte_end":130781,"line_start":1015,"line_end":1015,"column_start":16,"column_end":24},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":131848,"byte_end":131856,"line_start":1047,"line_end":1047,"column_start":42,"column_end":50},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":8094}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132062,"byte_end":132070,"line_start":1055,"line_end":1055,"column_start":36,"column_end":44},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":8107}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132298,"byte_end":132306,"line_start":1064,"line_end":1064,"column_start":61,"column_end":69},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":8107}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132504,"byte_end":132512,"line_start":1070,"line_end":1070,"column_start":33,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":10222}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132670,"byte_end":132678,"line_start":1078,"line_end":1078,"column_start":29,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":3146}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":132804,"byte_end":132812,"line_start":1084,"line_end":1084,"column_start":48,"column_end":56},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2820}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133000,"byte_end":133008,"line_start":1091,"line_end":1091,"column_start":27,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2825}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133069,"byte_end":133077,"line_start":1093,"line_end":1093,"column_start":51,"column_end":59},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2866}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133256,"byte_end":133264,"line_start":1100,"line_end":1100,"column_start":30,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2856}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133425,"byte_end":133433,"line_start":1107,"line_end":1107,"column_start":36,"column_end":44},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":10009}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":133610,"byte_end":133618,"line_start":1113,"line_end":1113,"column_start":49,"column_end":57},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":3472}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":134968,"byte_end":134976,"line_start":1165,"line_end":1165,"column_start":12,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":138355,"byte_end":138360,"line_start":1296,"line_end":1296,"column_start":21,"column_end":26},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":139113,"byte_end":139124,"line_start":1316,"line_end":1316,"column_start":21,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/map.rs","byte_start":140505,"byte_end":140518,"line_start":1359,"line_end":1359,"column_start":21,"column_end":34},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":147708,"byte_end":147716,"line_start":85,"line_end":85,"column_start":14,"column_end":22},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148072,"byte_end":148080,"line_start":101,"line_end":101,"column_start":9,"column_end":17},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":148603,"byte_end":148611,"line_start":123,"line_end":123,"column_start":14,"column_end":22},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":149908,"byte_end":149916,"line_start":156,"line_end":156,"column_start":14,"column_end":22},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159229,"byte_end":159237,"line_start":492,"line_end":492,"column_start":34,"column_end":42},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1785},"to":{"krate":2,"index":8094}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":159424,"byte_end":159432,"line_start":500,"line_end":500,"column_start":26,"column_end":34},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1785},"to":{"krate":2,"index":8098}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160135,"byte_end":160143,"line_start":530,"line_end":530,"column_start":28,"column_end":36},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1785},"to":{"krate":2,"index":8107}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160356,"byte_end":160364,"line_start":539,"line_end":539,"column_start":48,"column_end":56},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1785},"to":{"krate":2,"index":8107}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":160519,"byte_end":160527,"line_start":545,"line_end":545,"column_start":26,"column_end":34},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1785},"to":{"krate":2,"index":3146}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163356,"byte_end":163364,"line_start":639,"line_end":639,"column_start":26,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1785},"to":{"krate":2,"index":10009}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163512,"byte_end":163516,"line_start":645,"line_end":645,"column_start":23,"column_end":27},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1122},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163637,"byte_end":163641,"line_start":650,"line_end":650,"column_start":26,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1122},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":163874,"byte_end":163878,"line_start":660,"line_end":660,"column_start":37,"column_end":41},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1122},"to":{"krate":2,"index":8142}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164007,"byte_end":164011,"line_start":665,"line_end":665,"column_start":35,"column_end":39},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1122},"to":{"krate":2,"index":8167}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164093,"byte_end":164101,"line_start":670,"line_end":670,"column_start":22,"column_end":30},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1126},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164334,"byte_end":164342,"line_start":680,"line_end":680,"column_start":33,"column_end":41},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1126},"to":{"krate":2,"index":8142}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164475,"byte_end":164483,"line_start":685,"line_end":685,"column_start":31,"column_end":39},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1126},"to":{"krate":2,"index":8167}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164562,"byte_end":164567,"line_start":690,"line_end":690,"column_start":23,"column_end":28},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1129},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164690,"byte_end":164695,"line_start":695,"line_end":695,"column_start":26,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1129},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":164856,"byte_end":164861,"line_start":702,"line_end":702,"column_start":37,"column_end":42},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1129},"to":{"krate":2,"index":8142}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":165299,"byte_end":165309,"line_start":717,"line_end":717,"column_start":23,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1133},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":165493,"byte_end":165503,"line_start":725,"line_end":725,"column_start":31,"column_end":41},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1133},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":166140,"byte_end":166159,"line_start":750,"line_end":750,"column_start":23,"column_end":42},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1138},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":166361,"byte_end":166380,"line_start":758,"line_end":758,"column_start":31,"column_end":50},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1138},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":166915,"byte_end":166927,"line_start":779,"line_end":779,"column_start":23,"column_end":35},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":167115,"byte_end":167127,"line_start":787,"line_end":787,"column_start":31,"column_end":43},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":167953,"byte_end":167958,"line_start":818,"line_end":818,"column_start":23,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":2790}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/set.rs","byte_start":168132,"byte_end":168137,"line_start":826,"line_end":826,"column_start":31,"column_end":36},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":57646,"byte_end":57652,"line_start":45,"line_end":45,"column_start":40,"column_end":46},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1333},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":57928,"byte_end":57934,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1333},"to":{"krate":2,"index":3180}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":57959,"byte_end":57965,"line_start":53,"line_end":53,"column_start":17,"column_end":23},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58376,"byte_end":58382,"line_start":70,"line_end":70,"column_start":26,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1333},"to":{"krate":2,"index":3387}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":58546,"byte_end":58552,"line_start":79,"line_end":79,"column_start":26,"column_end":32},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1333},"to":{"krate":2,"index":10026}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":59031,"byte_end":59038,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/support/bst/mod.rs","byte_start":59150,"byte_end":59157,"line_start":104,"line_end":104,"column_start":31,"column_end":38},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1845},"to":{"krate":2,"index":3387}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":171228,"byte_end":171238,"line_start":39,"line_end":39,"column_start":25,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":2825}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":171268,"byte_end":171278,"line_start":41,"line_end":41,"column_start":26,"column_end":36},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":2856}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":171400,"byte_end":171410,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":172134,"byte_end":172145,"line_start":69,"line_end":69,"column_start":6,"column_end":17},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":172797,"byte_end":172808,"line_start":93,"line_end":93,"column_start":44,"column_end":55},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1894},"to":{"krate":2,"index":3472}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":173002,"byte_end":173013,"line_start":101,"line_end":101,"column_start":47,"column_end":58},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1894},"to":{"krate":2,"index":3476}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/gpu_cache.rs","byte_start":174696,"byte_end":174701,"line_start":157,"line_end":157,"column_start":6,"column_end":11},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6119,"byte_end":6130,"line_start":125,"line_end":125,"column_start":32,"column_end":43},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1963},"to":{"krate":2,"index":3387}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6363,"byte_end":6374,"line_start":134,"line_end":134,"column_start":29,"column_end":40},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1963},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6503,"byte_end":6514,"line_start":139,"line_end":139,"column_start":31,"column_end":42},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1963},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6654,"byte_end":6665,"line_start":144,"line_end":144,"column_start":26,"column_end":37},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1963},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":6808,"byte_end":6819,"line_start":149,"line_end":149,"column_start":24,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1963},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":10891,"byte_end":10896,"line_start":244,"line_end":244,"column_start":6,"column_end":11},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11057,"byte_end":11066,"line_start":250,"line_end":250,"column_start":21,"column_end":30},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1977},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11166,"byte_end":11184,"line_start":255,"line_end":255,"column_start":26,"column_end":44},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11309,"byte_end":11327,"line_start":260,"line_end":260,"column_start":24,"column_end":42},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11445,"byte_end":11463,"line_start":265,"line_end":265,"column_start":21,"column_end":39},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":11563,"byte_end":11577,"line_start":270,"line_end":270,"column_start":10,"column_end":24},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":13359,"byte_end":13372,"line_start":309,"line_end":309,"column_start":23,"column_end":36},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1530},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":13593,"byte_end":13597,"line_start":318,"line_end":318,"column_start":10,"column_end":14},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":18548,"byte_end":18557,"line_start":427,"line_end":427,"column_start":36,"column_end":45},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2132},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":18973,"byte_end":18983,"line_start":442,"line_end":442,"column_start":27,"column_end":37},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2141},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":19561,"byte_end":19566,"line_start":457,"line_end":457,"column_start":10,"column_end":15},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":22714,"byte_end":22725,"line_start":537,"line_end":537,"column_start":10,"column_end":21},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/qinjianquan/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.2.4/src/lib.rs","byte_start":28918,"byte_end":28933,"line_start":682,"line_end":682,"column_start":10,"column_end":25},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2110},"to":{"krate":4294967295,"index":4294967295}}]}